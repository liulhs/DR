{"docstore/metadata": {"0d424c81-acb7-4efa-8b9c-a7d76ce226f3": {"doc_hash": "06f7ca04ace271ee701a902c39e2fff3a0b12f3f3f35691bbe591b1fb895be52"}, "a2b03b32-0e7c-4bcf-89ae-97566828528e": {"doc_hash": "f9d6b7936736eb6d2a87a184805fcd345b713054c265becd5cc67ff4a0f71de8"}, "efa9bef2-ee71-472c-ac87-b4f01b33f6d9": {"doc_hash": "96c74917e7c35784ea57b0777ece2e058fee5a2a54f0ebc1849e7f5d6d927946"}, "a4e343d8-c84b-473f-8413-4d02662d8aa9": {"doc_hash": "ad7ffb52e045eb784a8d8b7e54c7c74a01ca93a8928a4e55b6646f1d0dfc8360"}, "7cdfdb2a-b39a-47c4-9444-6e39be015900": {"doc_hash": "1bf60889ecd6a5b7b8e9c08f3f7d011635c47883fc1b360d128d8f1e703526ea"}, "10f7a796-383c-4237-8197-5fd5d7aef48f": {"doc_hash": "08f9013051fdcf72a3c8a2ff169260e6e90bcd0affcca04984338254522c0a04"}, "071db331-e5e6-4236-89d1-b34992c71198": {"doc_hash": "21b9474f0e2889360be54d1b2fda0bedfb6ef19efb47a5e55198945b366fcfd8"}, "4bd63c09-df09-470f-a2c3-ea9783f6a8d8": {"doc_hash": "60dbd70a8c0bd516c0e8853a24eaea191d6cbfbbd7b53346b30d583f2c943811"}, "744d4679-5374-4bda-97d2-52d7af729f75": {"doc_hash": "05f5c45a23b2c03f7cdfe133fb6bed89d8bf8e513b8837faf531c9da59125009"}, "660ec437-9dd6-4a22-9f49-f9a187fd7c0f": {"doc_hash": "a95881b23515ae12921be0d3f9e7127b2dab627124e0150d21cb45aee4c5e11c"}, "bfbe7970-7d60-42ae-8318-ae162a55ab02": {"doc_hash": "6246ed0ea2c5a3c14c14bfa398d4f0ee29ad66804bc9ffd2c221b4b92416553d"}, "b1a595d0-18c7-4d7c-a42a-94be94156c78": {"doc_hash": "44e19ca1b509ce58dfff2c9a57beb8bcc8f7d09282fb563ae42d56fc9c7ae677"}, "f23e7729-edc0-45ba-90c9-377b39803a2c": {"doc_hash": "10b689e89aaceccff2d56f181319717b73611e6c186d2f9eab5951d598288185"}, "03bd8073-0224-4c3d-803c-52c7c4f6913a": {"doc_hash": "5be01ae84ea337165bbd7e1fda6aab044f6c7946e2a5a1ef4bbe473ab447a502"}, "8077ce0f-cfa7-4809-9b47-e9c97491357f": {"doc_hash": "0b629226857f3a284d106259acdfe8be539edcda50dbcc4e59325f5f6e2dd9a4"}, "8682f656-9ff8-4a0f-9f52-4e35e170f948": {"doc_hash": "5a34d8ebcbc5b82813918343fd2bca5081aece717bcfbb89b31039ab7801d84d"}, "a8b37362-526a-4bbf-a4be-1fd483576783": {"doc_hash": "a700707168cf7575ee3e85aa03abe7514350fd622621088da5e237e875fb7375"}, "234e5288-0853-46c4-bf94-b1354b27c5a2": {"doc_hash": "fccd156ae4484ad0ab863cd1807c9ad929c6264da092c5afa630135186465c3b"}, "2eacdbdc-a947-45a0-8d5a-72261dff8b13": {"doc_hash": "396f9471e791916b9e253fabf58b709091c0d6be24bbad9696eeaeb61d433284"}, "712fc20a-dac1-4f7f-9cc3-a5f3403ea833": {"doc_hash": "881d15fa87e9c0b9b6e092268e986a8a2ac172ce0bb86b8ebff759d60395d488"}, "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448": {"doc_hash": "b1574fc512c00baf31bf2ce6510975a20a4e0fae2b39073309c41f7f673919c3"}, "170b749c-dcbe-45ec-a84d-27bbe8ce0630": {"doc_hash": "59fdc49d4c0fa8c58cc7e2b5db45862993b6e685ecb03773835d7b7f24608516"}, "c7d10a11-6834-4c6a-a09a-4523c6206af6": {"doc_hash": "92e14512f6cf48e7fcd98cef21b13ea233ed0156dcd882f61d03d88876893cc1"}, "f4b48116-024a-48fb-90fd-24e11eca5d55": {"doc_hash": "b67cb0ffad42d8b985c121dca8d9d3a2e5ce5c7483ce37e9fa6d6cd3165b9d8e"}, "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9": {"doc_hash": "330d9e75cf6bb9b5cbcfe26d3c8a7ac4611b8ceff44fdc88546d7e1d7d5c7b97"}, "d600d56a-db3b-43a2-93ab-b51abaedfe08": {"doc_hash": "86600e15f03fd9bfa7e0cdb7a384a2dde360746b9b4887331b0cd6fbcf990bd2"}, "94f8b243-6631-4a28-83c2-1b837ff0fc14": {"doc_hash": "ede82e9cbd11061ef560724b17ace9141a9cca81c0edf3199fba39b6325eb4e7"}, "f85185eb-45ad-4f1d-b9c7-c2ca65b79798": {"doc_hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c"}, "78ef90b9-b965-47fb-be51-151b49c33249": {"doc_hash": "5ccc2664e86b8acaec47d2d7dd9ec9e3d619daef6de56e2bfacdd61dfd4d5afe"}, "1c1f529e-e17d-45f7-9dc8-4928a205ba87": {"doc_hash": "e8d9af25cf3dadd73ddb70cb3f7806c4d427c0ddfa956ced43f02846fc67016a"}, "808a3577-2990-4d70-8936-90c3f1a265ab": {"doc_hash": "74944aaa711ffe3cd0ab981c023396bf38e25c432d1c5c192e8a11abb1cc9f00"}, "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d": {"doc_hash": "1736aa09cbe1c21a216286044664ba63b584ffb9edc003060a77482ed96fc177"}, "72d46d27-8773-4064-a178-753ec3e1f5c1": {"doc_hash": "f56565a76cf2644b1c1080ae864594d470db3ef3c6994aed515965cc419025c7"}, "505d9135-88b7-4d6e-995d-3f64b53d345c": {"doc_hash": "32ea14b1d95b12fd646194b1cd1f572164f8097ad8d289cf6154fa114f474272"}, "1873d2cf-6ccb-4ed2-bb98-f3653a46e945": {"doc_hash": "1278a789d55380c8f6b3536b49d9735a4dda2cb144db96f5b87c7bb76a57aaf4"}, "9e6e75d0-9854-4ebc-afe1-dfee75eb64ec": {"doc_hash": "65fbe30a630fe2c74ba0a70a24044282ef53929740c7905e3b9be56f2580d06c"}, "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07": {"doc_hash": "eb6a5a9288b9433ce1a0b359041dd15401dd5d6df47941c69e692c82af019e97"}, "0055d9c7-aa2c-465d-bc7b-bd7913bf6ebc": {"doc_hash": "766c7abe5846030f85d2e41b36670f8cc728f577446704b9625237c2bef07fef"}, "fabd5f98-a782-4c1d-beff-910648178d11": {"doc_hash": "cce4950ea25a64c89d986c062e185c833ca847b50f03b2904f29827dcb14eed6", "ref_doc_id": "0d424c81-acb7-4efa-8b9c-a7d76ce226f3"}, "06bf1905-ce9e-4ee6-b9c2-302a96e83d7d": {"doc_hash": "818152fd54a1b9dd63e0e56edba03a01621d51b4c33d34cfc84fc6b0ce8284ac", "ref_doc_id": "0d424c81-acb7-4efa-8b9c-a7d76ce226f3"}, "5d5cc201-b2b3-45c7-8810-62e41eeb4200": {"doc_hash": "f69c0adf9662569236439bf6bd356c9c48e291a619bebf2d1bd454899e808c04", "ref_doc_id": "0d424c81-acb7-4efa-8b9c-a7d76ce226f3"}, "cf6b8ecc-ae64-48cf-b55f-3a01589d851a": {"doc_hash": "f537a51b6e34cfc0573c7f1183a3094cd40531945568c46234d53f1a2bfc3a78", "ref_doc_id": "0d424c81-acb7-4efa-8b9c-a7d76ce226f3"}, "a5217a07-55b2-411c-9cf7-16f0596c4274": {"doc_hash": "5b84bb7219c47fd9df8fd50c820c4d069a06d56945367e28164b99e5faf4016a", "ref_doc_id": "a2b03b32-0e7c-4bcf-89ae-97566828528e"}, "243fb3e1-195a-48aa-b3c1-cd3ddb684bbc": {"doc_hash": "782e4f392a53e475da4851418c2b3bd71e010711b785f621ed5285b286a4ab2b", "ref_doc_id": "a2b03b32-0e7c-4bcf-89ae-97566828528e"}, "a291b007-3a8a-4864-99e5-52791555bf11": {"doc_hash": "1a3ff6e8ccbaf6d825ea37d88f2be4adae3c5002d802601310557dfd27b86fca", "ref_doc_id": "a2b03b32-0e7c-4bcf-89ae-97566828528e"}, "577647e0-d761-4bea-a593-6e32fb6003db": {"doc_hash": "633446ea50e2ef33e7f8f35e165ec0efaf5cb86edbc3697a3698c46b2db99b20", "ref_doc_id": "a2b03b32-0e7c-4bcf-89ae-97566828528e"}, "39d8a405-8519-4684-b382-f8bfec70959c": {"doc_hash": "c395fb5279cc210ef1412b14d94119555146bdd5e219b2ab6750d8d54a858591", "ref_doc_id": "a2b03b32-0e7c-4bcf-89ae-97566828528e"}, "87434f36-d829-4198-98dd-04d22461c564": {"doc_hash": "dafa8293ebfd84c54c39aa1ddc55e6b283e8d5cb97d948f25f33103a7f835eeb", "ref_doc_id": "efa9bef2-ee71-472c-ac87-b4f01b33f6d9"}, "4fb850e5-791c-4314-b796-c4aa0905a748": {"doc_hash": "ce5a94126d703fc77dbdbd3ea84fb3f204511c4c03507a8801186ce692dd9e7a", "ref_doc_id": "efa9bef2-ee71-472c-ac87-b4f01b33f6d9"}, "1e173911-e0cb-40ea-a34f-69cb9ec30da9": {"doc_hash": "273ded29141a067124f7880fe92322d2f5af2288a9252ef83819f43ead6b8eb8", "ref_doc_id": "efa9bef2-ee71-472c-ac87-b4f01b33f6d9"}, "48b50317-2a1f-43dd-b397-193ad1bf4088": {"doc_hash": "7aa85a0f9e9eaab847c7cc025479f06e110432bcb0c9c51ad4e1da0b1fbc8e08", "ref_doc_id": "efa9bef2-ee71-472c-ac87-b4f01b33f6d9"}, "7f5078d5-4ac7-4d0a-8870-f2834f547f41": {"doc_hash": "cf797e302ddd78d0b0f1ec7ff66f80dc8b71a0a9afcaa43da4fa0b06154775db", "ref_doc_id": "efa9bef2-ee71-472c-ac87-b4f01b33f6d9"}, "c7a21616-e0bd-40b4-9bea-4fe4f584b618": {"doc_hash": "01fdfe075df45799e71e2489a9f20d0471a5a6bc74894e90572b27e8061cee36", "ref_doc_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9"}, "aff05086-c930-4325-930f-80d4972d9c04": {"doc_hash": "7d7617c244ecd3137588678c95691b37b71240e53034754da61383813715051f", "ref_doc_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9"}, "09cf80aa-52ac-46c1-ae21-0b825986c086": {"doc_hash": "22bed08790530eb7ec1f9aad646b401b8e75a7435c23af870139a36001d3c889", "ref_doc_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9"}, "cc96c4c9-c788-4951-a9d8-29f6cca16a7d": {"doc_hash": "2f6a2e02868de7705f4e0873d30e005da33befa8a3ac3009ef3df758b109d5a2", "ref_doc_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9"}, "890a9b29-b602-4c13-b7d0-f1df2b910edb": {"doc_hash": "11096e0c2cf48a5991180e431481edbce61ed03e41e3ce734d05b0189b86dd3e", "ref_doc_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9"}, "d1f62dfc-d526-4f2d-a447-ed1bf918e240": {"doc_hash": "39393137e21cc7d43863d957f5eee9afff1cf1a2c9cf1db4e38705b453b944dc", "ref_doc_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9"}, "f3302bed-1315-48ec-9bfa-02e9d5a46eae": {"doc_hash": "5df71cc6efdb429563efc4e678583777b6f8dd64fe0c8ec4f49aa82835cb5ebb", "ref_doc_id": "7cdfdb2a-b39a-47c4-9444-6e39be015900"}, "0f98514d-6660-4824-9b53-741a65ee838f": {"doc_hash": "193ebb110f7ba43c497149378fd5d5df8930bfab835e8f6a2238c5a975d11883", "ref_doc_id": "7cdfdb2a-b39a-47c4-9444-6e39be015900"}, "d5d88ea9-9f16-4555-ab0d-fedec43b0751": {"doc_hash": "064318e43e696d183fb6a8d6c078f0ab3de2ef6d726cc749322604bb0b73b9a9", "ref_doc_id": "7cdfdb2a-b39a-47c4-9444-6e39be015900"}, "02894ed3-84db-4ef5-b79b-d512571888b8": {"doc_hash": "7f51f2131f10ab40feae8bda1ceb803b5595ec66bdc48b663a5916711cd39d54", "ref_doc_id": "7cdfdb2a-b39a-47c4-9444-6e39be015900"}, "c3aa495d-d2f2-48cb-b614-685662d764de": {"doc_hash": "fa5b6837e10917e079600bfaa3584cce4901be2f09d909a59973dafabab6e678", "ref_doc_id": "7cdfdb2a-b39a-47c4-9444-6e39be015900"}, "8800a61f-47a2-4f74-94ea-700fb028856f": {"doc_hash": "bf18302a170d6fb21c7bb7d890413fcd2b3a20cd6080ee18a121990256740f07", "ref_doc_id": "10f7a796-383c-4237-8197-5fd5d7aef48f"}, "e1630e7c-e3d7-44f1-b72e-5eb01674465f": {"doc_hash": "129da21a073e01462b49f9c0c6fb3b1e63ef150d68679d49d2919f865e2a72c0", "ref_doc_id": "10f7a796-383c-4237-8197-5fd5d7aef48f"}, "e8b3c6d4-d075-4a65-b9d1-7a6d5b4f1a55": {"doc_hash": "c3c9d0d3d57d3a4179ea92fbb73e58dd69ff3346e5948f4059616be45ae0f632", "ref_doc_id": "10f7a796-383c-4237-8197-5fd5d7aef48f"}, "418e3b87-4868-4c17-9254-a1b0aa0de50c": {"doc_hash": "35ad0b4286b71848612880f739f1a7675d8c81313980184262833e5a3751fe9a", "ref_doc_id": "10f7a796-383c-4237-8197-5fd5d7aef48f"}, "75ac0824-4e85-4db0-949e-5f01343321b2": {"doc_hash": "6b14440cd510f652ef8c0514012630de8a0271be7658da8f11ad52a201a79a94", "ref_doc_id": "10f7a796-383c-4237-8197-5fd5d7aef48f"}, "aab87825-1e27-4155-b920-5b9a85d0d660": {"doc_hash": "63e1ad18c1350f3b91ba3a4d767a4b504ccda67abd89001cd44a0d293acfd216", "ref_doc_id": "071db331-e5e6-4236-89d1-b34992c71198"}, "464c1cbc-38c6-47ce-b971-e47ceac8765f": {"doc_hash": "95031c5956a9ca01faadb0c40ec2d16c501226d98770a7f52d0171bf170dbc87", "ref_doc_id": "071db331-e5e6-4236-89d1-b34992c71198"}, "8c91ab7d-bd48-4606-997b-8ecd0f801d06": {"doc_hash": "36e0e42186030ec04fe6d709b50d862d029d5c54964df2b70ebe9ea7deeceeee", "ref_doc_id": "071db331-e5e6-4236-89d1-b34992c71198"}, "55377015-0536-4341-9cac-67abf41ea708": {"doc_hash": "db42ba78e546cccef2f5aa70fa9733b05ca8ed518affda75d5ed9d3cc43a49fc", "ref_doc_id": "071db331-e5e6-4236-89d1-b34992c71198"}, "2d326130-2b77-4071-af15-f6b73c50fd6f": {"doc_hash": "f1da4b3f344d2fe5b691c9e8eac7c7e7617cb6b6c4e48719f075de02fe7a835d", "ref_doc_id": "071db331-e5e6-4236-89d1-b34992c71198"}, "71cd826e-b8c3-4526-bbbc-7de280ec05cb": {"doc_hash": "dd39ad075911352c37b21b60e4c6a26d5ca0c2cbd6ec844fb4418a9cb10ac1fb", "ref_doc_id": "4bd63c09-df09-470f-a2c3-ea9783f6a8d8"}, "f87cf45d-0ab7-44a9-9034-81cba5fc860e": {"doc_hash": "2718126918c57b9ae4ee55135cb72e693b718b22725ed76293d06fca86f8c69e", "ref_doc_id": "4bd63c09-df09-470f-a2c3-ea9783f6a8d8"}, "6b25b5c0-8eb7-435c-95d5-88448f1b1cb0": {"doc_hash": "9c3ab6f150aa48b9713f3e445a1fabaaab1b48dc7c4e02d45ea73544b4dbb98d", "ref_doc_id": "4bd63c09-df09-470f-a2c3-ea9783f6a8d8"}, "8ce10103-d065-4e0a-b40d-6473a662ef54": {"doc_hash": "a88ec084a15b629543b500b6e246128f582b6dd013a7ec57ea913619c775f785", "ref_doc_id": "4bd63c09-df09-470f-a2c3-ea9783f6a8d8"}, "7cac62de-4ede-4577-a705-381ae930d366": {"doc_hash": "12107f272a4a85a51ec00152b9f0a8995a2a7e1147e1c7b486401f264aa54a4a", "ref_doc_id": "744d4679-5374-4bda-97d2-52d7af729f75"}, "7bb57b98-1862-4d20-95e6-b9f11e979f28": {"doc_hash": "3c15a85cc0989832bba650436c4bd16b9c87be85ca9f29424298fa7fad09b14a", "ref_doc_id": "744d4679-5374-4bda-97d2-52d7af729f75"}, "c73f5131-7493-4ff0-a4c4-7ef674d0b98e": {"doc_hash": "e56a82a19d008aa86588ce97a509778747fba0f7e6d6550cf9576539c28acc9e", "ref_doc_id": "744d4679-5374-4bda-97d2-52d7af729f75"}, "d1e2a36c-28ae-4fb7-9700-7e58853ce4fb": {"doc_hash": "fa38c5440f626a7972d2b3c0d95bd9d3c33e877884357ff58483506f99081962", "ref_doc_id": "744d4679-5374-4bda-97d2-52d7af729f75"}, "c1b92f16-3226-43c6-8347-0190554a4def": {"doc_hash": "ae39ef7112bf9a471a5a3177ba2a4832486bb4cce5ae04e7ff4c52474328ffa5", "ref_doc_id": "744d4679-5374-4bda-97d2-52d7af729f75"}, "e85a68f8-b946-435e-96bc-9198ea7c06c2": {"doc_hash": "aeb31bc060d24ab6146f03efdc9df264b29904806fc36bce047376d6af458f5d", "ref_doc_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f"}, "ea7291c8-689e-4414-b440-4a8886bca272": {"doc_hash": "4601c3bbb9203a5b9aa0cb5d34678fb659e2990acac0c57f286f072732ec59ea", "ref_doc_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f"}, "60f3a652-7c09-4a4b-8fb2-54443aaaa8dd": {"doc_hash": "ade886b521954c2ee3e719ea29d66823699244dfbcf4332c1180a0637f2bff34", "ref_doc_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f"}, "f9634d11-e5af-4a95-bf1c-f6783016f07c": {"doc_hash": "4c63226ccf4f4d9863018fc98e6dc908781185b8127b957f5ab50935d11f9bb4", "ref_doc_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f"}, "240ad29b-703b-44fc-a7f8-c743ebd6ed03": {"doc_hash": "7909be9c33d4652b21a6345242fa9c7fefa95829f1cb1eb27ce16933db584ba8", "ref_doc_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f"}, "5af3419d-91d1-4a82-b265-3aa72b93416d": {"doc_hash": "76e584b9c89e0ddaef426427a7ef4be950128155f768baa4a2e984731211600c", "ref_doc_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f"}, "8eaeaa00-e7d3-4143-857c-b986baa13670": {"doc_hash": "aa393d4c478b2c9b0de12ae22e342a90dc6202e0bf356f20210a2d592772f934", "ref_doc_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f"}, "a9974446-61a5-49d6-aad9-ad32e6949f97": {"doc_hash": "ef76d61d96b4cd15fce566357512de81bd7c83e8f0713fec571bef6026df0aef", "ref_doc_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f"}, "ea87b82e-88de-4165-9a2b-1344b34c87ba": {"doc_hash": "95af3dcb7abe014e07c49823641b4fe07d4f9947c9d82af0f73e6efc5e369459", "ref_doc_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02"}, "ea3021d5-9896-4ebc-82f0-2bbd551eec16": {"doc_hash": "83f6d63644c11d614a2bb26db19cd1d98f1062b3470819f2d9c58ff6d96c5192", "ref_doc_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02"}, "d91408d7-4a79-4004-bf69-d0a641843f17": {"doc_hash": "8ff038d5e1230235c0ffff668b89fc25763be7009a79fe25248c9ed71145e1f9", "ref_doc_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02"}, "0643bbc9-6cbd-47df-852a-05012ca010f8": {"doc_hash": "ae1fe53f392eb2952ff6b664f851f345c165451f894b0963a7879c242c0017a5", "ref_doc_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02"}, "1fd4b519-b79b-4728-9a14-11aea02859dd": {"doc_hash": "d0dc30a78c9c2ab0dcbc4925eda2c2d52895f55eb390d6289cb663ca6ba3b8ee", "ref_doc_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02"}, "aafc6440-ec25-454a-8b25-79ccd50c9ea8": {"doc_hash": "2cda2a337d194aa006dd700a3efbe720828f2a16fe7b9132e4ffecd450064d25", "ref_doc_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02"}, "f9ea7b05-ca5e-4dd8-a297-544c2f112037": {"doc_hash": "3db8d1da3a30c16d9ea44864afb29692cf8c8b88e0503d6341b0ada95552eff7", "ref_doc_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02"}, "c92e1572-16e4-418f-af0c-797537181238": {"doc_hash": "11f0f2a99c18c4594869c1c90d90b0b74784506cd7b5898b80deb3e6433f5872", "ref_doc_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02"}, "a2b63948-ac3e-4edf-8048-4d0df3b7216d": {"doc_hash": "0137c1dfb0ad8b2c76f228f87ee0fcd436df6070bdef95202b441c40797709c3", "ref_doc_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02"}, "a6212db5-e774-4a3d-bd59-f234d3060b67": {"doc_hash": "72aab8189cd6bd15dadc0328bb99b1b6a868f16aba8faf4db23ce5a2937cbab3", "ref_doc_id": "b1a595d0-18c7-4d7c-a42a-94be94156c78"}, "1f15d465-50a3-4780-830c-022d7a27f1a4": {"doc_hash": "8c2cccf5145a6cc6a9b1741b4fd3693ebb243cf55eb9a1761735d22dea9a20ed", "ref_doc_id": "b1a595d0-18c7-4d7c-a42a-94be94156c78"}, "9bb4dd21-cc54-40ba-9d6d-f00afbdd4c7c": {"doc_hash": "8b1e807376615ab3f3186fb7383bdb9bdb076a2f323871dc7b1d5e43486a90fa", "ref_doc_id": "b1a595d0-18c7-4d7c-a42a-94be94156c78"}, "2546559e-c7e9-44a4-b1d1-c998886715a3": {"doc_hash": "008e3f87717f5da84996a7a5c9845749069625b468884f6ab7f836523d053bcd", "ref_doc_id": "b1a595d0-18c7-4d7c-a42a-94be94156c78"}, "e620e89b-651b-40b7-8a0b-4e371f2d48da": {"doc_hash": "8b68e8e94d8b54ec665a215481a92abeb513476317d6651865c7dee3224fc504", "ref_doc_id": "f23e7729-edc0-45ba-90c9-377b39803a2c"}, "1f036aca-07f2-4441-8410-0f0ba836a7f6": {"doc_hash": "f6004b760a01768248e86eed89c5a426d66f917d7877281a86701578c531338e", "ref_doc_id": "f23e7729-edc0-45ba-90c9-377b39803a2c"}, "64b7de43-188b-49be-8a2b-fb1d3cde6b41": {"doc_hash": "d359e6176f0c3691146d26e6c747039c957836eea43b6eace4781df914b7b80f", "ref_doc_id": "f23e7729-edc0-45ba-90c9-377b39803a2c"}, "9e7b8a63-62c5-4b17-82e1-432009b18bf8": {"doc_hash": "626ada3f9bf9bd35ee644afb9afa5c1d529b5e09498442244719eae0c49ab583", "ref_doc_id": "f23e7729-edc0-45ba-90c9-377b39803a2c"}, "488fb359-fbff-4370-83c2-0a50709bd166": {"doc_hash": "4458679af4072e3b6e0ece0fe7b13b83ef96e25644ba31013ae1a60edd12acef", "ref_doc_id": "f23e7729-edc0-45ba-90c9-377b39803a2c"}, "97380de9-06e8-482d-a94f-41b6e2d7a4b4": {"doc_hash": "dd69637dd3ad90573f66b9aa41056f2a5c34920e2d05cd01f68a2fbc15200aa7", "ref_doc_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a"}, "d5aa2d74-0d00-46e5-a320-b52dbde46d8d": {"doc_hash": "68f944600506b4b51b569dcf7b74a3f31e3e7d55c2bb5310b2c2ec35c97dfce0", "ref_doc_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a"}, "4a33be26-5ea8-4044-ac4f-3a2ca7e5dccb": {"doc_hash": "d78087d3fcaece9b27fc03f3697fdf729c82d7a1620ed84b61391920b160d4ea", "ref_doc_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a"}, "78d3ab14-5e0d-48c8-982d-d54996ca183e": {"doc_hash": "d73bf87ef25677e200396d0007462518f12ab061a79efe384bb5e69e1b3d2826", "ref_doc_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a"}, "6c8ee24e-1742-464a-9c19-a8b883f770bb": {"doc_hash": "ab3187aed1436e8f33f4aebeba3cbe06c322067f8308bb968c0cf94e80106305", "ref_doc_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a"}, "4a579f61-b082-4dd1-abaa-1f392915a1eb": {"doc_hash": "bfbb5cdfd7e142deae2b8a25ab5aedd1930a5533b42cf6cd9b8be16f1cf3c5ab", "ref_doc_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a"}, "f33e0ebe-cd9b-4af3-88b3-8f7d98651ec8": {"doc_hash": "98c8bb33754c9ac862854c61f4e2ef91d836bb8c5669418810d04c8b82a76b39", "ref_doc_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a"}, "d38c2f89-4dcf-49a9-a8a0-62bde872bbbe": {"doc_hash": "f8efdabae58ea9a1f787b9857b4df6f889cd87bfac9c4ffd05eaabb906ff076b", "ref_doc_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a"}, "f9437838-f5e1-472c-b0bc-804ba3e9cc4e": {"doc_hash": "3688a55aa8b3295e6c750cbe36df98434734bc20382cf9ee6bda3e6771c261ce", "ref_doc_id": "8077ce0f-cfa7-4809-9b47-e9c97491357f"}, "52dfff85-c6bd-489c-a401-00c74d457edd": {"doc_hash": "5d40cbddf7448531d904f2e1c2836fcb3da94341c68d7c7add18f74a9cb50e42", "ref_doc_id": "8077ce0f-cfa7-4809-9b47-e9c97491357f"}, "984e6069-900c-48c1-ab62-1ac0e5af8ae2": {"doc_hash": "5e67cf1b383895da25047613c1f3b5d94c2f17a7d94eff8e59df40ab7d98d796", "ref_doc_id": "8077ce0f-cfa7-4809-9b47-e9c97491357f"}, "608e529f-942b-4973-acb9-726529923867": {"doc_hash": "29ecc6d56f05eafdbbcf684cc31ff4fd21f479694e8302def00241216510c63b", "ref_doc_id": "8077ce0f-cfa7-4809-9b47-e9c97491357f"}, "41aff24e-7bcc-4593-99d4-2180946e1f21": {"doc_hash": "510489fbbb62a52843a545c764dc8badee1f227c1e07a1dc0a40ea7c4c12fff2", "ref_doc_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948"}, "ea5f9902-9f04-41cb-9ef8-1732d2317390": {"doc_hash": "df6ed5e92a8654520de9fa692c77a22f0de783c20641b2102e9e26064844b958", "ref_doc_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948"}, "ea161f4f-46ad-400c-977e-6a192c20f0e4": {"doc_hash": "a96e81f1badd8dd65cfd4d6d77f25a00b96412a05fb21232ff1f7ac26d7f49b6", "ref_doc_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948"}, "f4b63bac-f88e-41b4-a048-af03df99ae64": {"doc_hash": "8367cab4d33e0022e5e48c077d3317f14ae3d70100ba233c836ba97812805162", "ref_doc_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948"}, "ba7036fb-21c0-4676-b107-d651a759e962": {"doc_hash": "b2bd4ee6d7c196677aa899f12e1b2150b78c6ad6147273541010a2be1dd33e18", "ref_doc_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948"}, "de78f5c0-08b7-4f83-b5a0-694c5fb473a6": {"doc_hash": "c157039c19c5b10e20b8294abf7c16a8a0f0afc0513157b37ba2ef57189e56b2", "ref_doc_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948"}, "e56b7086-2d39-4ea6-9571-c5b2d840ccbb": {"doc_hash": "553ad9d60200f9956448cf46f6b45b3d33a13806abe55ebf59f5bb78bd4e00ff", "ref_doc_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948"}, "39c48f65-8811-455d-bcd0-90a6eb7ed3df": {"doc_hash": "8916a6f1ea2788a5087636672d1db7edae20ffc970edf0b8e7e0072f29e65b6a", "ref_doc_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948"}, "c8516414-c862-4b71-a683-b43163b9d604": {"doc_hash": "9a419b974bd0050361e9a47de1b44878d5dcf07121ef5e49c60effb67a3a3711", "ref_doc_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948"}, "3f0ff72e-8ca6-4085-8808-5d2de502a35d": {"doc_hash": "8d8eb0b6edf4a54b57e8932ad0d32fccff378d724dff623a6fb8fd0c584c2b4a", "ref_doc_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948"}, "3cd35f98-e7bd-4371-9858-1467d4ddb805": {"doc_hash": "c3bea122a5336a9190ff84c5c8bb04109d5358d08abceb80a6b611857a96d387", "ref_doc_id": "a8b37362-526a-4bbf-a4be-1fd483576783"}, "3bd7baaf-f1c3-4360-a2cb-3e77acdf4dda": {"doc_hash": "e008712855040a5958f2840a74ca60807d8995ab7c2f9658508fed7f60084825", "ref_doc_id": "a8b37362-526a-4bbf-a4be-1fd483576783"}, "2ecf391a-8e0f-4581-8ef5-132fac130f9e": {"doc_hash": "abd048fbb7db424d32da7f5ea282791f739aaac4278ed563ad37b6154cf1a66f", "ref_doc_id": "a8b37362-526a-4bbf-a4be-1fd483576783"}, "8bb87013-8e45-4ba4-aabe-4f00de8fce19": {"doc_hash": "cc0e4ac68a873046ce0cf1a164512563339e78102aaa198fb9ba6214faa1b76a", "ref_doc_id": "a8b37362-526a-4bbf-a4be-1fd483576783"}, "2c9ae204-649b-4491-bb5c-93a55cbf75b6": {"doc_hash": "00e6ffebb91aa9c28f45fd25ce5ec61a915cd52de2ec45666996b37b8480129c", "ref_doc_id": "a8b37362-526a-4bbf-a4be-1fd483576783"}, "af98c95d-1616-4263-93cc-7390f163d9f4": {"doc_hash": "2470b9f108254446790bc27b0446120ba140c791d2c72b154a60fb578a8c026e", "ref_doc_id": "a8b37362-526a-4bbf-a4be-1fd483576783"}, "51a86f2f-fe1c-4e1d-a614-be65eb9202cf": {"doc_hash": "521b376930609aead3c8d8f62e24274f68991584b8de03aba7f5969253fd255e", "ref_doc_id": "a8b37362-526a-4bbf-a4be-1fd483576783"}, "abff2f6c-8c27-492f-9fdc-498c7aa78854": {"doc_hash": "d84fae0039ffa4f50e526634213d481af7011ae28df53b7770fcc7d0bd169ae2", "ref_doc_id": "a8b37362-526a-4bbf-a4be-1fd483576783"}, "23a21220-e420-46ac-8cd8-a39c8b79a12e": {"doc_hash": "dc2171b780592eced2ce1d6a3809694a53fabde7b7651a8445e847cf170437fd", "ref_doc_id": "234e5288-0853-46c4-bf94-b1354b27c5a2"}, "b0502971-31e2-4673-a49b-3c847a7f89ea": {"doc_hash": "ede5ca9754e5b9156ea09c047e5e7eaed04703a801992086b5bb43dfed509025", "ref_doc_id": "234e5288-0853-46c4-bf94-b1354b27c5a2"}, "0b9f8d44-4c1c-42fc-866d-81c82bf918d0": {"doc_hash": "08a69f0329ae50e9d37e8984b3c5eb3069c34260cafa50577381af5c64eebb41", "ref_doc_id": "234e5288-0853-46c4-bf94-b1354b27c5a2"}, "8d74df54-e397-4220-980a-455c96fe63d7": {"doc_hash": "43dd9a6d8a8ba2bfddad34fab7a00c942736ab61a6b77fcc03697f46f4fb548b", "ref_doc_id": "234e5288-0853-46c4-bf94-b1354b27c5a2"}, "cd27d449-14a3-4a52-953e-e587f5f40dab": {"doc_hash": "1dbd708c45aa1c1783695ae5c2e79475c7416772368dd22d14936665e9a39272", "ref_doc_id": "234e5288-0853-46c4-bf94-b1354b27c5a2"}, "fbfa5900-d0f0-4faa-b187-3b4753f30d0d": {"doc_hash": "d97413d32075d7d20deeb6f8ec124651113ff9c6a1cd1a0077ea70a358c73927", "ref_doc_id": "234e5288-0853-46c4-bf94-b1354b27c5a2"}, "33b30c47-1ef5-4c52-b943-924fafa09c7a": {"doc_hash": "2d5638e3250253638e00c44e34d3aff281eeca7837495b5f07fefa84fdf710e5", "ref_doc_id": "2eacdbdc-a947-45a0-8d5a-72261dff8b13"}, "bbc3501c-27cd-435c-9728-1cbe73043cb1": {"doc_hash": "fce05bc406b97d66cca4dde26b3382e5f3223ad65e51490520aa4db6e7902f67", "ref_doc_id": "2eacdbdc-a947-45a0-8d5a-72261dff8b13"}, "06452f58-cb82-41b7-b2b1-543870a4f138": {"doc_hash": "502866a1cf8c59a92a5a05a3eb7d72046b35fb3c59919154f7f204a2ab651d3f", "ref_doc_id": "2eacdbdc-a947-45a0-8d5a-72261dff8b13"}, "1c606eb7-aee2-4ce0-86e6-80337ac3ec1d": {"doc_hash": "5690302de42649e438df69d95657d053d4a2058b6c0770c3a86b2bf5c5a4a635", "ref_doc_id": "712fc20a-dac1-4f7f-9cc3-a5f3403ea833"}, "1d8dbb6b-f2c7-4ae0-8f53-97a769805438": {"doc_hash": "35db45fd98fe2cf571f26f1de7f7b8a2f5f2ab9a4a1eb358bc0407857f7b1b31", "ref_doc_id": "712fc20a-dac1-4f7f-9cc3-a5f3403ea833"}, "faa4d3f1-c2d1-4f7b-8280-59f2fd1697dd": {"doc_hash": "a5648a14ae5e8e77dae4cbbafa5352fff57d040f906cbb9c5c61388af2361d31", "ref_doc_id": "712fc20a-dac1-4f7f-9cc3-a5f3403ea833"}, "7b6e1463-8ec8-46ce-9f9d-381d3685f973": {"doc_hash": "7001bb53f1ccbeea77dea7a70f35c0b6343d63f48df0eb3ec9fca22ad7bfd5de", "ref_doc_id": "712fc20a-dac1-4f7f-9cc3-a5f3403ea833"}, "8b44051d-9bee-410d-abce-d2811ba2d47b": {"doc_hash": "b8305923a98b57a40605d9dcf6463cba683c74ae2524e0a162c919235c65fe85", "ref_doc_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448"}, "70ab97c8-206b-41e7-acb8-c0ed1368db4c": {"doc_hash": "a311fd49699db28f5d7ed78bcfe1f822df7b8a2f8aae109a734f2fbda6d5aee8", "ref_doc_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448"}, "554a751c-c4fb-4e1a-8873-248ce1a4ec0b": {"doc_hash": "b0f5db713e694cf92aa5eabd93bc942ef3658534924f58da16def3fcbb6960ea", "ref_doc_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448"}, "1d0b54a4-3ee3-4a15-8d4e-0cdffa09b74b": {"doc_hash": "def6ce59f01463879b03049db6a445f13d84ae6fc640b1f32cb41f57d68781de", "ref_doc_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448"}, "3322de2f-417e-47e2-8517-00c18cc145ee": {"doc_hash": "b5ba957442bc92a03ec5f53ed1084e11679cfc744019fbb96526d5fb7cd94375", "ref_doc_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448"}, "f0481488-d503-4e5b-8fcc-27e206a6e5cf": {"doc_hash": "c5778c75aaae3c83f49b9284c2c3a6af41789fbb3ced409c976074c43df0eb0a", "ref_doc_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448"}, "19263495-8486-4c44-9e99-397fd6a599c6": {"doc_hash": "2ae040f666765e7144172829e11e16cdab694f526762ac94f088f899d6e14913", "ref_doc_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630"}, "900c8a5c-35fa-4203-a5c2-39f3fb1b86aa": {"doc_hash": "d1800ee84feb447aa0f6bd2f1783cbe0a228031159a45448d11411a9fef9f0f0", "ref_doc_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630"}, "ab3f1dd9-2909-4126-8b78-453c7740cc63": {"doc_hash": "d8283ac2ac012326576aed90f3e241131c184967710a2d711495b63c6b62a369", "ref_doc_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630"}, "8b628913-e7e9-422b-9a82-af14bd2da3f1": {"doc_hash": "82b2a24a80a5281b9399212caae584d0f87a32f18793652d195a6f73b2322c43", "ref_doc_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630"}, "a3ffaef0-2c5e-486c-87e8-933565d322b2": {"doc_hash": "2b5a3fb96b809c021979f0e0d2b7ed7009b8b76833e4a24c3b2c31513d04f930", "ref_doc_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630"}, "e5213508-5190-40e5-8400-a3a5a67fd091": {"doc_hash": "5046decb0438665fffff94dc93a39891c1afcc4ba52e0eca63aea06dff831a2b", "ref_doc_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630"}, "63f7e750-731a-46d6-9d09-3aa560890ace": {"doc_hash": "f7e0e9dc793612fdad0ce6434d3fd106b7692a9c379e857361adb764e282a566", "ref_doc_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630"}, "4b355759-ef09-40ee-a262-48f4ee68bdc3": {"doc_hash": "ec8811364307697b21c906adf1bbfef49ed5713a2dff07f3e241a147fcf7d75d", "ref_doc_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630"}, "499909b2-8106-4ec3-9bac-185afe1ad8ae": {"doc_hash": "8921a4d4889e72e1cf56971364bd63a76d77d2de22f1edb5a5a8467b44408100", "ref_doc_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630"}, "ed74601e-61bf-45d6-a97e-daf04b66c606": {"doc_hash": "c074411ea628922d949e4ca68887875aa64d86c1704e889acafc91b842cab14e", "ref_doc_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630"}, "8eb6bec1-1e5d-4436-94ac-95a04f0ab48a": {"doc_hash": "2279e7a215c69f533d07c338d83e674d9a9116265e6dd5093afcb56b844ec6c2", "ref_doc_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6"}, "9236bc97-213e-463d-a8a4-402cf818ea54": {"doc_hash": "f3fc8b38df9b5bf7d2d74ebf217ede2809d7cb9d49fb98344ae924eec916ba55", "ref_doc_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6"}, "f52eb13c-f694-45d1-b028-13fb23a73c4a": {"doc_hash": "1f7a43636ca4baad161af44966acbbf726e45923b081109ff1ffd4dd17cbf830", "ref_doc_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6"}, "bef0ffd3-026a-473c-8857-1a1ee1d10038": {"doc_hash": "dcb146259a5b4963627eb3b8af30c923a478f27c7f2969d867fc7cd5d70fd321", "ref_doc_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6"}, "345f03a5-ac3d-4ed7-8348-6a55ebb48eba": {"doc_hash": "f99d07d1e2bc7365103b0133816eba129c33409b3dcc43b11892e297ab76c16a", "ref_doc_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6"}, "51206c4d-a8e8-425f-ba42-900a98e5e038": {"doc_hash": "65b44123674e2e8a9643bff6c7b2d5e8340d2439cf7976bc45115fb2f352553e", "ref_doc_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6"}, "5fd0c37e-3812-45c6-b34c-cd7e91fe2ba1": {"doc_hash": "b3fa222d2e00c9b299db40bd9e9c5cdecc24c0cf4bef1300ef3d993cbe79e3b8", "ref_doc_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6"}, "090489f0-0d59-4b9d-9e67-b22785c06323": {"doc_hash": "823dfb6a648da3a19fc92c1f8a416edd72055052276b7d958d2b9a6bc2820341", "ref_doc_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6"}, "41af11bf-35e2-4ff9-959b-2f2f347bd409": {"doc_hash": "7292fbc10bff706ba046c1498c90c5c97aad675320345b3cdcb615ebaf550116", "ref_doc_id": "f4b48116-024a-48fb-90fd-24e11eca5d55"}, "7201b607-d8f2-40cd-9744-b73685ed153f": {"doc_hash": "d0de140c26d980454307135eb7530ff547176fbfb46b83de608c02b2c525c1c4", "ref_doc_id": "f4b48116-024a-48fb-90fd-24e11eca5d55"}, "f95e5afb-75d6-4f39-81f0-b6a5b335ec01": {"doc_hash": "a7654fa7532adb90f5e100b15b430df88be6f34fc3f7a801f11e66d3ed6afb9f", "ref_doc_id": "f4b48116-024a-48fb-90fd-24e11eca5d55"}, "eec18e39-0f18-4777-bae8-a88026c034d8": {"doc_hash": "33d5270148fa05d50c1cc5541e28cb519f064135e12e8e5bc39610b3b00c86b7", "ref_doc_id": "f4b48116-024a-48fb-90fd-24e11eca5d55"}, "0f0638d8-7b70-4169-8bc4-13c1fca5333b": {"doc_hash": "aa7810de92d2728833d25fe61567b079c18d2a87b10c0a4dd1e6541c711f1b00", "ref_doc_id": "f4b48116-024a-48fb-90fd-24e11eca5d55"}, "07028e47-df1c-441b-9dfc-1fa68c5c3241": {"doc_hash": "2c1a0a64714c7fba2b611d6d496b2b7a0574a9c736062f1e651c86778588a4f0", "ref_doc_id": "f4b48116-024a-48fb-90fd-24e11eca5d55"}, "20ef701d-5f1c-48fc-9af4-f77a2454a146": {"doc_hash": "d60b329d89017ee3bd4c7f2fc3375f9451b3f5d1666cfb31849bfd3a99ca99d2", "ref_doc_id": "f4b48116-024a-48fb-90fd-24e11eca5d55"}, "2f4ca220-356d-467d-b725-05d7f5196978": {"doc_hash": "a3751ed676f6219f3b04aeae40664a74ed8507defcaac1cf9b5551812e5b364a", "ref_doc_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9"}, "7c86c36a-3436-49c3-bbf4-5f9297c22c6f": {"doc_hash": "5a43eb7a57a61a3577bd1fd583e2c719fff6647310befb11ed38cec6ebf2c598", "ref_doc_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9"}, "f1458f49-00f0-46ff-a920-16bda4873d99": {"doc_hash": "26d93d093a7cd06c545b195b0ffdacda517d7ebcbcade39ccf98e83a758c6547", "ref_doc_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9"}, "1f85f1dd-5120-499a-81d9-edc5dee950d1": {"doc_hash": "73808527caa6823efd651a7154a1d896926aafd859dfdad4456abefd5147601b", "ref_doc_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9"}, "7ac7066d-2887-4a4f-ba07-995632f972bd": {"doc_hash": "0a0e3864cac15df332a47f95f9c7da3ed11f21dd6473b25edd81ac630bad2b31", "ref_doc_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9"}, "2205618d-92f4-40e2-bb09-ee98a1b02d18": {"doc_hash": "3d7a5f74df5bd5be51de8bfcedfd78bd0e05af3932320c8a31c3f72547892c01", "ref_doc_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9"}, "d70fab61-c911-49f4-8d64-8d81f893f1a2": {"doc_hash": "f7f81e3d62a348e2addf9411f821e9a30b4ce39e7666d31600f66840568f33ee", "ref_doc_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08"}, "786851fd-31c4-49ab-b9ea-78628c8da589": {"doc_hash": "0255d935feac40b89534c75ba2f979be51d455f1a8e998dc06d63eca54af7ed4", "ref_doc_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08"}, "671aa048-0889-4f1c-8e36-b6caebc9dbf6": {"doc_hash": "3d94f0f85c045fc6f661e7f40baf4ffa4cc2a49edc1c81b455806ec8c6a1ed52", "ref_doc_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08"}, "6591bc55-10d9-4efc-8c07-eea5efd546c6": {"doc_hash": "a8aa12a9c3030373a9c615707d1c380a3e51fa59fc651bbcdb7785bd994855ab", "ref_doc_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08"}, "e84738aa-e629-4424-8f62-69a903d0eb34": {"doc_hash": "43ac65207ffecc6a24201491b9ce5558a2cc680080b5348c9fffbc7c586f449f", "ref_doc_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08"}, "663bc06b-5690-47f6-90be-87c41c19d856": {"doc_hash": "c0da80cbee90ba746843fcc7f3e0c2d62a5ce8f4a1b48935e19a6efe5d54c188", "ref_doc_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08"}, "7fd29e75-c8be-4ca8-8a5b-1cf0761cc4c4": {"doc_hash": "e9c8291bdfc7b62336ddfe692f7f126f814d21d3f25f0f314b05a463ad05841f", "ref_doc_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08"}, "186ee6e9-4d27-4d5b-ab19-4dae6bbe096d": {"doc_hash": "2afad7783e5ecf090d6091de5d5889cbc741f274dc915b233f18e7b9db3cadb0", "ref_doc_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08"}, "fbd7f212-63f7-4f1d-9ab5-933aaa955050": {"doc_hash": "8e0b139cab729605d4233533d3789ac405848030263c126d7be5db85aef749f6", "ref_doc_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08"}, "24ef0355-f887-4ffd-875d-de33f6266cf5": {"doc_hash": "25539dcd83c42223f29dc4e92722212c5c43aacf97509dffe475d812d7eb17f7", "ref_doc_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08"}, "92e0ff00-5258-4045-8f3e-4125cdb773e1": {"doc_hash": "93004ff4f7dec0f403b56fb0fd673db57840a3edb0c4781f848a6a0a103bf52e", "ref_doc_id": "94f8b243-6631-4a28-83c2-1b837ff0fc14"}, "e2417f4d-0f42-41aa-907d-564dde1a5bd4": {"doc_hash": "eb3df31122b7f4049a875dcec5cd2b045363bc4370b37533b798319fd6b79158", "ref_doc_id": "94f8b243-6631-4a28-83c2-1b837ff0fc14"}, "d1dfa771-cb6c-4674-86a5-7aead1ea2dd3": {"doc_hash": "c7eb8a910d60d4329fdd5cefffebd56dbadea50e6b3b6f679040123108e248ff", "ref_doc_id": "94f8b243-6631-4a28-83c2-1b837ff0fc14"}, "25e6cb47-d100-495c-9ac1-0632b9da2480": {"doc_hash": "e65c6f9b69455d5bd38ef953e3b8aac82cce12b0d941230fc6208f33b433c79f", "ref_doc_id": "94f8b243-6631-4a28-83c2-1b837ff0fc14"}, "aceb9da0-6182-4287-ad9e-063d426d15e2": {"doc_hash": "b25aa9688cd807b35666ba2105001499ab226c0e616491e04f02e97397a17266", "ref_doc_id": "94f8b243-6631-4a28-83c2-1b837ff0fc14"}, "3cdd4011-bc68-42d3-8969-66b3f7f9fd15": {"doc_hash": "ecbc9021ade1a5131c3c35f8ee6fd95a9b5dccc0ef4e5b97c87784c36f8ad938", "ref_doc_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798"}, "5d86ab6a-1e42-4381-9bdb-31ea1f89fb80": {"doc_hash": "50c9ab384d1b33ba8847cf9c712efbe1d0482063d28d63cb3b6c0c6d240b6393", "ref_doc_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798"}, "92b33dec-88e4-405e-9bb9-61ca1a735b1b": {"doc_hash": "14a01ce229f38e56becec93c19fd4ab1c968d0166a086a11d2c135014293eb11", "ref_doc_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798"}, "dc55c4a5-266c-4c9c-a4e7-7e10341c9de5": {"doc_hash": "0f961f53538850fc25cffb4c75d2c031ceeee98ab77a8d766cbe05ef376e14da", "ref_doc_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798"}, "75ed4c07-fdce-4598-8d34-30640de6a8c1": {"doc_hash": "479a41a0ed8e879f74f86a4a7cfea36e2e6f34af910375782bb8b06d238b3533", "ref_doc_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798"}, "b526ecc7-b97f-4451-a716-20c97ba30c82": {"doc_hash": "296e01a56554edc2375d416ac7608c74b8f12d2978797a891817589d49a63211", "ref_doc_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798"}, "f3f78911-b871-4c55-8731-756dbc5aa282": {"doc_hash": "5d7aed78f767cab6365dd94ed7f87e5cb52b5d4ef4acf2c8df7e39c7b496fbe5", "ref_doc_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798"}, "52b6ee87-7026-4a2a-aa68-b2c0ca166ed4": {"doc_hash": "e1b22c13feff492537f2bee95713c6b7d2c2b28dc407e125f0d4c90fc4819c81", "ref_doc_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798"}, "6fd5cc7b-2db9-4c08-8424-a543ba8a07c4": {"doc_hash": "54824758cd2c70092c67ee3f214c5000d2d3204e23d65565c757759c09784fcc", "ref_doc_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798"}, "d44274dd-432d-4019-8686-6bebcf66594b": {"doc_hash": "b0955748cd0da68419d9fecfecc775e65c04126b2a584b3ba17808f7d853fb59", "ref_doc_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798"}, "71a4ee90-7e5e-4fff-8876-90cbf979a65c": {"doc_hash": "85030e9f5e692f675ddf4f6978beec0e08d5131a85466e863c22a90fef89138c", "ref_doc_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798"}, "348ec02d-0c47-4de8-b6ff-9565555a0816": {"doc_hash": "0f0badcdc78d97e7d1a2517978fb91e7f7bc9b0b4dcea784c69ad8e3d7102057", "ref_doc_id": "78ef90b9-b965-47fb-be51-151b49c33249"}, "aa29d473-75ab-4be5-9e8a-cf0abe35180a": {"doc_hash": "9434d5cd2b6418cb8a1fb9bca45e797ca21188289e05b1820995aa5b15707338", "ref_doc_id": "78ef90b9-b965-47fb-be51-151b49c33249"}, "0de07b18-a4f1-48cd-82f7-2cbe483f039e": {"doc_hash": "9f8ab17ed06712b563e06fd1cfeabfcb1bdfdcbf994ab52f4cd11490de17d051", "ref_doc_id": "78ef90b9-b965-47fb-be51-151b49c33249"}, "a2b05a0c-c699-491f-b063-dc24ce54b9d9": {"doc_hash": "2838d0cabca6d774622979c2afc0c98b4e8d9ac3fd22dafc5975729c187c7a4b", "ref_doc_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87"}, "f3b1ba30-c716-4ab5-903c-cb498940132c": {"doc_hash": "e7165ff981881ebec02b4d438e3802f4f0ac692a00031e9623e3a4d9df34a995", "ref_doc_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87"}, "ebb129d1-7096-4262-b8e8-e5457e02c16e": {"doc_hash": "5b891ebbabcafc39dfde4a76d9403040f18719053f3b1be59ec7caf094df6def", "ref_doc_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87"}, "7fa8e492-916e-4246-abeb-a0139f8155e9": {"doc_hash": "b913e539ce4ce66344beadbc4b467a52a4a50709e915cf6bffc402a5cab1b220", "ref_doc_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87"}, "88353351-597c-4f48-9710-416be70ed517": {"doc_hash": "3a2a9efbf3353b8b03a2698bf19f3d8b26e5051f9cbd18b8d9ed6972bfb05aca", "ref_doc_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87"}, "0573e874-b0f1-49d4-bc44-a7cd3df06f9c": {"doc_hash": "0970a6e81065bb4b0415462dd008b2a0c8e41a7bf14c9151c40bc80b115df125", "ref_doc_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87"}, "f28ed727-e54f-4931-a774-27814c9c2c12": {"doc_hash": "b1aec757a0273ca34b716438ceac55c7303d2254d59b67056610460cdf69032f", "ref_doc_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87"}, "80d8543b-9657-4c7a-8212-52d749e43a01": {"doc_hash": "37a7065c20c18c1615a29dfa4af06c1201c4f5b3f326f34a194e5450fd0e17c4", "ref_doc_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87"}, "1c4c8211-6512-470e-a3c5-dd8425fa365d": {"doc_hash": "8fb6157bfe44c823aab09a52a4c44cb30da0bb9ef7cf3c46d74897c05f6c78df", "ref_doc_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87"}, "a0ee20ab-f0db-45da-b6fe-58515711a90f": {"doc_hash": "81c01fea92215f4d9cabbbbf46b85402dd17405434ce97c648743b4360489f21", "ref_doc_id": "808a3577-2990-4d70-8936-90c3f1a265ab"}, "d906bcfb-6a67-4667-a263-90dd09ba2b9c": {"doc_hash": "89e7e22d79e7ea3dfb77d55875182a750596396d77eabae57b89125990e7ac59", "ref_doc_id": "808a3577-2990-4d70-8936-90c3f1a265ab"}, "12971a22-603e-438e-a3c2-3eee0c64a733": {"doc_hash": "69decbdf8aad8e80110afeb37f4b8298de3f8bd89b9f3ecdb26406d997196572", "ref_doc_id": "808a3577-2990-4d70-8936-90c3f1a265ab"}, "e3423b4f-9d7c-4a64-8af8-ae299dfe0a6e": {"doc_hash": "88b097bbaf4a67d2a8dae8535396ad89967b164e6ed9885d2735a8190c0cccdd", "ref_doc_id": "808a3577-2990-4d70-8936-90c3f1a265ab"}, "59c4c185-04c0-4758-92ff-55ebd0c7c067": {"doc_hash": "2effa7995c0c37688706fb71c8fde715e82bb3f0cf496e95363988aceade99f8", "ref_doc_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d"}, "0ab041f2-ff60-4e1a-9ad9-296bc49a7f9e": {"doc_hash": "2da4386ebec33faf0c363fd70d59b25327324ee46ff0b4b8d8d4fd16c69e4dfc", "ref_doc_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d"}, "2ba38c8a-eae8-4b26-b76c-aa1d46ec4b19": {"doc_hash": "c45d475d283131b6798118f023502319bee20eadbea48d0e5e34e6e4f785c0b9", "ref_doc_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d"}, "302b065c-b853-4b0f-a167-f833149b8c3a": {"doc_hash": "b758a9e676d386f8fdaf8ab38ae6e7877027acc5e4854a55d225ab86d9d9e784", "ref_doc_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d"}, "c5cd59b6-20a0-4118-8dfd-51886855783f": {"doc_hash": "a17be70e88a32729c5bfa2785ecd0114b3db03b067192b93df3a76bcdc918651", "ref_doc_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d"}, "72525c5a-f087-4e68-bed9-f2710f8940f6": {"doc_hash": "e53bea2cd73a6a31551fade009aa10ffcdd90d3f19c6b6c778b1edc80152796a", "ref_doc_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d"}, "829d8da7-52ac-44be-9f33-d82fe2e6aeeb": {"doc_hash": "534014a92885d09b59b309846260ffb0f7bca6ecbfefac9a618ead4428f7a25f", "ref_doc_id": "72d46d27-8773-4064-a178-753ec3e1f5c1"}, "cf8ab881-8d0c-4d5c-a9f2-02f200fb307a": {"doc_hash": "b90acffaa7632c03e8b8da6f67db7c1466aba436acf5a0ddcba22937197d599e", "ref_doc_id": "72d46d27-8773-4064-a178-753ec3e1f5c1"}, "5b322323-3bee-4bd9-961c-4eb6a6032e96": {"doc_hash": "57272118078acbaccdf53246230d0aacb34a765478ce24958a1051cdfc18b9be", "ref_doc_id": "72d46d27-8773-4064-a178-753ec3e1f5c1"}, "ccb5328f-ad33-4053-a458-93107e8325f6": {"doc_hash": "f0c6a566525a69727d75310fa6d0d615507041f5e999945a66521425e81d54d5", "ref_doc_id": "72d46d27-8773-4064-a178-753ec3e1f5c1"}, "843976af-f8e3-48e1-a0a6-c94ceea2e21e": {"doc_hash": "743ef18230744fa7481f4db7da05f159c78d6e766d3fcae387c0bdbdb0bdacf4", "ref_doc_id": "72d46d27-8773-4064-a178-753ec3e1f5c1"}, "e273cd46-c8f1-4c1a-9d23-d1f2f5e615be": {"doc_hash": "1cc9eb3f7797f1a510da344609269b9d817b8b18bad55285a9a1f14795ecde9b", "ref_doc_id": "505d9135-88b7-4d6e-995d-3f64b53d345c"}, "4ce761b5-7931-4d6a-9fd0-8936a07ed482": {"doc_hash": "045e48996a9070b8f5d959d2bb1fac3136af2cb5469c26ae303b7690be76981c", "ref_doc_id": "505d9135-88b7-4d6e-995d-3f64b53d345c"}, "c4179b97-64ec-40c1-868a-94980bd3729d": {"doc_hash": "d3a1532ba2ddc6d26f47fe7ce1b4e658d7c56fbb475e814a82a3d3ae370bda1e", "ref_doc_id": "505d9135-88b7-4d6e-995d-3f64b53d345c"}, "7eff0ef2-5e07-4bce-9ca4-36a95ec6a8b1": {"doc_hash": "fd2e5eaebaf28373fdaaaba588551b7deed811944d22bfa8d3871c147220d364", "ref_doc_id": "505d9135-88b7-4d6e-995d-3f64b53d345c"}, "1381a3bb-e2ab-4867-ab11-6c74db28c30c": {"doc_hash": "7745cb7384b21ac7691e51dffd2b7c3274f3d3e1771dbe072b2b1e421ce061d7", "ref_doc_id": "505d9135-88b7-4d6e-995d-3f64b53d345c"}, "db3574aa-16a8-413f-a7c2-a93c009db242": {"doc_hash": "f597534ccc4fa90d195975b849afe24b554729f3ea84e646a712ea74914258a1", "ref_doc_id": "505d9135-88b7-4d6e-995d-3f64b53d345c"}, "97a00d86-a29f-4a38-94ba-9c3638610475": {"doc_hash": "7a2246440ab8246b51196d6e2f6d324f4ec0051b152213d6ff2ecee44275bbe7", "ref_doc_id": "505d9135-88b7-4d6e-995d-3f64b53d345c"}, "088a9248-b509-4bc0-94ba-72a98887e448": {"doc_hash": "a861dee850445ab999a84cbba4d43094fc92454c6c2ea4cd0acc93d06041af78", "ref_doc_id": "505d9135-88b7-4d6e-995d-3f64b53d345c"}, "0da8a333-6645-4c91-9498-6298ed89c585": {"doc_hash": "29e41a2b4795683d699e00fce65d9da757b7fc9b17995dc6c10d3d6eef7629e7", "ref_doc_id": "505d9135-88b7-4d6e-995d-3f64b53d345c"}, "fb63a99e-47d5-4385-86a3-1119bf92b204": {"doc_hash": "146645eaabcc801ad25ed4b8302e1b8d523cc6aca27362d0dd3c1817bf6dd2b8", "ref_doc_id": "505d9135-88b7-4d6e-995d-3f64b53d345c"}, "202324f4-3b8f-4a52-850e-f44a982e21e8": {"doc_hash": "962ea06efca1793a1338c3cd6abe1a71429b5d50fe37901536e29cafec5654f0", "ref_doc_id": "1873d2cf-6ccb-4ed2-bb98-f3653a46e945"}, "742ea996-012e-4800-94e1-340b3c72972d": {"doc_hash": "5ad451a544c6f486df970a107e24414d27e1b9535b8d5234db37043b6f6b379b", "ref_doc_id": "1873d2cf-6ccb-4ed2-bb98-f3653a46e945"}, "bf5c9ff7-0ad7-4b06-bc9a-60880379050d": {"doc_hash": "1294c5deeff99caf83b46a6bb6645f02ed85fce6e88f0e1edb881fce49fde9f4", "ref_doc_id": "1873d2cf-6ccb-4ed2-bb98-f3653a46e945"}, "338f7575-0ae9-4a4f-8afc-f189af26886a": {"doc_hash": "5642e9e2f45f4aad413553bd4e8c9c8170a5c954b19b77d91e5dcb7354e9cd9c", "ref_doc_id": "1873d2cf-6ccb-4ed2-bb98-f3653a46e945"}, "34faa932-5b71-4896-a477-7d01765f025e": {"doc_hash": "d9f265d99c588ab658aac0cec3db8b994a6b172bf81ff88397b7a4516eb91695", "ref_doc_id": "9e6e75d0-9854-4ebc-afe1-dfee75eb64ec"}, "f5dad686-1f36-4d4a-93e1-846b02beab02": {"doc_hash": "5247f1d1998ac3e18d0422a85aa193773ff7c24a7dee0acde08ddb6a4ad154c4", "ref_doc_id": "9e6e75d0-9854-4ebc-afe1-dfee75eb64ec"}, "64a653f7-9baa-4b73-8e89-fd7141a34996": {"doc_hash": "5c84727512c2b263b1eda67812b127a1c1d939d2e035d3e585ad4421767141a4", "ref_doc_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07"}, "70a76db5-3c84-43ca-a8da-81857fa28c59": {"doc_hash": "563414e6424e404c9157dff5decd45b4ffa815de6085252f1304c7858cb963e0", "ref_doc_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07"}, "2fedaf44-69ff-4388-a717-5ebf4ef0f6c9": {"doc_hash": "d722c43f12c901703c76895e2e77a317bd9d2b013247a1a798935ebf7700c9b0", "ref_doc_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07"}, "204810fc-17ce-4327-b9a3-795030f25a00": {"doc_hash": "1026ea02b60e2f7334f7f1c2913324aff7607bff7adf3affce88af91743d4899", "ref_doc_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07"}, "de44e879-822b-4262-9089-135c7b4eeb53": {"doc_hash": "deb034bd29f3c27796d684a90fc62975112f64055e5dce52115a5177ae66c0ba", "ref_doc_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07"}, "fa8cd33f-191e-4a11-a68a-824e120d0016": {"doc_hash": "73aa72700e73c64d74ea4c9a5fa2daeb23585451cddc550dccf361d16c2531d9", "ref_doc_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07"}, "05c6df77-0b20-4b90-beab-9b6fb3e296ea": {"doc_hash": "c8691fb59e3f12f271c09ff8ce13e120dbee2789ffc9f5d6c8b046de0a043e0e", "ref_doc_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07"}, "934c6e49-4a2c-4cb7-bd8d-5da8a93db7b9": {"doc_hash": "778e03ea54c28e5d1d284f97c3f9b5d9a82febc588b7dde2042f53102ea7457c", "ref_doc_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07"}, "e56d9887-847a-442c-b6f7-8d19bd3f91ce": {"doc_hash": "ba0c2ced2f48cfb7d8b9d31a7d38c3d07a02e06495dc9c671652065e7a53caf6", "ref_doc_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07"}, "e8fdce31-d0bd-40ec-b326-1c95b22cb112": {"doc_hash": "9c9edcd6340a1e75ab2505e92825da40b43b6af694a6f054c8ba90f2e1fcc4e3", "ref_doc_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07"}, "d7feb2d4-9397-409a-aafb-ebd60de4e540": {"doc_hash": "37679966e60466f6d926addb0a274ea1c678b9f5904f096b8d26f53697319ae7", "ref_doc_id": "0055d9c7-aa2c-465d-bc7b-bd7913bf6ebc"}, "01bab896-eda2-4e53-b307-2df10c88ccc3": {"doc_hash": "7fe7945e23a5f33c2f5b88b54b35a8b421aa112b5a0ff40e4417b4612ca08170", "ref_doc_id": "0055d9c7-aa2c-465d-bc7b-bd7913bf6ebc"}, "e8648f61-1266-4b11-97b2-0a083afbf696": {"doc_hash": "e05ea894a144ca083e960fd77043858672a05b31eda9a89a0d44dff7c17e7b69", "ref_doc_id": "0055d9c7-aa2c-465d-bc7b-bd7913bf6ebc"}, "9feaae92-e35e-4c64-94f4-9bdff50b1ec2": {"doc_hash": "107acf29e4030ed9b99c83703f50b47249ae965fabdbfcf71afb3bcd5b492e23", "ref_doc_id": "0055d9c7-aa2c-465d-bc7b-bd7913bf6ebc"}}, "docstore/data": {"fabd5f98-a782-4c1d-beff-910648178d11": {"__data__": {"id_": "fabd5f98-a782-4c1d-beff-910648178d11", "embedding": null, "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0d424c81-acb7-4efa-8b9c-a7d76ce226f3", "node_type": "4", "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}, "hash": "06f7ca04ace271ee701a902c39e2fff3a0b12f3f3f35691bbe591b1fb895be52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06bf1905-ce9e-4ee6-b9c2-302a96e83d7d", "node_type": "1", "metadata": {}, "hash": "b47eddef7646b37e1430e3f5c9bea9c79c6b7a6ebafa9919a2177b20b5d6d1d2", "class_name": "RelatedNodeInfo"}}, "text": "0   63542\n    EE542\n   Loculro I:Intodctbn\n    Lecture 1: Introduction\n    Internet and Cloud Computing\n\n\n    Young Cho\n    Department of Electrical Engineering\n    University of Southern California\n\n\n                                          1\n---\nGoals\n Goals\n\n\n  \uf097 Internet\n      \u25e6 Computer Networking\n      \u25e6 Internet protocols\n      \u25e6 Network Security\n      \u25e6 Networking Applications\n  \uf097 Cloud Computing\n      \u25e6 Networked Computers\n      \u25e6 Parallel Computers\n      \u25e6 Internet of Things\n      \u25e6 Big Data Analytics\n      \u25e6 Artificial Intelligence and Machine Learning\n      \u25e6 Hardware Accelerated Processing\n  \uf097 No Time to Waste\n\n\n                                             6/13/2024  2\n---\nLeststs\n Logistics\n\n\n  \uf097 Lectures\n      \u25e6 Mondays and Wednesday\n  \uf097 Assignments\n      \u25e6 Paper Reading (Slide Submissions)\n      \u25e6 Laboratory Assignments (Reports, Forum Posts, and Demos)\n      \u25e6 Final Project (Report, Presentation, and Demo)\n  \uf097 Instructor:Young Cho\n  \uf097 Teaching Assistants: Yude Wei and Haonan Wang\n  \uf097 Web Sites\n      \u25e6 Blackboard\n      \u25e6 Amazon Web Services\n\n\n                                           6/13/2024              3\n---\nCourso Syllabus\nCourse Syllabus\n\n\n \uf097 Attendance\n \uf097 Reading List\n \uf097 Laboratory Assignments\n \uf097 Final Project\n   \u25e6 Final Project Pitch\n   \u25e6 Final Report\n\n\n                           6/13/2024  4\n---\nFrokectProject\n\n\n  \uf097 Laboratory Assignment\n     \u25e6 Individual or Team\n     \u25e6 Youtube Video Recordings\n  \uf097 Tools\n     \u25e6 VirtualBox\n     \u25e6 Amazon Web Services or others\n     \u25e6 Linux network API (sockets, pcap lib, and etc.)\n\n\n                               6/13/2024                5\n---\nPerepectie\n Perspective\n\n\n  \uf097 A Huge Domain\n  \uf097 Main Topics\n     \u25e6 New Directions on Internet\n     \u25e6 Machine Learning on Cloud\n  \uf097 Methodology\n     \u25e6 Protocol Design\n     \u25e6 Internet of Things\n     \u25e6 Machine Learning\n  \uf097 How to not waste time\n     \u25e6 Work on your own research\n     \u25e6 Publish a paper?!\n\n\n                                   6/13/2024  6\n---\nThe Internet\nThe Internet\n\n\n \uf097 Computer Networks\n    \u25e6 Network interfaces\n    \u25e6 Switches\n    \u25e6 Routers\n    \u25e6 Firewalls and etc\u2026\n \uf097 Software\n    \u25e6 Network protocols\n    \u25e6 Operating System interface\n    \u25e6 Application level interface\n \uf097 Hardware\n    \u25e6 Lightweight microprocessors\n    \u25e6 Hardware accelerators\n    \u25e6 Network processors\n\n\n                                   6/13/2024  7\n---\nComputer Network\n Computer Network\n\n\n                                       H3\n                    3I\n     H1\n                                R4\n                R2\n                         R3\n                                       R6\n                      R5                   H4\n               H2\n                     Destination Next Hop\n                     H1     R3\n                     H3     R3\n                     H4     R6\n\n\n                         6/13/2024             8\n---\nComputer Network Hardara\n Computer Network Hardware\n\n\n                   6/13/2024  9\n---\nOpen Syatem Intonconnectkon\n Open System Interconnection\n                                         O5I MODEL\n                                          ApplicationLuyel\n                                                   mnmunication:\n                                          cliertsery_transter\n                               6          presentation Luyel\n                                                       2corverslor\n                                                binary, etc_\n                              5           Session Layer\n                                          Starts_Sop:Spssior\n                                          Maintains order _\n                               4         Fesoresdelivery\n                                                        Transport Layer\n                                                            ertire\n                                             Or Message\n                               3          Iletwork Layer\n                                          Routes datato differert\n                                          LANsand WANs basednetwyorkaddress\n                               2  mo =O  Data Link (MACI Layer\n                                          Transmits packetsfrom\n                                         nodetonodeDased\n                                          sation address                9\n                                          Physical Layer\n                                          Flectricssignals anocabling\n                                                                             From computer desktop\n                                                                             encyclopedia \u00a9 2004\n\n\n                                              6/13/2024                                             10\n---\n         Internet Protocol\n          Internet Protocol\n\n\nProblem: Network Overload\n\n\nSolution: Buffering and Congestion Control\n     \uf097 Short bursts: buffer\n     \uf097 What if buffer overflows?\n        \u25e6 Packets dropped\n        \u25e6 Sender adjusts rate until load = resources \u2192 \u201ccongestion control\u201d", "start_char_idx": 0, "end_char_idx": 5036, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06bf1905-ce9e-4ee6-b9c2-302a96e83d7d": {"__data__": {"id_": "06bf1905-ce9e-4ee6-b9c2-302a96e83d7d", "embedding": null, "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0d424c81-acb7-4efa-8b9c-a7d76ce226f3", "node_type": "4", "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}, "hash": "06f7ca04ace271ee701a902c39e2fff3a0b12f3f3f35691bbe591b1fb895be52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fabd5f98-a782-4c1d-beff-910648178d11", "node_type": "1", "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}, "hash": "cce4950ea25a64c89d986c062e185c833ca847b50f03b2904f29827dcb14eed6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d5cc201-b2b3-45c7-8810-62e41eeb4200", "node_type": "1", "metadata": {}, "hash": "87d0bc6d874e4c69f218a50d76e8e53970422f6b22b374626fc22258cca1f0f8", "class_name": "RelatedNodeInfo"}}, "text": "6/13/2024                                             10\n---\n         Internet Protocol\n          Internet Protocol\n\n\nProblem: Network Overload\n\n\nSolution: Buffering and Congestion Control\n     \uf097 Short bursts: buffer\n     \uf097 What if buffer overflows?\n        \u25e6 Packets dropped\n        \u25e6 Sender adjusts rate until load = resources \u2192 \u201ccongestion control\u201d\n\n\n                                                                             11\n---\n          Interet Oreantzatkon\n           Internet Organization\n           Client socket address                       Server socket address\n            128.2.194.242:51213                          208.216.181.15:80\n       Client                                                              Server\n                                Connection socket pair                    (port 80)\n                      (128.2.194.242:51213, 208.216.181.15:80)\nClient host address                                                 Server host address\n   128.2.194.242                                                        208.216.181.15\n                                                Hosts use port numbers to\n             Routers use the IP                 determine what to do with\n           addresses to forward                    traffic when it arrives\n        packets to their destination\n                                                  6/13/2024                              12\n---\nBrindaInternet transport is moving from TCP to UDPIRaglhunatha Bharadwaj                                                                                                                                                                                                 Fri,                Aug10, 10.33 AM (10 days ago)\nto YoungInbox\nMy name is Brinda and\n                     Hello Professor;Lohith Bellad\n                                                  Reason fr te Emphasb\n                         Reason for the Emphasis\n                                                Young, younghc                                                                     had taken the CS558L class with you last fallSun, Jul 22, 9.15 AMhave been interning at Sony\n PlayStation with the PlayStation Now team for the summer(referred by You) and will also be continuing\n                                                                                                      Good Morning Professor;\nduring the fall:This is Lohith Bellad.wanted t0 tell youworked under yourguidance at USC Information Sciences Institute and also hadlittle about the work                                                                                                                                                   have been doing this summer:                                                          can also send\n detailed report on the same by next weektaken CSCI558L course in the Fall 2014. Networking is the field which always fascinated me from\n        have been interning with the Core Engineering team at PlayStation Now which is responsible for\n                childhood\nmaintaining the backbone inirastructure for the streaming service ie they have their own reliable\n                After graduating from USC                                                                                             started my career in Juniper Networks as a kernel developer in Data Center\n communication protocol which runs on top of UDP along with their own\n               Switching BU. There it was great 2.5 years working on FreeBSD and JUNOS kernel, mostly on L2 layerCongestion Control Algorithm which\n helps with efiicient data delivery:and Core OS networking drivers. During my free time                                                                                                                                                             try to contribute for FreeBSD project (active project\n        have been working on improving their\n                                            under BSD OSes, mainly because of Netflix).congestion control protocol and wrote\n                                                                                                                                                                                                                   work on MPTCP and also TCPIIP stack in general forVersion 2 of it which\n addresses specific important changes as to howFreeBSD:                                                                                                                                                                                                               reacts when the Client side network bandwidth changes\nalong with better response t0 lossidelay conditions on the network as well as increased the speed of\n                     was more interested in Internet Transport protocols,so recently switched jobs from Juniper to Cloudflare\nrecovery when it falls Iow making sure it doesn't cause any corruption during the fast increase\n                (CDN company at its core) after figuring out Internet transport work is mostly done at CDN companies.                                                                                                                                                                                                                                                                                            Additionally\nthey employ a FEC methodology to check for available bandwidth on the network which\n                                                                                   Currently working on user-land transport protocol based on UDP for accelerating mobile app trafiic                                                                                                                                                                                                           had to modify\nbit for the Congestion Control Algorithm:Alsoam closely following Google and IETF drafting on QUIC (Quick UDP Internet Connections) Google\n                says 35% 0f its web traific is handled via Google QUIC . IETF is working hard t0 standardize it by late next\n This was justyear:                                                               brief summary but                                                                                      could send you the entire report by next week                                                                                                                                  also wanted t0 mention\nthat now that                                                                 have started working in the industry, its amazing to see the startling resemblance with the\n type of projects we had done a5 part of our academic coursework with real world applications\n                                                                                             AlI this reminds me of several projects done at USC as part of CSCISS8L.", "start_char_idx": 4685, "end_char_idx": 11627, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d5cc201-b2b3-45c7-8810-62e41eeb4200": {"__data__": {"id_": "5d5cc201-b2b3-45c7-8810-62e41eeb4200", "embedding": null, "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0d424c81-acb7-4efa-8b9c-a7d76ce226f3", "node_type": "4", "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}, "hash": "06f7ca04ace271ee701a902c39e2fff3a0b12f3f3f35691bbe591b1fb895be52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06bf1905-ce9e-4ee6-b9c2-302a96e83d7d", "node_type": "1", "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}, "hash": "818152fd54a1b9dd63e0e56edba03a01621d51b4c33d34cfc84fc6b0ce8284ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf6b8ecc-ae64-48cf-b55f-3a01589d851a", "node_type": "1", "metadata": {}, "hash": "eb418264a38713329b74d1f05d0ff160a189ee2f4318b163ff0df96c03d55360", "class_name": "RelatedNodeInfo"}}, "text": "Additionally\nthey employ a FEC methodology to check for available bandwidth on the network which\n                                                                                   Currently working on user-land transport protocol based on UDP for accelerating mobile app trafiic                                                                                                                                                                                                           had to modify\nbit for the Congestion Control Algorithm:Alsoam closely following Google and IETF drafting on QUIC (Quick UDP Internet Connections) Google\n                says 35% 0f its web traific is handled via Google QUIC . IETF is working hard t0 standardize it by late next\n This was justyear:                                                               brief summary but                                                                                      could send you the entire report by next week                                                                                                                                  also wanted t0 mention\nthat now that                                                                 have started working in the industry, its amazing to see the startling resemblance with the\n type of projects we had done a5 part of our academic coursework with real world applications\n                                                                                             AlI this reminds me of several projects done at USC as part of CSCISS8L. You had guided students on                                                                                                                                                                                                                     wolld\n never have imagined that the world's biggest companies are working with the kind of technology we had\n                                                                                                      implementing their own user land transport protocol based on UDP and it was so much fun then doing that\nplayed with in class andand now Internet is moving towards that approach: CSCI558L and work done under your guidance at USCam very grateful to You for providing us with such an enriching experience_\n                ISI plays asignificant role in my day to day work and also in contributing to open source communities                                                                                                                                                                                                                                                             am\n                very thankful to you for offering such a wonderful courseduringmy masters.\n Additionally;Looking to attend for some interesting seminars on Networking at USC Information Sciences Institute.would Iike to know if you could supervise my Fall internship CPT in the same company:\n Looking forward t0 YOur reply:\n               Sincerely;\n Thank You once again for everything :)Your student\n BrindaLohith Bellad                                                                                                                                                                                                                                                                                                      6/13/2024       Internet and Cloud Computing                                                         13\n---\nInteret\nInternet\n\n\n \uf097 Understand Internet\n    \u25e6 Learn the computer network\n    \u25e6 Understand and manage routing tables\n    \u25e6 Low level network packet processing\n \uf097 Building a Network Protocol\n    \u25e6 Application-Level Protocol\n    \u25e6 Handle basic control level protocol\n    \u25e6 Resolve communication problems on Internet\n    \u25e6 Modification to kernel level modules\n\n\n                              6/13/2024           14\n---\nOnline Course Toob\nOnline Course Tools\n\n\n \uf097 Please use Blackboard\n    \u25e6 Announcements\n    \u25e6 Laboratory Assignments\n    \u25e6 Reading Assignments\n    \u25e6 Forum Discussions\n \uf097 Forum is very important\n    \u25e6 Post all of your questions and answers\n    \u25e6 Ask and Answer whatever you need\n    \u25e6 We will attempt to keep track of your contributions\n\n\n                               6/13/2024                   15\n---\nReadingAsstonments\n  Reading Assignments\n\n\n  \uf097 10 Assignments Posted\n      \u25e6 Read\n      \u25e6 Submit Summary Slides\n  \uf097 Summary PowerPoint Slides\n      \u25e6 Summary slides of your understanding\n      \u25e6 At least one hand drawn diagram\n      \u25e6 Summary tables, if possible\n      \u25e6 Usually, Due Tuesdays at 11:59 PM\n\n\n                                      6/13/2024 Internet and Cloud Computing  16\n---\nLaboratory Asstenments\n Laboratory Assignments\n\n\n  \uf097 Submit Archive of Laboratory Results\n     \u25e6 Summary PowerPoint Slides\n     \u25e6 Source Code and README instructions for code\n     \u25e6 Usually Saturday 11:59 PM\n  \uf097 YouTube demonstration video\n     \u25e6 Usually, the following Monday 11:59 PM\n  \uf097 Scoring\n     \u25e6 On-time Submissions (no exceptions)\n     \u25e6 Multiplied by 1.0 if on-time\n     \u25e6 Multiplied by 0.5 if late\n     \u25e6 Demonstration Videos on YouTube\n     \u25e6 Internet Accessible Link to the Archive (ZIP) of all\n\n\n                                      6/13/2024              17\n---\nLaboratory SummarySlkdks\n Laboratory Summary Slides\n\n\n  \uf097 Represent Essential Aspects of the Lab\n  \uf097 Diagrams for Hardware/Software\n    Configurations\n  \uf097 Figures and Flowcharts describing Algorithms\n  \uf097 Tables to summarize results\n  \uf097 Do not copy and paste of some other person's\n    diagram/work\n  \uf097 Original diagrams and tables created by you\n  \uf097 Sufficient Descriptions using Fewest Words", "start_char_idx": 10056, "end_char_idx": 15759, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf6b8ecc-ae64-48cf-b55f-3a01589d851a": {"__data__": {"id_": "cf6b8ecc-ae64-48cf-b55f-3a01589d851a", "embedding": null, "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0d424c81-acb7-4efa-8b9c-a7d76ce226f3", "node_type": "4", "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}, "hash": "06f7ca04ace271ee701a902c39e2fff3a0b12f3f3f35691bbe591b1fb895be52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d5cc201-b2b3-45c7-8810-62e41eeb4200", "node_type": "1", "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}, "hash": "f69c0adf9662569236439bf6bd356c9c48e291a619bebf2d1bd454899e808c04", "class_name": "RelatedNodeInfo"}}, "text": "6/13/2024              17\n---\nLaboratory SummarySlkdks\n Laboratory Summary Slides\n\n\n  \uf097 Represent Essential Aspects of the Lab\n  \uf097 Diagrams for Hardware/Software\n    Configurations\n  \uf097 Figures and Flowcharts describing Algorithms\n  \uf097 Tables to summarize results\n  \uf097 Do not copy and paste of some other person's\n    diagram/work\n  \uf097 Original diagrams and tables created by you\n  \uf097 Sufficient Descriptions using Fewest Words\n\n\n                              6/13/2024           18\n---\nIncorporatnsVdos In\n Incorporating Videos in\nFesentatbn Dem\n Presentation/Demo\n  \uf097 Use Smartphone Camera\n     \u25e6 Capture your audio and video\n     \u25e6 Prove your work/progress\n  \uf097 Screen Capture Software\n     \u25e6 http://www.maartenbaert.be/simplescreenrecorder/\n     \u25e6 https://www.ispringsolutions.com/ispring-free-cam\n     \u25e6 https://getsharex.com/\n     \u25e6 Or other screen capture software\n  \uf097 Content\n     \u25e6 Capture essential steps with result narrative\n     \u25e6 Show the completed result of the Lab\n     \u25e6 Include Powerpoint Slides for diagrams and tables, if needed\n\n\n                                    6/13/2024                        19\n---\nConduskon\n Conclusion\n\n\n  \uf097 Laboratory Assignments due this Saturday\n  \uf097 Laboratory Demo Video link due Monday\n  \uf097 Reading Assignment Presentation due Tueday\n\n\n                             6/13/2024          20", "start_char_idx": 15337, "end_char_idx": 16668, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a5217a07-55b2-411c-9cf7-16f0596c4274": {"__data__": {"id_": "a5217a07-55b2-411c-9cf7-16f0596c4274", "embedding": null, "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a2b03b32-0e7c-4bcf-89ae-97566828528e", "node_type": "4", "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "hash": "f9d6b7936736eb6d2a87a184805fcd345b713054c265becd5cc67ff4a0f71de8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "243fb3e1-195a-48aa-b3c1-cd3ddb684bbc", "node_type": "1", "metadata": {}, "hash": "1161f84daf5f8777363b83c19fec3ef396d2889dab30065cab9a8302d844b14f", "class_name": "RelatedNodeInfo"}}, "text": "0  EE 542\n   EE 542\n   LLeccure 2;\n   Lecture 2: NetworkingNetworking\n   Internetwork and Cloud Computing\n\n\n   Young Cho\n   Department of Electrical Engineering\n   University of Southern California\n\n\n                                         Slides adopted from Berkeley and Rice\n\n\n                                                                   1\n---\nThe Internet\nThe Internet\n\n\n \uf097 Computer Networks\n    \u25e6 Network interfaces\n    \u25e6 Switches\n    \u25e6 Routers\n    \u25e6 Firewalls and etc\u2026\n \uf097 Software\n    \u25e6 Network protocols\n    \u25e6 Operating System interface\n    \u25e6 Application level interface\n \uf097 Hardware\n    \u25e6 Lightweight microprocessors\n    \u25e6 Hardware accelerators\n    \u25e6 Network processors\n\n\n                                   6/13/2024  2\n---\nComputer Network\n Computer Network\n\n\n                                       H3\n                    3I\n     H1\n                                R4\n                R2\n                         R3\n                                       R6\n                      R5                   H4\n               H2\n                     Destination Next Hop\n                     H1     R3\n                     H3     R3\n                     H4     R6\n\n\n                         6/13/2024             3\n---\nComputer Network Hardara\n Computer Network Hardware\n\n\n                   6/13/2024  4\n---\nOpen Syatem Intonconnectkon\n Open System Interconnection\n                                         O5I MODEL\n                                          ApplicationLuyel\n                                                   mnmunication:\n                                          cliertsery_transter\n                               6          presentation Luyel\n                                                       2corverslor\n                                                binary, etc_\n                              5           Session Layer\n                                          Starts_Sop:Spssior\n                                          Maintains order _\n                               4         Fesoresdelivery\n                                                        Transport Layer\n                                                            ertire\n                                             Or Message\n                               3          Iletwork Layer\n                                          Routes datato differert\n                                          LANsand WANs basednetwyorkaddress\n                               2  mo =O  Data Link (MACI Layer\n                                          Transmits packetsfrom\n                                         nodetonodeDased\n                                          sation address                9\n                                          Physical Layer\n                                          Flectricssignals anocabling\n                                                                             From computer desktop\n                                                                             encyclopedia \u00a9 2004\n\n\n                                              6/13/2024                                             5\n---\nNecworkdng\nNetworking\n \uf097 Communication\n    \u25e6 Between Applications on different computers\n \uf097 Application Resource Needs/Demands\n    \u25e6 Traffic data rate\n    \u25e6 Traffic pattern (bursty or constant bit rate)\n    \u25e6 Traffic target (multipoint or single destination,\n      mobile or fixed)\n    \u25e6 Delay sensitivity\n    \u25e6 Loss sensitivity\n\n\n                                                         6\n---\nBack in the Old\nBack in the Old Days\u2026Daysa-\n\n\n                             7\n---\nPacket Swltchlng (Internet)\nPacket Switching (Internet)\n\n\n               Packets\n\n\n                             8\n---\nPacket Swtchlng\nPacket Switching\n\n\n \uf097 Interleave packets from different sources\n \uf097 Efficient: resources used on demand\n    \u25e6 Statistical multiplexing\n \uf097 General\n    \u25e6 Multiple types of applications\n \uf097 Accommodates bursty traffic\n    \u25e6 Addition of queues\n\n\n                                              9\n---\nCharacterktos d Packet Swttchlng\n Characteristics of Packet Switching\n\n\n  \uf097 Store and forward\n    \u25e6 Packets are self contained units\n    \u25e6 Can use alternate paths \u2013 reordering\n  \uf097 Contention\n    \u25e6 Congestion\n    \u25e6 Delay\n\n\n                                            10\n---\n      Intemetwork]\n       Internet[work]\n\uf097 A collection of        Internet[work]\n  interconnected\n  networks\n\uf097 Host: network\n  endpoints (computer,\n  PDA, light switch, \u2026)\n\uf097 Router: node that\n  connects networks\n\uf097 Internet vs. internet\n\n\n                                         11\n---\nInteret\n Internet\n\n\n  \uf097 Heterogeneous Computer Networks\n       \u25e6 Physical connection via routers and switches\n  \uf097 Largest Conglomeration of Such Networks\n      host      host        host                           host       host        host\n    LAN 1                                                                          LAN 2\n                       router     WAN       router     WAN       router\n          LAN 1 and LAN 2 might be completely different,\n          totally incompatible LANs (e.g., Ethernet and WiFi,\n          802.11*,T1-links, DSL, \u2026)\n\n\n                                                6/13/2024 Internetworking and Dist. Systems  12\n---\nInternet\n                                                          MULTICAST\n                                                           asia-patifkc\n                                                                       north\n                                                            Putod     america\n                               usa canadaasia-paciic        various\n                                                            registrars\n                                europe       norn            various\n                                             amenca\n                                 europe                          registrars\n          Maps of the Internet", "start_char_idx": 0, "end_char_idx": 5905, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "243fb3e1-195a-48aa-b3c1-cd3ddb684bbc": {"__data__": {"id_": "243fb3e1-195a-48aa-b3c1-cd3ddb684bbc", "embedding": null, "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a2b03b32-0e7c-4bcf-89ae-97566828528e", "node_type": "4", "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "hash": "f9d6b7936736eb6d2a87a184805fcd345b713054c265becd5cc67ff4a0f71de8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5217a07-55b2-411c-9cf7-16f0596c4274", "node_type": "1", "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "hash": "5b84bb7219c47fd9df8fd50c820c4d069a06d56945367e28164b99e5faf4016a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a291b007-3a8a-4864-99e5-52791555bf11", "node_type": "1", "metadata": {}, "hash": "b448966abbfb30f287beb811b9c4d7832721a05a78f209dfad1f6a7ffb7b5708", "class_name": "RelatedNodeInfo"}}, "text": "11\n---\nInteret\n Internet\n\n\n  \uf097 Heterogeneous Computer Networks\n       \u25e6 Physical connection via routers and switches\n  \uf097 Largest Conglomeration of Such Networks\n      host      host        host                           host       host        host\n    LAN 1                                                                          LAN 2\n                       router     WAN       router     WAN       router\n          LAN 1 and LAN 2 might be completely different,\n          totally incompatible LANs (e.g., Ethernet and WiFi,\n          802.11*,T1-links, DSL, \u2026)\n\n\n                                                6/13/2024 Internetworking and Dist. Systems  12\n---\nInternet\n                                                          MULTICAST\n                                                           asia-patifkc\n                                                                       north\n                                                            Putod     america\n                               usa canadaasia-paciic        various\n                                                            registrars\n                                europe       norn            various\n                                             amenca\n                                 europe                          registrars\n          Maps of the Internet\n\n\n                      6/13/2024     Internetworking and Dist. Systems          13\n---\nChalkenso\n Challenge\n\n\n  \uf097 Many differences between networks\n    \u25e6 Address formats\n    \u25e6 Performance \u2013 bandwidth/latency\n    \u25e6 Packet size\n    \u25e6 Loss rate/pattern/handling\n    \u25e6 Routing\n  \uf097 How to translate between various\n    network technologies?\n\n\n                                       14\n---\nHow To Aid Nodkest\nHow To Find Nodes?\n\n\n                              Internet\n\n\n   Computer 1                                Computer 2\n\n\n                    Need naming and routing\n\n\n                                                         15\n---\n          NamingNaming\n\n\n                 What\u2019s the IP address for www.usc.edu?\n\n\n                               It is 128.125.253.136\n\n\nComputer 1                                                 Local DNS Server\n\n\n     Translates human readable names to logical endpoints\n\n\n                                                                             16\n---\nRoudngRouting\n\n\n                Routers send\n                packet towards\n                destination         H   R\n\n\n                                              R    H\n            H   R\n\n\n                                 R\n\n\n                                           R\n\n\n                  R\n            H                 R\n                                       R         H: Hosts\n             H                                   R: Routers\n\n\n                                                             17\n---\nMeedngApplkadon Demands\n Meeting Application Demands\n\n\n \uf097 Reliability\n   \u25e6 Corruption\n   \u25e6 Lost packets\n \uf097 Flow and congestion control\n \uf097 Fragmentation\n \uf097 In-order delivery\n \uf097 Etc\u2026\n\n\n                                18\n---\n         Data Cortupton\n         Data Corruption\n\n\nProblem: Data Corruption\n\n\n          GET index.html                    GET windex.html\n                               Internet\n\n\nSolution: Add a checksum\n\n\n              0,9 9       6,7,8 21     4,5 X7       1,2,3 6\n                                                             19\n---\n         Banddth Bottkenedk\n         Bandwidth Bottleneck\n\n\nProblem: Network Overload\n\n\nSolution: Buffering and Congestion Control\n    \uf097 Short bursts: buffer\n    \uf097 What if buffer overflows?\n       \u25e6 Packets dropped\n       \u25e6 Sender adjusts rate until load = resources \u2192 \u201ccongestion control\u201d\n\n\n                                                                            20\n---\n         Lost Packet\n          Lost Packets\n\n\nProblem: Lost Data\n\n\n           GET index.html         Internet\n\n\nSolution: Timeout and Retransmit\n\n\n           GET index.html                   GET index.html\n                                  Internet\n           GET index.html\n\n\n                                                            21\n---\n        Larao Daa\n         Large Data\n\n\nProblem: Packet size\n \u2022 On Ethernet, max IP packet is 1.5kbytes\n \u2022 Typical web page is 10kbytes\n\n\nSolution: Fragment data across packets\n\n\n               ml           x.ht         inde  GET\n\n\n                                                    GET index.html\n\n\n                                                                    22\n---\n         Out 0f Ordker Packet\n         Out of Order Packets\n\n\nProblem: Out of Order\n\n\n              ml           inde    x.ht    GET\n\n\n                                                 GET x.htindeml\n\n\nSolution: Add Sequence Numbers\n\n\n              ml   4       inde 2  x.ht 3   GET 1\n\n\n                                                   GET index.html", "start_char_idx": 4569, "end_char_idx": 9420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a291b007-3a8a-4864-99e5-52791555bf11": {"__data__": {"id_": "a291b007-3a8a-4864-99e5-52791555bf11", "embedding": null, "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a2b03b32-0e7c-4bcf-89ae-97566828528e", "node_type": "4", "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "hash": "f9d6b7936736eb6d2a87a184805fcd345b713054c265becd5cc67ff4a0f71de8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "243fb3e1-195a-48aa-b3c1-cd3ddb684bbc", "node_type": "1", "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "hash": "782e4f392a53e475da4851418c2b3bd71e010711b785f621ed5285b286a4ab2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "577647e0-d761-4bea-a593-6e32fb6003db", "node_type": "1", "metadata": {}, "hash": "4dda6c9ea5f02b72b1605bd9d874d8f40cc56e02e325f75ddc0adff9c8b5ed09", "class_name": "RelatedNodeInfo"}}, "text": "20\n---\n         Lost Packet\n          Lost Packets\n\n\nProblem: Lost Data\n\n\n           GET index.html         Internet\n\n\nSolution: Timeout and Retransmit\n\n\n           GET index.html                   GET index.html\n                                  Internet\n           GET index.html\n\n\n                                                            21\n---\n        Larao Daa\n         Large Data\n\n\nProblem: Packet size\n \u2022 On Ethernet, max IP packet is 1.5kbytes\n \u2022 Typical web page is 10kbytes\n\n\nSolution: Fragment data across packets\n\n\n               ml           x.ht         inde  GET\n\n\n                                                    GET index.html\n\n\n                                                                    22\n---\n         Out 0f Ordker Packet\n         Out of Order Packets\n\n\nProblem: Out of Order\n\n\n              ml           inde    x.ht    GET\n\n\n                                                 GET x.htindeml\n\n\nSolution: Add Sequence Numbers\n\n\n              ml   4       inde 2  x.ht 3   GET 1\n\n\n                                                   GET index.html\n\n\n                                                                 23\n---\n           An Interiet Connectbn\n           An Internet Connection\n           Client socket address                        Server socket address\n            128.2.194.242:51213                            208.216.181.15:80\n        Client                                                               Server\n                                 Connection socket pair                    (port 80)\n                       (128.2.194.242:51213, 208.216.181.15:80)\nClient host address                                                   Server host address\n    128.2.194.242                                                        208.216.181.15\n                                                 Hosts use port numbers to\n              Routers use the IP                 determine what to do with\n            addresses to forward                    traffic when it arrives\n        packets to their destination\n                                                   6/13/2024 Internetworking and Dist. Systems 24\n---\nLots 0f Functkons Needkd\nLots of Functions Needed\n\n\n \uf097 Link\n \uf097 Multiplexing\n \uf097 Routing\n \uf097 Addressing/naming (locating peers)\n \uf097 Reliability\n \uf097 Flow control\n \uf097 Fragmentation\n \uf097 Etc\u2026.\n\n\n                                       25\n---\n         Wat bs Layering}\n         What is Layering?\n\uf097 Modular approach to network functionality\n\uf097 Example:\n\n\n                Application\n\n\n                Application-to-application channels\n\n\n                Host-to-host connectivity\n\n\n                Link hardware\n\n\n                                                     26\n---\nProtocobs\n Protocols\n \uf097 Module in layered structure\n \uf097 Set of rules governing communication\n    \u25e6 Applications\n    \u25e6 Hosts\n    \u25e6 Routers\n \uf097 Protocols define:\n    \u25e6 Interface to higher layers (API)\n    \u25e6 Interface to peer\n      \uf096 Format and order of messages\n      \uf096 Actions taken on receipt of a message\n\n\n                                               27\n---\nLayering Charactertstks\n Layering Characteristics\n\n\n  \uf097 Services\n    \u25e6 Each layer relies on services from layer below\n    \u25e6 Each layer exports services to layer above\n    \u25e6 Provides interface that defines interaction\n  \uf097 Modularity\n    \u25e6 Hides implementation\n    \u25e6 Layers can change without disturbing other\n      layers (black box)\n\n\n                                                      28\n---\n      LxeringLayering\n\n\n   User A                                              User B\n\n\n                                Application\n\n\n                                 Transport\n\n\n                                  Network\n\n\n                                    Link\n\n\nHost                                                          Host\n      Layering: technique to simplify complex systems\n\n\n                                                                    29\n---\n OSI Model: 7 Protocol Layers\n  OSI Model: 7 Protocol Layers\n\uf097 Physical: how to transmit bits\n\uf097 Data link: how to transmit frames\n\uf097 Network: how to route packets\n\uf097 Transport: how to send packets end2end\n\uf097 Session: how to tie flows together\n\uf097 Presentation: byte ordering, security\n\uf097 Application: everything else\n\n\n                                          30\n---\n      OSI Layers and Locatons\n       OSI Layers and Locations\n\n\nApplication\n\n\nPresentation\n\n\nSession\n\n\nTransport\n\n\nNetwork\n\n\nData Link\n\n\nPhysical\n\n\n               Host            Switch  Router  Host\n\n\n                                                     31\n---\n   Ler Encapsubtkon\n   Layer Encapsulation\n\n\nUser A                                     User B\n\n\n                        Get index.html\n\n\n                         Connection ID\n\n\n                       Source/Destination\n\n\n                         Link Address\n\n\n                                                   32\n---\nRemnants of Layering\nRemnants of Layering\n\n\n \uf097 Redundancy\n    \u25e6 Layer N may duplicate lower level\n     functionality (e.g., error recovery)\n    \u25e6 Layers may need same info (timestamp, MTU)\n \uf097 Consequences\n    \u25e6 For assurance and guarantee\n    \u25e6 May hurt performance\n\n\n                                                  33\n---\nAl About Generalbatkbon\n All About Generalization", "start_char_idx": 8342, "end_char_idx": 13592, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "577647e0-d761-4bea-a593-6e32fb6003db": {"__data__": {"id_": "577647e0-d761-4bea-a593-6e32fb6003db", "embedding": null, "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a2b03b32-0e7c-4bcf-89ae-97566828528e", "node_type": "4", "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "hash": "f9d6b7936736eb6d2a87a184805fcd345b713054c265becd5cc67ff4a0f71de8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a291b007-3a8a-4864-99e5-52791555bf11", "node_type": "1", "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "hash": "1a3ff6e8ccbaf6d825ea37d88f2be4adae3c5002d802601310557dfd27b86fca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39d8a405-8519-4684-b382-f8bfec70959c", "node_type": "1", "metadata": {}, "hash": "1167db78c0b709ac868595959efa6230d34c8a1d8a90159fd6f59cd3261a9b51", "class_name": "RelatedNodeInfo"}}, "text": "30\n---\n      OSI Layers and Locatons\n       OSI Layers and Locations\n\n\nApplication\n\n\nPresentation\n\n\nSession\n\n\nTransport\n\n\nNetwork\n\n\nData Link\n\n\nPhysical\n\n\n               Host            Switch  Router  Host\n\n\n                                                     31\n---\n   Ler Encapsubtkon\n   Layer Encapsulation\n\n\nUser A                                     User B\n\n\n                        Get index.html\n\n\n                         Connection ID\n\n\n                       Source/Destination\n\n\n                         Link Address\n\n\n                                                   32\n---\nRemnants of Layering\nRemnants of Layering\n\n\n \uf097 Redundancy\n    \u25e6 Layer N may duplicate lower level\n     functionality (e.g., error recovery)\n    \u25e6 Layers may need same info (timestamp, MTU)\n \uf097 Consequences\n    \u25e6 For assurance and guarantee\n    \u25e6 May hurt performance\n\n\n                                                  33\n---\nAl About Generalbatkbon\n All About Generalization\n\n\n  \uf097 Many Years of the Same Thing\n     \u25e6 What's Left?\n     \u25e6 Any room for improvement?\n     \u25e6 We won't be able to replace it!\n  \uf097 Are There Any Problems????\n     \u25e6 Latency\n     \u25e6 Bandwidth\n     \u25e6 Performance\n  \uf097 25-30 Years Ago\n     \u25e6 Supercomputing world\n     \u25e6 Huge emphasis on networking\n  \uf097 Since Then\n\n\n                                        6/13/2024 Internetworking and Dist. Systems34\n---\nInternet\n\n\n\uf097 Understand Internet\n   \u25e6 Learn the computer network\n   \u25e6 Understand and manage routing tables\n   \u25e6 Low level network packet processing\n\uf097 Building a Network Protocol\n   \u25e6 Application-Level Protocol\n   \u25e6 Handle basic control level protocol\n   \u25e6 Resolve communication problems on Internet\n   \u25e6 Modification to kernel level modules\n\n\n                              6/13/2024          35\n---\n        Laboratory\n         Laboratory 1\n\n\n                       VirtualBox on your PC\n\n\n     Linux                    Linux + IP                            Linux\n                                Router\noccococoo                   occococoo                           occococoo\ncocc   0oo                  cocc   0oo                          cocc    0oo\n                                         6/13/2024 Internetworking and Dist. Systems 36\n---\nVrunliatkon\n Virtualization\n\n\n \uf097 Virtual Machines\n     \u25e6 Hypervisor Type 1 - a layer above HW\n     \u25e6 Hypervisor Type 2 - a layer above OS\n \uf097 Containers\n     \u25e6 Docker Engine\n     \u25e6 Orchestrated with Kubernetes\n\n\n                                       6/13/2024 Internetworking and Dist. Systems37\n---\n   Virtualization\n                                                               App 1           App 2\n  App 1            App2                                      BinslLibs       BinslLibs\n Bins/Libs      BinslLibs                                        Docker Engine\n                             App             App 2\nGuest OS        Guest OS   BinsiLibs       BinsiLibs               Guest Linux\n       Hypervisor              Docker Engine                       Hypervisor\n        Host OS                  Host Linux                          Host OS\nVirtual Machines             Docker (Linux)                Docker (Non-Linux)\n                                        6/13/2024 Internetworking and Dist. Systems     38\n---\n Docker\n Docker\nClient                            Docker Host                       Registry\n         docker build                     Docker daemon                              NGiX\n          docker pull               Containers      Images\n          docker run\n  Docker DaemonLives on the Host\n   Responds to Docker commands\n   Instantiates Images and creates\n   containers\n  \uf097 Developed by Docker Inc.\n  \uf097 Containers - OS level Virtualization\n\n\n                                                 6/13/2024 Internetworking and Dist. Systems  39\n---\nKubemnetes\n KubernetesKUBERNETES MASTER\n                                 etcd     API Server   Scheduler\n                                        Controller Manager\n    KUBERNETES NODE                  KUBERNETES NODE                  KUBERNETES NODE\n     Docker        Kubelet            Docker        Kubelet            Docker         Kubelet\n       Kubernetes Proxy                 Kubernetes Proxy                  Kubernetes Proxy\n         Linux Machine                    Linux Machine                    Linux Machine\n \uf097 From Google\n \uf097 Uses Containerization Technology\n \uf097 Allows to run containers across several nodes\n \uf097 Deployment, scaling, and management of containerized applications\n\n\n                                                6/13/2024 Internetworking and Dist. Systems    40\n---\nHypervtsors\n  Hypervisors", "start_char_idx": 12628, "end_char_idx": 17234, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39d8a405-8519-4684-b382-f8bfec70959c": {"__data__": {"id_": "39d8a405-8519-4684-b382-f8bfec70959c", "embedding": null, "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a2b03b32-0e7c-4bcf-89ae-97566828528e", "node_type": "4", "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "hash": "f9d6b7936736eb6d2a87a184805fcd345b713054c265becd5cc67ff4a0f71de8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "577647e0-d761-4bea-a593-6e32fb6003db", "node_type": "1", "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}, "hash": "633446ea50e2ef33e7f8f35e165ec0efaf5cb86edbc3697a3698c46b2db99b20", "class_name": "RelatedNodeInfo"}}, "text": "6/13/2024 Internetworking and Dist. Systems  39\n---\nKubemnetes\n KubernetesKUBERNETES MASTER\n                                 etcd     API Server   Scheduler\n                                        Controller Manager\n    KUBERNETES NODE                  KUBERNETES NODE                  KUBERNETES NODE\n     Docker        Kubelet            Docker        Kubelet            Docker         Kubelet\n       Kubernetes Proxy                 Kubernetes Proxy                  Kubernetes Proxy\n         Linux Machine                    Linux Machine                    Linux Machine\n \uf097 From Google\n \uf097 Uses Containerization Technology\n \uf097 Allows to run containers across several nodes\n \uf097 Deployment, scaling, and management of containerized applications\n\n\n                                                6/13/2024 Internetworking and Dist. Systems    40\n---\nHypervtsors\n  Hypervisors\n\n\n   \uf097    Type I - Single layer above bare metal\n         \u25e6 XEN\n             \uf096 Pass-through access to CPU/Memory/NICs\n             \uf096 Open source virtualization started 2004\n             \uf096 Acquired by Citrix in 2007\n   \uf097    Type II - One layer above OS\n         \u25e6 VMWare ESXi\n             \uf096 VMware Cloud solution\n             \uf096 Runs on top of vSphere\n         \u25e6 Hyper-V\n             \uf096 Microsoft Cloud solution\n             \uf096 The best solution for Windows OS\n         \u25e6 Kernel-based Virtual Machine KVM\n             \uf096 Introduced in 2007\n             \uf096 More like VirtualBox\n             \uf096 Acquired and taken over by RedHat 2008\n             \uf096 Due to RedHat, better for Linux OS VMs\n             \uf096 Most widely deployed open source environment\n\n\n                                                             6/13/2024  Internetworking and Dist. Systems  41\n---\n    Laboratory 2\n     Laboratory 2\n\n\n                    AWS VM\n\n\nLinux              Linux + IP                                 Linux\n                     Router\n\n\n                               6/13/2024 Internetworking and Dist. Systems  42\n---\nTho Fuuro of Cbud (my Lke)\nThe Future of Cloud (my take)\n\n\n \uf097 Taking Back Performance\n     \u25e6 Low Latency\n     \u25e6 High Bandwidth\n     \u25e6 Networking and Processor\n \uf097 Need Engineers to Build\n     \u25e6 Application Specific\n     \u25e6 Hardware Component Specific\n     \u25e6 Custom Configuration Specific\n     \u25e6 Hardware Accelerated\n     \u25e6 Minimal Overhead HW/SW\n     \u25e6 Low-level Software (e.g. embedded software and kernel level)\n\n\n                                             6/13/2024 Internetworking and Dist. Systems  43\n---\nLaboratory Asstenments\n Laboratory Assignments\n\n\n  \uf097 Submit Archive of Laboratory Results\n     \u25e6 Summary PowerPoint Slides\n     \u25e6 Source Code and README instructions for code\n     \u25e6 Usually Saturday 11:59 PM\n  \uf097 YouTube demonstration video\n     \u25e6 Usually, the following Monday 11:59 PM\n  \uf097 Scoring\n     \u25e6 On-time Submissions (no exceptions)\n     \u25e6 Multiplied by 1.0 if on-time\n     \u25e6 Multiplied by 0.5 if late\n     \u25e6 Demonstration Videos on YouTube\n     \u25e6 Internet Accessible Link to the Archive (ZIP) of all\n\n\n                                      6/13/2024              44", "start_char_idx": 16360, "end_char_idx": 19422, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87434f36-d829-4198-98dd-04d22461c564": {"__data__": {"id_": "87434f36-d829-4198-98dd-04d22461c564", "embedding": null, "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "efa9bef2-ee71-472c-ac87-b4f01b33f6d9", "node_type": "4", "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "hash": "96c74917e7c35784ea57b0777ece2e058fee5a2a54f0ebc1849e7f5d6d927946", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fb850e5-791c-4314-b796-c4aa0905a748", "node_type": "1", "metadata": {}, "hash": "4e1956315bf8c3e2e131b8ec2f1e63c2192c13aba08b95116131641cdd051e87", "class_name": "RelatedNodeInfo"}}, "text": "0   EE 542\n    EE 542\n   Lecture 3: Internec Protocols\n    Lecture 3: Internet Protocols\n    Internet and Cloud Computing\n\n\n    Young Cho\n    Department of Electrical Engineering\n    University of Southern California\n\n\n                                          1\n---\nAnnounemends\n Announcements\n \uf097 Office Hours\n    \u25e6 At the end of the Lecture outside\n \uf097 Lab/Project Team\n    \u25e6 3 Student Team\n \uf097 Tools\n    \u25e6 Sign up for AWS Account\n    \u25e6 Purchase xDot(s)\n      \uf096 https://www.arrow.com/en/products/mtxdot-na1-\n        a01-100/multi-tech-systems\n      \uf096 JTAG programmer\n---\nBrindaInternet transport is moving from TCP to UDPIRaglhunatha Bharadwaj                                                                                                                                                                                                  Fri,               Aug10, 10.33 AM (10 days ago)\nto YoungInbox\nMy name is Brinda and\n                     Hello Professor;Lohith Bellad\n                                                  Reason fr to Emphasb\n                         Reason for the Emphasis\n                                                Young, younghc                                                                     had taken the CS558L class with you last fallSun, Jul 22, 9.15 AMhave been interning at Sony\n PlayStation with the PlayStation Now team for the summer(referred by You) and will also be continuing\n                                                                                                      Good Morning Professor;\nduring the fall:This is Lohith Bellad.wanted t0 tell youworked under yourguidance at USC Information Sciences Institute and also hadlittle about the work                                                                                                                                                   have been doing this summer:                                                          can also send\n detailed report on the same by next weektaken CSCI558L course in the Fall 2014. Networking is the field which always fascinated me from\n        have been interning with the Core Engineering team at PlayStation Now which is responsible for\n                childhood\nmaintaining the backbone inirastructure for the streaming service ie they have their own reliable\n                After graduating from USC                                                                                             started my career in Juniper Networks as a kernel developer in Data Center\n communication protocol which runs on top of UDP along with their own\n               Switching BU. There it was great 2.5 years working on FreeBSD and JUNOS kernel, mostly on L2 layerCongestion Control Algorithm which\n helps with efiicient data delivery:and Core OS networking drivers. During my free time                                                                                                                                                             try to contribute for FreeBSD project (active project\n        have been working on improving their\n                                            under BSD OSes, mainly because of Netflix).congestion control protocol and wrote\n                                                                                                                                                                                                                   work on MPTCP and also TCPIIP stack in general forVersion 2 of it which\n addresses specific important changes as to howFreeBSD:                                                                                                                                                                                                               reacts when the Client side network bandwidth changes\nalong with better response t0 lossidelay conditions on the network as well as increased the speed of\n                     was more interested in Internet Transport protocols,so recently switched jobs from Juniper to Cloudflare\nrecovery when it falls Iow making sure it doesn't cause any corruption during the fast increase\n                (CDN company at its core) after figuring out Internet transport work is mostly done at CDN companies.                                                                                                                                                                                                                                                                                            Additionally\nthey employ a FEC methodology to check for available bandwidth on the network which\n                                                                                   Currently working on user-land transport protocol based on UDP for accelerating mobile app trafiic                                                                                                                                                                                                           had to modify\nbit for the Congestion Control Algorithm:Alsoam closely following Google and IETF drafting on QUIC (Quick UDP Internet Connections) Google\n                says 35% 0f its web traific is handled via Google QUIC . IETF is working hard t0 standardize it by late next\n This was justyear:                                                               brief summary but                                                                                      could send you the entire report by next week                                                                                                                                  also wanted t0 mention\nthat now that                                                                 have started working in the industry, its amazing to see the startling resemblance with the\n type of projects we had done a5 part of our academic coursework with real world applications\n                                                                                             AlI this reminds me of several projects done at USC as part of CSCISS8L. You had guided students on                                                                                                                                                                                                                     wolld\n never have imagined that the world's biggest companies are working with the kind of technology we had\n                                                                                                      implementing their own user land transport protocol based on UDP and it was so much fun then doing that\nplayed with in class andand now Internet is moving towards that approach: CSCI558L and work done under your guidance at USCam very grateful to You for providing us with such an enriching experience_\n                ISI plays asignificant role in my day to day work and also in contributing to open source communities                                                                                                                                                                                                                                                             am\n                very thankful to you for offering such a wonderful courseduringmy masters.", "start_char_idx": 0, "end_char_idx": 7316, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4fb850e5-791c-4314-b796-c4aa0905a748": {"__data__": {"id_": "4fb850e5-791c-4314-b796-c4aa0905a748", "embedding": null, "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "efa9bef2-ee71-472c-ac87-b4f01b33f6d9", "node_type": "4", "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "hash": "96c74917e7c35784ea57b0777ece2e058fee5a2a54f0ebc1849e7f5d6d927946", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "87434f36-d829-4198-98dd-04d22461c564", "node_type": "1", "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "hash": "dafa8293ebfd84c54c39aa1ddc55e6b283e8d5cb97d948f25f33103a7f835eeb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1e173911-e0cb-40ea-a34f-69cb9ec30da9", "node_type": "1", "metadata": {}, "hash": "a52a471547a9fee7414a22fc6c6763906b319b9a986085afc2facb7669682348", "class_name": "RelatedNodeInfo"}}, "text": "You had guided students on                                                                                                                                                                                                                     wolld\n never have imagined that the world's biggest companies are working with the kind of technology we had\n                                                                                                      implementing their own user land transport protocol based on UDP and it was so much fun then doing that\nplayed with in class andand now Internet is moving towards that approach: CSCI558L and work done under your guidance at USCam very grateful to You for providing us with such an enriching experience_\n                ISI plays asignificant role in my day to day work and also in contributing to open source communities                                                                                                                                                                                                                                                             am\n                very thankful to you for offering such a wonderful courseduringmy masters.\n Additionally;Looking to attend for some interesting seminars on Networking at USC Information Sciences Institute.would Iike to know if you could supervise my Fall internship CPT in the same company:\n Looking forward t0 YOur reply:\n               Sincerely;\n Thank You once again for everything :)Your student\n BrindaLohith Bellad                                                                                                                                                                                                                                                                                                      6/13/2024       Internet and Cloud Computing                                                         3\n---\nOpen System Interconnection Reference Model\n                                             O5I MODEL\n                            7                  ApplicationLuyelmnmunication:\n                                               cliertsery_transter\n                            6                  PresentationLuyelE8E8i2,corverslor\n                                                      binar\n                           5                  Staitfainsprdefssion;\n                                                                   SessionLuyel\n                            4                 Fesoresdelivery\n                                                             Transport Layer\n                                                                   ertire\n                                                     Message\n                            3                 Iletwork Layer\n                                               Routesnatatc sDasedto differert\n                                               LANs andnetyyorkaddress\n                            2         7Q      Data Link (MACI Layer\n                                               Transmits packetsfrom\n                                              nodetonodebased\n                                               sation address                   9\n                                               PhysicalLqyel\n                                               Flectrics signals     cabling\n                                                                                                    From computer desktop\n                                                                                                    encyclopedia \u00a9 2004\n\n\n                                                            6/13/2024     Internetworking and Dist. Systems                4\n---\nIntemet Protocol (Layer 3)\n Internet Protocol (Layer 3)\n\n\n  \uf097 Interconnect many networks\n  \uf097 Hide underlying technology\n      \u25e6 IP is the \u201ccompatibility layer\u201d\n  \uf097 Hourglass architecture               email WWW phone...  Applications\n      \u25e6 All hosts and routers run IP      SMTP HTTP RTP...TCP UDP\u2026\n      \u25e6 Stateless architecture                   IP\n\n\n  \uf097 Trade-off                               ethernet PPP\u2026\n      \u25e6 No assumptions                   CSMA async sonet...  Technology\n                                          copper fiber radio...\n      \u25e6 No guarantees\n---\nIF+4 Packet Strucuura\n IPv4 Packet Structure\n\n\n   Ver\n      Ver        IHL\n                    IHL     Differentiated Services\n                             Type of service                              Total length\n                                                                                      Total length\n             Identification (frag id)Identification        Flags (frag)Flags      Fragment offset\n                                                                                                 Fragment offset\n   Time to live\n               Time to live   (next) ProtocolProtocol                Header checksum\n                                                                                    Header checksum\n                                          Source address\n                                                        Source address\n                                       Destination address\n                                                          Destination address\n                                         Option + Padding\n                                                         Option + Padding\n\n\n                 Source Port\n                            Source Port                                Destination Port\n                                                                                       Destination Port\n                                        Sequence Number\n                                                       Sequence Number\n                                 Acknowledgement Number\n                                                       Acknowledgement Number\n Offset\n       Offset  Reserved\n                       Reserved    U A P R S F\n                                              U A P R S F                    Window\n                                                                                   Window\n                  Checksum\n                          Checksum                                      Urgent pointer\n                                                                                      Urgent pointer\n                                         Option + Padding\n                                                         Option + Padding\n\n\n                                                    Data\n\n\n                                                      6/13/2024 Internetworking and Dist. Systems                6\n---\nFlelds 0fto IP Hcadker\n Fields of the IP Header\n\n\n  \uf097 Time To Live (TTL) (1 byte):\n    \u25e6 Specifies longest paths before datagram is\n       dropped\n    \u25e6 Role of TTL field: Ensure that packet is eventually\n       dropped when a routing loop occurs\n    Used as follows:\n    \u25e6 Sender sets the value (e.g., 64)\n    \u25e6 Each router decrements the value by 1\n    \u25e6 When the value reaches 0, the datagram is\n       dropped", "start_char_idx": 6100, "end_char_idx": 13233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e173911-e0cb-40ea-a34f-69cb9ec30da9": {"__data__": {"id_": "1e173911-e0cb-40ea-a34f-69cb9ec30da9", "embedding": null, "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "efa9bef2-ee71-472c-ac87-b4f01b33f6d9", "node_type": "4", "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "hash": "96c74917e7c35784ea57b0777ece2e058fee5a2a54f0ebc1849e7f5d6d927946", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4fb850e5-791c-4314-b796-c4aa0905a748", "node_type": "1", "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "hash": "ce5a94126d703fc77dbdbd3ea84fb3f204511c4c03507a8801186ce692dd9e7a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48b50317-2a1f-43dd-b397-193ad1bf4088", "node_type": "1", "metadata": {}, "hash": "c02f9e1bfc0ff3d985a54567503c5b764b8a0a4d72b5db3b8bb34905a58a5a9c", "class_name": "RelatedNodeInfo"}}, "text": "Data\n\n\n                                                      6/13/2024 Internetworking and Dist. Systems                6\n---\nFlelds 0fto IP Hcadker\n Fields of the IP Header\n\n\n  \uf097 Time To Live (TTL) (1 byte):\n    \u25e6 Specifies longest paths before datagram is\n       dropped\n    \u25e6 Role of TTL field: Ensure that packet is eventually\n       dropped when a routing loop occurs\n    Used as follows:\n    \u25e6 Sender sets the value (e.g., 64)\n    \u25e6 Each router decrements the value by 1\n    \u25e6 When the value reaches 0, the datagram is\n       dropped\n\n\n                                       7\n---\nFragmentadon\n Fragmentation\n  \uf097 IP packets can be 64KB\u25e6 Different link-layers have different MTUs\n    \u25e6 Split IP packet into multiple fragments\n       \uf096 IP header on each fragment\n       \uf096 Various fields in header to help process\n       \uf096 Intermediate router may fragment as needed\n  \uf097 Where to do reassembly?\n    \u25e6 End nodes \u2013 avoids unnecessary work\n    \u25e6 Dangerous to do at intermediate nodes\n       \uf096 Buffer space\n       \uf096 Multiple paths through network\n\n\n                                                                 8\n---\nFragmentaton Dbadanta8es\nFragmentation Disadvantages\n\n\n \uf097 Uses resources poorly\n   \u25e6 Forwarding costs per packet\n   \u25e6 Best if we can send large chunks of data\n   \u25e6 Worst case: packet just bigger than MTU\n \uf097 Poor end-to-end performance\n   \u25e6 Loss of a fragment\n \uf097 Reassembly is hard\n   \u25e6 Buffering constraints\n\n\n                                               9\n---\nIP Address Froblem (I991)\nIP Address Problem (1991)\n\n\n \uf097 Address space depletion\n   \u25e6 In danger of running out of classes A and B\n \uf097 Why?\n   \u25e6 Class C too small for most domains\n   \u25e6 Very few class A \u2013 IANA (Internet Assigned\n     Numbers Authority) very careful about giving\n   \u25e6 Class B \u2013 greatest problem\n      \uf096 Sparsely populated \u2013 but people refuse to give it\n       back\n\n\n                                                           10\n---\nMdaadon Efforts\n Mitigation Efforts\n\n\n  \uf097 Classless Inter-Domain Routing (CIDR)\n  \uf097 Network address translation (NAT)\n  \uf097 Use of private network addressing\n  \uf097 Name-based virtual hosting of web sites\n  \uf097 Tighter control by regional Internet registries on\n     the allocation of addresses to local Internet\n     registries\n  \uf097 Network renumbering and subnetting to reclaim\n     large blocks of address space allocated in the\n     early days of the Internet, when the Internet used\n     inefficient classful network addressing\n---\nChsskess InuarDomain Routing\n                            Classless InterDomaln Roudng-\n\n\n \uf097 Do not use classes to determine network ID\n \uf097 Assign any range of addresses to network\n   \u25e6 Use common part of address as network number\n   \u25e6 e.g., addresses 192.4.16 - 196.4.31 have the first\n     20 bits in common. Thus, we use this as the\n     network number\n   \u25e6 netmask is /20, /xx is valid for almost any xx\n \uf097 Enables more efficient usage of address\n   space (and router tables)\n\n\n                                                           12\n---\nNAT\nNAT\n\n\n \uf097 Network Address Translation (NAT)\n \uf097 Alternate solution to address space\n   \u25e6 Kludge (but useful)\n \uf097 Sits between your network and the\n   Internet\n \uf097 Translates local network layer addresses\n   to global IP addresses\n \uf097 Has a pool of global IP addresses (less\n   than number of hosts on your network)\n\n\n                                             13\n---\nNAT Illustratkn\n NAT Illustration\n\n\n                          Pool of global IP addresses\n          Destination                                     Source\n\n\n                                     G P\n            Global                                        Private\n           Internet                                     Network\n\n\n         Dg Sg Data                 NAT                 Dg Sp Data\n\n\n   \u2022Operation: Source (S) wants to talk to Destination (D):\n      \u2022 Create S-Sp mappingg\n      \u2022 Replace Sp with Sg for outgoing packets\n      \u2022 Replace Sg with Sp for incoming packets\n   \u2022D & S can be just IP addresses or IP addresses + port #\u2019s\n\n\n                                                                    14\n---\nIP16IPv6\n\n\n \uf097 Larger Address Space\n \uf097 Aggregation-based address hierarchy\n       \u2013 Efficient backbone routing\n \uf097 Efficient and Extensible IP datagram\n \uf097 Stateless Address Autoconfiguration\n \uf097 Security (IPsec mandatory)\n \uf097 Mobility\n---\nHeader comparison\n Header comparison\n\n\n            0                   15 16                       31", "start_char_idx": 12694, "end_char_idx": 17123, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48b50317-2a1f-43dd-b397-193ad1bf4088": {"__data__": {"id_": "48b50317-2a1f-43dd-b397-193ad1bf4088", "embedding": null, "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "efa9bef2-ee71-472c-ac87-b4f01b33f6d9", "node_type": "4", "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "hash": "96c74917e7c35784ea57b0777ece2e058fee5a2a54f0ebc1849e7f5d6d927946", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e173911-e0cb-40ea-a34f-69cb9ec30da9", "node_type": "1", "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "hash": "273ded29141a067124f7880fe92322d2f5af2288a9252ef83819f43ead6b8eb8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f5078d5-4ac7-4d0a-8870-f2834f547f41", "node_type": "1", "metadata": {}, "hash": "9087787e17759e0382ef1977e1bab9821557147a49ad6f1c6b8343a2f007e6a6", "class_name": "RelatedNodeInfo"}}, "text": "13\n---\nNAT Illustratkn\n NAT Illustration\n\n\n                          Pool of global IP addresses\n          Destination                                     Source\n\n\n                                     G P\n            Global                                        Private\n           Internet                                     Network\n\n\n         Dg Sg Data                 NAT                 Dg Sp Data\n\n\n   \u2022Operation: Source (S) wants to talk to Destination (D):\n      \u2022 Create S-Sp mappingg\n      \u2022 Replace Sp with Sg for outgoing packets\n      \u2022 Replace Sg with Sp for incoming packets\n   \u2022D & S can be just IP addresses or IP addresses + port #\u2019s\n\n\n                                                                    14\n---\nIP16IPv6\n\n\n \uf097 Larger Address Space\n \uf097 Aggregation-based address hierarchy\n       \u2013 Efficient backbone routing\n \uf097 Efficient and Extensible IP datagram\n \uf097 Stateless Address Autoconfiguration\n \uf097 Security (IPsec mandatory)\n \uf097 Mobility\n---\nHeader comparison\n Header comparison\n\n\n            0                   15 16                       31\n\n\n             vers hlen      TOS             total length        Removed (6)\n                 identification      flags     flag-offset         \u2022 ID, flags, flag offset\n    20          TTL        protocol     header checksum            \u2022 TOS, hlen\n    bytes                     source address                       \u2022 header checksum\n                            destination address\n                           options and padding                  Changed (3)\u2022 total length => payload\n                              IPv4                                 \u2022 protocol => next header\n                                                                   \u2022 TTL => hop limit\n\n\n              vers    traffic class       flow-label            Added (2)\n                 payload length     next header   hop limit\n                                                                   \u2022 traffic class\n    40                       source address                        \u2022 flow label\n    bytes\n                           destination address                  Expanded\n                                                                   \u2022 address 32 to 128 bits\n                              IPv6\n---\n        Addrass Alkcatkn\n        Address Allocation\n\n\n               /23      /32       /48         /64\n\n\n   2001        0410                                           Interface ID\n\n\nRegistry\nISP prefix\nSite prefix\nSubnet prefix\n    \uf097 The allocation process was recently updated by the registries:\n         \u25e6 International Assigned Numbers Authority (IANA) allocates from 2001::/16\n            to regional registries\n         \u25e6 Each regional registry allocation is a ::/23\n         \u25e6 ISP allocations from the regional registry is a ::/36 (immediate allocation) or\n            ::/32 (initial allocation) or shorter with justification\n         \u25e6 Policy expectation that an ISP allocates a ::/48 prefix to each customer\n---\nOpen System Interconnection Reference Model\n\n\n                                                                             From computer desktop\n                                                                             encyclopedia \u00a9 2004\n\n\n                                             6/13/2024 Internetworking and Dist. Systems           18\n---\nTCP and UDP (Layer\n TCP and UDP (Layer 4)\n\n\n  \uf097 Network layer\n      \u25e6 Logical communication\n         between hosts\n      \u25e6 IP Addresses\n  \uf097 Transport layer              email WWW phone... Applications\n                                 SMTP HTTP RTP...\n      \u25e6 Logical communication       TCP UDP\u2026\n         between processes              IP\n      \u25e6 Relies on, enhances,       ethernet PPP\u2026\n         network layer services  CSMA async sonet... Technology\n                                  copper fiber radio...\n      \u25e6 Port numbers\n---\nAnakgyPostal Serwko\n Analogy: Postal Service\n\n\n  \uf097 Hosts = Houses\n  \uf097 Processes = Persons in the House\n  \uf097 Data = Letters\n  \uf097 Transport Layer Protocol = Distribution by Uncles\n  \uf097 Network Layer Protocol = Postal Service\n          East Coast                             West Coast\n                                  Postal-service\n           Uncle Sam               mail carrier        Uncle Bill\n                                              Transport Layer      20\n---\n     Interet tansportlayer protocols\n                                    Internet transportbyer protocob-\n\n\n                                                                              application\n\uf097 Reliable, in-order delivery (TCP)                                           transport\n                                                                              network\n     \u25e6 congestion control                                                     data link\n                                                                              physical\n     \u25e6 flow control\n     \u25e6 connection setup                                                            network\n                                                                network            data link\n                                                                data link          physical\n                                                                physical\n\n\n\uf097 Unreliable, unordered delivery: UDP                                       network\n                                                                            data link\n     \u25e6 no-frills extension of \u201cbest-effort\u201d IP                              physical  network\n                                                                                      data link\n                                                                                      physical\n\uf097 Services not available:                                                     network\n                                                                              data link             application\n                                                                              physical   network    transport\n     \u25e6 delay guarantees                                                                  data link  network\n                                                                                         physical   data link\n\n\n     \u25e6 bandwidth guarantees                                                                         physical\n                                                                    Transport Layer                        21\n---\nUDP: Uter Datsam Frotocol@FC 768]\nUDP: User Datagram Protocol [RFC 768]", "start_char_idx": 16057, "end_char_idx": 22567, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f5078d5-4ac7-4d0a-8870-f2834f547f41": {"__data__": {"id_": "7f5078d5-4ac7-4d0a-8870-f2834f547f41", "embedding": null, "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "efa9bef2-ee71-472c-ac87-b4f01b33f6d9", "node_type": "4", "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "hash": "96c74917e7c35784ea57b0777ece2e058fee5a2a54f0ebc1849e7f5d6d927946", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48b50317-2a1f-43dd-b397-193ad1bf4088", "node_type": "1", "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}, "hash": "7aa85a0f9e9eaab847c7cc025479f06e110432bcb0c9c51ad4e1da0b1fbc8e08", "class_name": "RelatedNodeInfo"}}, "text": "application\n\uf097 Reliable, in-order delivery (TCP)                                           transport\n                                                                              network\n     \u25e6 congestion control                                                     data link\n                                                                              physical\n     \u25e6 flow control\n     \u25e6 connection setup                                                            network\n                                                                network            data link\n                                                                data link          physical\n                                                                physical\n\n\n\uf097 Unreliable, unordered delivery: UDP                                       network\n                                                                            data link\n     \u25e6 no-frills extension of \u201cbest-effort\u201d IP                              physical  network\n                                                                                      data link\n                                                                                      physical\n\uf097 Services not available:                                                     network\n                                                                              data link             application\n                                                                              physical   network    transport\n     \u25e6 delay guarantees                                                                  data link  network\n                                                                                         physical   data link\n\n\n     \u25e6 bandwidth guarantees                                                                         physical\n                                                                    Transport Layer                        21\n---\nUDP: Uter Datsam Frotocol@FC 768]\nUDP: User Datagram Protocol [RFC 768]\n\n\n \uf097 \u201cno frills,\u201d \u201cbare bones\u201d           Why is there a UDP?\n     Internet transport protocol       \uf097 no connection establishment\n \uf097 \u201cbest effort\u201d service, UDP             (which can add delay)\n     segments may be:                  \uf097 simple: no connection state at\n     \u25e6 lost                               sender, receiver\n     \u25e6 delivered out of order to       \uf097 small segment header\n        app                            \uf097 no congestion control: UDP\n \uf097 connectionless:                        can blast away as fast as\n     \u25e6 no handshaking between             desired\n        UDP sender, receiver\n     \u25e6 each UDP segment\n        handled independently of\n        others\n\n\n                                           Transport Layer               22\n---\nTCP: Oberwew\n TCP: Overview                                          RFCs: 793, 1122, 1323, 2018, 2581\n\n\n  \uf097 full duplex data:                                    \uf097 point-to-point:\n       \u25e6 bi-directional data flow in same                     \u25e6 one sender, one receiver\n           connection                                    \uf097 reliable, in-order byte steam:\n       \u25e6 MSS: maximum segment size                            \u25e6 no \u201cmessage boundaries\u201d\n  \uf097 connection-oriented:                                 \uf097 pipelined:\n       \u25e6 handshaking (exchange of control                     \u25e6 TCP congestion and flow control\n           msgs) init\u2019s sender, receiver state                    set window size\n           before data exchange\n  \uf097 flow controlled:                                     \uf097 send & receive buffers\n       \u25e6 sender will not overwhelm\n           receiver\n\n\n                              application                          application\n                  socket      writes data                          reads data     socket\n                   door                                                            door\n                                TCP                                  TCP\n                             send buffer                          receive buffer\n                                                segment\n\n\n                                                               Transport Layer                   23\n---\nTCP seq #3 adACKs\n TCP seq. #\u2019s and ACKs\n\n\n                                                Host A             Host B\n  Seq. #\u2019s:\n\n\n      \u25e6 byte stream \u201cnumber\u201d of          User\n                                         types\n         first byte in segment\u2019s data    \u2018C\u2019\n  ACKs:                                                                  host ACKs\n                                                                         receipt of\n      \u25e6 seq # of next byte                                               \u2018C\u2019, echoes\n                                                                         back \u2018C\u2019\n         expected from other side\n      \u25e6 cumulative ACK\n                                       host ACKs\n                                       receipt\n                                       of echoed\n                                       \u2018C\u2019\n\n\n                                                                                 time\n                                                      simple telnet scenario\n\n\n                                               Transport Layer                      24\n---\n         Rroskem:TCP congeston conual\n         Problem: TCP congestion control\n\n\n\uf072 Approach: increase transmission rate (congestion window size),congestionwindow sizeprobing for usable bandwidth, until loss occurs\n      \uf06d additive increase: increase CongWin by 1 MSS every RTT\n         until loss detected\n      \uf06d multiplicative decrease: cut CongWin in half after loss\n\n\n               congestion\n                window\n\n\n           24 Kbytes\n\n\n           16 Kbytes\n\n\n            8 Kbytes\n\n\n Saw tooth\n behavior: probing                                                       time\n for bandwidth\n\n\n                                                       Transport Layer                     25\n---\nLab 2\nLab 2\n\n\n\uf097 In essence, Lab 1 on AWS\n\uf097 Report due on coming Saturday 11:59PM\n\uf097 Demo Video on Youtube on the following\n   Monday 11:59PM\n\uf097 The Goal of these submission is to prove\n   to me that you did the lab assignment\n\uf097 So, use screen video captures and your\n   explanations to convince me that you did\n   the work", "start_char_idx": 20558, "end_char_idx": 26884, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7a21616-e0bd-40b4-9bea-4fe4f584b618": {"__data__": {"id_": "c7a21616-e0bd-40b4-9bea-4fe4f584b618", "embedding": null, "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9", "node_type": "4", "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "hash": "ad7ffb52e045eb784a8d8b7e54c7c74a01ca93a8928a4e55b6646f1d0dfc8360", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aff05086-c930-4325-930f-80d4972d9c04", "node_type": "1", "metadata": {}, "hash": "c483b8b194a935db8b12b38ec9bb8d6d500e0ae7e75d4c4dcd4948b5660d5a5f", "class_name": "RelatedNodeInfo"}}, "text": "0  EE 542\n   EE 542\n   Lecuure 4: More Necworkng\n   Lecture 4: More Networking\n    Internet and Cloud Computing\n\n\n    Young Cho\n    Department of Electrical Engineering\n    University of Southern California\n\n\n                                          1\n---\nLaboratorles\n Laboratories\n\n\n  \uf097 Lab 1:Virtual Machines and Network\n  \uf097 Lab 2: AWS Cloud Hands-on Lab\n  \uf097 Lab 3: Network Measurements\n  \uf097 Lab 4: Fast Reliable File Transfer (L7)\n  \uf097 Lab 5: Fast Reliable File Transfer (Kernel)\n  \uf097 Lab 6: Phone-based IoT and Cloud\n  \uf097 Lab 7: Industrial IoT \u2013 xDot\n  \uf097 Lab 8: IIoT to Cloud\n  \uf097 Lab 9: Hadoop\n  \uf097 Lab 10: Message Passing Protocol\n  \uf097 Lab 11: Sparking Programming\n  \uf097 Lab 12: Machine Learning/Deep Learning\n\n\n                                          6/13/2024 Internet and Cloud Computing  2\n---\n                     Upper Layers Netorking\n                        Upper Layers Networking\n\n\n\uf097  Transport Layer\n    \u25e6   The delivery of data to the application\n    \u25e6   Reliable delivery\n    \u25e6   Error detection\n    \u25e6   Flow control\n    \u25e6   Congestion avoidance\n    \u25e6   TCP - Transmission Control Protocol\n    \u25e6   UDP - User Datagram Protocol\n\uf097  Session Layer\n    \u25e6   Opening, closing and managing a session\n    \u25e6   NetBIOS - Network Basic Input Output\n        System\n    \u25e6   PPTP - Point-to-Point Tunneling Protocol\n    \u25e6   RPC - Remote Procedure Call Protocol\n    \u25e6   SCP - Secured Copy Protocol\n    \u25e6   Often pushed back to application\n\n\n\n\uf097  Presentation Layer\n   \u25e6    The delivery and formatting of information\n   \u25e6    Extended Binary Coded Decimal Interchange\n        Code text file to an ASCII conversion\n   \u25e6    Encryption\n   \u25e6    Compression\n   \u25e6    Often pushed back to application\n\uf097  Application Layer\n   \u25e6    Custom applications\n   \u25e6    FTP - File Tranfer Protocol\n   \u25e6    HTTP - HyperText Transfer Protocol\n   \u25e6    SMTP - Simple Mail Transfer Protocol\n   \u25e6    POP3 - Post Office Protocol version 3\n   \u25e6    TELNET - Terminal Emulation Protocol of\n        TCP/IP\n   \u25e6    SSH - Secure Shell\n   \u25e6    Your own protocols\n\n\n\n\n                                                    CS 640  3\n---\nTransport Vo Network byer\n Transport vs. Network layer\n\n\n  \uf097 Network layer: logical communication between hosts\n  \uf097 Transport layer: logical communication between processes\n      \u25e6 relies on, enhances, network layer services\n\n\n  Postal service analogy:\n  kids sending letters to other kids\n  \uf097 processes = kids\n  \uf097 app messages = letters in envelopes\n  \uf097 hosts = houses\n  \uf097 transport protocol = two specific kids\n  \uf097 network-layer protocol = postal service\n\n\n                                                    Transport Layer  4\n---\n    Internet tansportlayer protocols\n                                    Internet transportbyer protocob-\n\n\n\uf097 Reliable, in-order delivery (TCP)                                         application\n                                                                            transport\n                                                                            network\n     \u25e6 congestion control                                                   data link\n                                                                            physical\n     \u25e6 flow control\n     \u25e6 connection setup                                                           network\n                                                              network             data link\n                                                              data link           physical\n                                                              physical\n\uf097 Unreliable, unordered delivery: UDP                                     network\n                                                                          data link\n     \u25e6 no-frills extension of \u201cbest-effort\u201d IP                            physical  network\n                                                                                    data link\n                                                                                    physical\n\uf097 Services not available:                                                   network\n                                                                            data link             application\n                                                                            physical   network    transport\n     \u25e6 delay guarantees                                                                data link  network\n                                                                                       physical   data link\n\n\n     \u25e6 bandwidth guarantees                                                                       physical\n                                                                  Transport Layer                         5\n---\n Demultiplexing at rcv host:Demultiplexing\n                                          Muldplxdnd\n  Multiplexing/DemuldplexdngMultiplexing at send host:\ndelivering received segments                   gathering data from multiple\nto correct socket                              sockets, enveloping data with\n                                               header (later used for\n                                               demultiplexing)\n       = socket             = process\n\n\n  application   P3          applicationP1P1      P2            P4application\n  transport                 transport                                transport\n  network                   network                                   network\n  link                      link                                           link\n  physical                  physical                                  physical\n       host 1                        host 2                        host 3\n\n\n                                                 Transport Layer                 6\n---\nDemulepkexdng\n Demultiplexing", "start_char_idx": 0, "end_char_idx": 5774, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aff05086-c930-4325-930f-80d4972d9c04": {"__data__": {"id_": "aff05086-c930-4325-930f-80d4972d9c04", "embedding": null, "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9", "node_type": "4", "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "hash": "ad7ffb52e045eb784a8d8b7e54c7c74a01ca93a8928a4e55b6646f1d0dfc8360", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7a21616-e0bd-40b4-9bea-4fe4f584b618", "node_type": "1", "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "hash": "01fdfe075df45799e71e2489a9f20d0471a5a6bc74894e90572b27e8061cee36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09cf80aa-52ac-46c1-ae21-0b825986c086", "node_type": "1", "metadata": {}, "hash": "766641ff3224eeb7813a3bd487c157322cf92a37457f1e9b6aae4184be5b99f5", "class_name": "RelatedNodeInfo"}}, "text": "\u25e6 bandwidth guarantees                                                                       physical\n                                                                  Transport Layer                         5\n---\n Demultiplexing at rcv host:Demultiplexing\n                                          Muldplxdnd\n  Multiplexing/DemuldplexdngMultiplexing at send host:\ndelivering received segments                   gathering data from multiple\nto correct socket                              sockets, enveloping data with\n                                               header (later used for\n                                               demultiplexing)\n       = socket             = process\n\n\n  application   P3          applicationP1P1      P2            P4application\n  transport                 transport                                transport\n  network                   network                                   network\n  link                      link                                           link\n  physical                  physical                                  physical\n       host 1                        host 2                        host 3\n\n\n                                                 Transport Layer                 6\n---\nDemulepkexdng\n Demultiplexing\n\n\n  \uf097 Host receives IP datagrams                                          32 bits\n       \u25e6 source IP address, destination IP address\n       \u25e6 datagram carries 1 transport-layer segment         source port #      dest port #\n       \u25e6 source, destination port number\n       \u25e6 host uses IP addresses & port numbers to                 other header fields\n          direct segment to appropriate socket\n  \uf097 Connectionless demultiplexing\n       \u25e6 SP/DP forms 2-tuple Socket\n       \u25e6 SP provides return address                                  application data\n       \u25e6 Used with UDP                                             (message)\n  \uf097 Connection-oriented demultiplexing\n       \u25e6 SIP/DIP/SP/DP forms 4-tuple Socket\n       \u25e6 SIP/SP provides return address\n                                                              TCP/UDP segment format\n\n\n                                                     Transport Layer                        7\n---\nUDP: Uter Datsam Frotocol@FC 768]\nUDP: User Datagram Protocol [RFC 768]\n\n\n \uf097 \u201cno frills,\u201d \u201cbare bones\u201d           Why is there a UDP?\n    Internet transport protocol        \uf097 no connection establishment\n \uf097 \u201cbest effort\u201d service, UDP             (which can add delay)\n    segments may be:                   \uf097 simple: no connection state at\n     \u25e6 lost                               sender, receiver\n     \u25e6 delivered out of order to       \uf097 small segment header\n        app                            \uf097 no congestion control: UDP\n \uf097 connectionless:                        can blast away as fast as\n     \u25e6 no handshaking between             desired\n        UDP sender, receiver\n     \u25e6 each UDP segment\n        handled independently of\n        others\n\n\n                                           Transport Layer               8\n---\nUDP: more\n\n\n \uf097 often used for streaming                             32 bits\n    multimedia apps\n     \u25e6 loss tolerant          Length, in  source port #         dest port #\n     \u25e6 rate sensitive     bytes of UDP         length             checksum\n                               segment,\n \uf097 other UDP uses              including\n     \u25e6 DNS                        header\n     \u25e6 SNMP                                          Application\n \uf097 reliable transfer over UDP:                       data\n    add reliability at application                   (message)\n    layer\n     \u25e6 application-specific error\n        recovery!                               UDP segment format\n\n\n                                                Transport Layer              9\n---\nTCP: Oberwew\n TCP: Overview                                          RFCs: 793, 1122, 1323, 2018, 2581\n\n\n  \uf097 full duplex data:                                    \uf097 point-to-point:\n       \u25e6 bi-directional data flow in same                     \u25e6 one sender, one receiver\n           connection                                    \uf097 reliable, in-order byte steam:\n       \u25e6 MSS: maximum segment size                            \u25e6 no \u201cmessage boundaries\u201d\n  \uf097 connection-oriented:                                 \uf097 pipelined:\n       \u25e6 handshaking (exchange of control                     \u25e6 TCP congestion and flow control\n           msgs) init\u2019s sender, receiver state                    set window size\n           before data exchange\n  \uf097 flow controlled:                                     \uf097 send & receive buffers\n       \u25e6 sender will not overwhelm\n           receiver\n\n\n                              application                          application\n                  socket      writes data                          reads data     socket\n                   door                                                            door\n                                TCP                                  TCP\n                             send buffer                          receive buffer\n                                                segment\n\n\n                                                               Transport Layer                   10\n---\nTCP sauent suUuro\n TCP segment structure32 bits\n\n\n       URG: urgent data                                                           counting\n     (generally not used)        source port #              dest port #           by bytes\n                                        sequence number                           of data\n            ACK: ACK #                                                            (not segments!)\n                    valid          acknowledgement number\n\n\n                               head   not                  Receive window\n    PSH: push data now         len    used  UAPRSF\n     (generally not used)                                                             # bytes\n                                     checksum               Urg data pnter            rcvr willing\n                                                                                      to accept\n         RST, SYN, FIN:              Options (variable length)\n        connection estab\n        (setup, teardown\n             commands)", "start_char_idx": 4498, "end_char_idx": 10759, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09cf80aa-52ac-46c1-ae21-0b825986c086": {"__data__": {"id_": "09cf80aa-52ac-46c1-ae21-0b825986c086", "embedding": null, "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9", "node_type": "4", "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "hash": "ad7ffb52e045eb784a8d8b7e54c7c74a01ca93a8928a4e55b6646f1d0dfc8360", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aff05086-c930-4325-930f-80d4972d9c04", "node_type": "1", "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "hash": "7d7617c244ecd3137588678c95691b37b71240e53034754da61383813715051f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc96c4c9-c788-4951-a9d8-29f6cca16a7d", "node_type": "1", "metadata": {}, "hash": "217a77162484e0cb43efd01be9d6da09f14bfbc4ef8544d4b97b4f9e07079391", "class_name": "RelatedNodeInfo"}}, "text": "application                          application\n                  socket      writes data                          reads data     socket\n                   door                                                            door\n                                TCP                                  TCP\n                             send buffer                          receive buffer\n                                                segment\n\n\n                                                               Transport Layer                   10\n---\nTCP sauent suUuro\n TCP segment structure32 bits\n\n\n       URG: urgent data                                                           counting\n     (generally not used)        source port #              dest port #           by bytes\n                                        sequence number                           of data\n            ACK: ACK #                                                            (not segments!)\n                    valid          acknowledgement number\n\n\n                               head   not                  Receive window\n    PSH: push data now         len    used  UAPRSF\n     (generally not used)                                                             # bytes\n                                     checksum               Urg data pnter            rcvr willing\n                                                                                      to accept\n         RST, SYN, FIN:              Options (variable length)\n        connection estab\n        (setup, teardown\n             commands)\n\n\n                                             application\n                                             data\n                Internet                     (variable length)\n             checksum\n            (as in UDP)\n\n\n                                                                 Transport Layer                    11\n---\nTCP seq #3 adACKs\n TCP seq. #\u2019s and ACKs\n\n\n                                                Host A            Host B\n  Seq. #\u2019s:\n\n\n      \u25e6 byte stream \u201cnumber\u201d of          User\n                                         types\n         first byte in segment\u2019s data    \u2018C\u2019\n  ACKs:                                                                  host ACKs\n                                                                         receipt of\n      \u25e6 seq # of next byte                                               \u2018C\u2019, echoes\n                                                                         back \u2018C\u2019\n         expected from other side\n      \u25e6 cumulative ACK\n  Q: how receiver handles out-of-      host ACKs\n                                       receipt\n     order segments                    of echoed\n                                       \u2018C\u2019\n      \u25e6 A: TCP spec doesn\u2019t say, -\n         up to implementor\n\n\n                                                                                time\n                                                      simple telnet scenario\n\n\n                                               Transport Layer                     12\n---\n  TCP Roundd\"\n  TCP Round Trip TimeTrtTa\n\n\nEstimatedRTT = (1- \uf061)*EstimatedRTT + \uf061*SampleRTT\n\uf072 Exponential weighted moving average\n\uf072 influence of past sample decreases exponentially fast\n\n\n\uf072 typical value: \uf061 = 0.125RTT: gaia.cs.umass.edu to fantasia.eurecom.fr\n        350\n\n\n        300\n\n\n        250\n\n\n\n\n\n       RTT (milliseconds)200\n        150\n\n\n        100\n           1    8   15   22   29   36   43   50   57  64   71   78   85   92  99  106\n                                             time (seconnds)\n\n\n                                         SampleRTT Estimated RTT\n\n\n                                                          Transport Layer              13\n---\nTCP relbabla data transfer\nTCP reliable data transfer\n\n\n \uf097 On top of IP\u2019s unreliable Service\n \uf097 Pipelined segments\n \uf097 Cumulative Acks\n \uf097 Key to Reliable Delivery: Retransmission\n    \u25e6 TCP uses single retransmission timer\n    \u25e6 timeout events\n    \u25e6 duplicate acks\n\n\n                                          Transport Layer  14\n---\n             TCP: retransmission scenarios\n\n\n                      Host A            Host B                  Host A            Host B\n\n\ntimeout\n\n\n                              X\n                             loss\n\n\n                                                Sendbase\n                                                = 100\n                                                 SendBase\n                                                 = 120\n\n\n         SendBase\n         = 100                                   SendBase\n                                                 = 120                  premature timeoutSeq=92 timeoutSeq=92 timeout\n                  time                                      time\n                         lost ACK scenario\n                                                           Transport Layer                         15\n---\nTCP retransmission scenarios\n\n\n                             Host A             Host B\n\n\n                                     X\n                                   losstimeout\n\n\n           SendBase\n           = 120\n\n\n                         time\n                              Cumulative ACK scenario\n\n\n                                                   Transport Layer  16\n---\n         Fast Retransmtt\n         Fast Retransmit\n\n\n                          Host A      Host B\n\n\n                                  X\n\n\ntimeout\n\n\n                          time\n\n\n                                   Transport Layer  17\n---\nConsestkn\n Congestion\n\n\n \uf097 Sending too much data too fast\n    \u25e6 different from flow control\n \uf097 Lost packets\n    \u25e6 buffer overflow at routers\n \uf097 Long delays\n    \u25e6 queueing in router buffers\n\n\n                                   Transport Layer  18\n---\n   Causes/costs of congestion: scenario 1", "start_char_idx": 9188, "end_char_idx": 15007, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc96c4c9-c788-4951-a9d8-29f6cca16a7d": {"__data__": {"id_": "cc96c4c9-c788-4951-a9d8-29f6cca16a7d", "embedding": null, "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9", "node_type": "4", "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "hash": "ad7ffb52e045eb784a8d8b7e54c7c74a01ca93a8928a4e55b6646f1d0dfc8360", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09cf80aa-52ac-46c1-ae21-0b825986c086", "node_type": "1", "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "hash": "22bed08790530eb7ec1f9aad646b401b8e75a7435c23af870139a36001d3c889", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "890a9b29-b602-4c13-b7d0-f1df2b910edb", "node_type": "1", "metadata": {}, "hash": "522f2860e0a1854e7ba5e2ec2541ac7b20fdeeb73b1e80f906f214385383f691", "class_name": "RelatedNodeInfo"}}, "text": "Host A             Host B\n\n\n                                     X\n                                   losstimeout\n\n\n           SendBase\n           = 120\n\n\n                         time\n                              Cumulative ACK scenario\n\n\n                                                   Transport Layer  16\n---\n         Fast Retransmtt\n         Fast Retransmit\n\n\n                          Host A      Host B\n\n\n                                  X\n\n\ntimeout\n\n\n                          time\n\n\n                                   Transport Layer  17\n---\nConsestkn\n Congestion\n\n\n \uf097 Sending too much data too fast\n    \u25e6 different from flow control\n \uf097 Lost packets\n    \u25e6 buffer overflow at routers\n \uf097 Long delays\n    \u25e6 queueing in router buffers\n\n\n                                   Transport Layer  18\n---\n   Causes/costs of congestion: scenario 1\n\n\n                                                  Host                                   lout\n    \uf097 two senders, two                            A     lin : original\n                                                        data\n        receivers\n    \uf097 one router, infinite                 Host                    unlimited shared\n        buffers                            B                       output link buffers\n    \uf097 no retransmission\nC/2-                                 8                            \uf097 large delays when\n   2                                                              \uf097 maximum achievablecongested\n                                                                      throughput\n          Ain     CI2                       ^    C/2\n                                                        Transport Layer                          19\n---\nCauses/costs of congestion: scenario 2\n\n\n \uf097 one router, finite buffers\n \uf097 sender retransmission of lost packet\n\n\n                   Host         lin : original data                   lout\n                   A           l'in : original data, plus\n                                   retransmitted data\n\n\n     Host B                          finite shared output\n                                               link buffers\n\n\n                                                      Transport Layer       20\n---\n@o broad eproeches towards\n Two broad approaches towards\nconbestbn conual\n congestion control\n\n\n  End-end congestion control:\n  \uf097 no explicit feedback from network\n  \uf097 congestion inferred from end-system observed loss, delay\n  \uf097 Approach taken by TCP\n\n\n  Network-assisted congestion control:\n  \uf097 routers provide feedback to end systems\n     \u25e6 single bit indicating congestion (SNA, DECbit, TCP/IP ECN, ATM)\n     \u25e6 explicit rate sender should send at\n\n\n                                            Transport Layer             21\n---\n                                  TCP congestkon coual\n                                   TCP congestion control\n\n\ncongestion\uf072 Approach: increase transmission rate (congestion windowwindow sizesize), probing for usable bandwidth, until loss occurs\n                     \uf06d additive increase: increase CongWin by 1 MSS every\n                         RTT until loss detected\n                     \uf06d multiplicative decrease: cut CongWin in half after loss\n\n\n                              congestion\n                               window\n\n\n                          24 Kbytes\n\n\n                          16 Kbytes\n\n\n                           8 Kbytes\n\n\n                 Saw tooth\n                 behavior: probing                                                    time\n                 for bandwidth\n\n\n                                                                    Transport Layer                     22\n---\nTCP Conseston Conuol\n TCP Congestion Control\n\n\n  \uf097 Sender limits transmission\n  \uf097 Roughly,\n                   rate = CongWinBytes/secRTT\n  \uf097 CongWin is dynamic\n     \u25e6 function of perceived network congestion\n  \uf097 Three mechanisms\n     \u25e6 Additive Increase Multiplicative Decrease\n     \u25e6 Slow start\n     \u25e6 Conservative after timeout events\n\n\n                                           Transport Layer  23\n---\n     TCP Skw Scart\n      TCP Slow Start\n\n\n       \uf097 When connection begins                                           Host A    Host B\n            \u25e6 CongWin = 1 MSS (Maximum Segment Size)\n            \u25e6 Example: MSS = 500 bytes & RTT = 200 msec\n            \u25e6 initial rate = 20 kbps\n\n\n       \uf097 Available bandwidth may be >> MSS/RTT\n            \u25e6 desirable to quickly ramp up to respectable rate\n\n\n       \uf097 When connection begins\n            \u25e6 increase rate exponentially fast until first loss\n            \u25e6 increase rate exponentially until first loss event:\n            \u25e6 double CongWin every RTT\n            \u25e6 done by incrementing CongWin for every ACK                                    time\n                received\n\n\nRTT\n\n\n                                                                   Transport Layer                24\n---\nRefnement\n Refinement\n\n\n  When should the exponential increase switch to linear?\n  \uf097 CongWin gets to 1/2 of its value before timeout.\n                                                     TCP SeriesReno\n                2      Threshold_\n                                                           Threshold\n                                TCP SeriesTahoe\n                               3 4 56 7            10 11 12 13 14 15\n                                     Transrr ission round\n  Implementation:\n  \uf097 Variable Threshold\n  \uf097 At loss event, set Threshold to 1/2 of CongWin before loss\n\n\n                                                       Transport Layer  25\n---\nTCP Consettbon Conttol Sumaryy\nTCP Congestion Control Summary", "start_char_idx": 14161, "end_char_idx": 19775, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "890a9b29-b602-4c13-b7d0-f1df2b910edb": {"__data__": {"id_": "890a9b29-b602-4c13-b7d0-f1df2b910edb", "embedding": null, "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9", "node_type": "4", "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "hash": "ad7ffb52e045eb784a8d8b7e54c7c74a01ca93a8928a4e55b6646f1d0dfc8360", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc96c4c9-c788-4951-a9d8-29f6cca16a7d", "node_type": "1", "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "hash": "2f6a2e02868de7705f4e0873d30e005da33befa8a3ac3009ef3df758b109d5a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1f62dfc-d526-4f2d-a447-ed1bf918e240", "node_type": "1", "metadata": {}, "hash": "a2a75575ce56a3234895f7d9f6304f61643c2f8a21aa6a4d6652a3c6ce0cc0db", "class_name": "RelatedNodeInfo"}}, "text": "RTT\n\n\n                                                                   Transport Layer                24\n---\nRefnement\n Refinement\n\n\n  When should the exponential increase switch to linear?\n  \uf097 CongWin gets to 1/2 of its value before timeout.\n                                                     TCP SeriesReno\n                2      Threshold_\n                                                           Threshold\n                                TCP SeriesTahoe\n                               3 4 56 7            10 11 12 13 14 15\n                                     Transrr ission round\n  Implementation:\n  \uf097 Variable Threshold\n  \uf097 At loss event, set Threshold to 1/2 of CongWin before loss\n\n\n                                                       Transport Layer  25\n---\nTCP Consettbon Conttol Sumaryy\nTCP Congestion Control Summary\n\n\n \uf097 When CongWin is below Threshold, sender in\n   slow-start phase, window grows exponentially.\n \uf097 When CongWin is above Threshold, sender is in\n   congestion-avoidance phase, window grows linearly.\n \uf097 When a triple duplicate ACK occurs, Threshold set\n   to CongWin/2 and CongWin set to Threshold.\n\n\n \uf097 When timeout occurs, Threshold set to\n   CongWin/2 and CongWin is set to 1 MSS.\n\n\n                                      Transport Layer  26\n---\nTCP Falress\nTCP Fairness\n\n\n Fairness goal: if K TCP sessions share same bottleneck link\n    of bandwidth R, each should have average rate of R/K\n \uf097 Additive increase gives slope of 1, as throughout increases\n \uf097 multiplicative decrease decreases throughput proportionally\n\n\n                   TCP connection 1\n\n\n              TCP                 bottleneck\n              connection 2        router\n                                  capacity R\n\n\n                                                Transport Layer  27\n---\nBndwdth Meulos\n Bandwidth Metrics\n\n\n  \uf097 Bandwidth Capacity\n      \u25e6 The maximum amount of data per time unit that the link or path has available,\n          when there is no competing traffic\n      \u25e6 The link with the minimum transmission rate determines the capacity\n  \uf097 Achievable bandwidth (Throughput)\n      \u25e6 The maximum amount of data per time unit that a link or path can provide to an\n          application, given the current utilization, the protocol and operating system used,\n          and the end-host performance capability and load\n      \u25e6 Hardware/software configuration on the end hosts actually limit the achievable\n          bandwidth delivered to the application.\n  \uf097 Bandwidth Utilization\n      \u25e6 The aggregate capacity currently being consumed\n  \uf097 Available Bandwidth\n      \u25e6 Available Bandwidth = Bandwidth Capacity \u2013 Bandwidth Utilization\n\n\n                                                   6/13/2024 Internetworking and Dist. Systems  28\n---\nPasste VeActhe measurement\nPassive vs. Active measurement\n\n\n \uf097 Active Measurement\n     \u25e6 Tools actively send probing packets into the network\n     \u25e6 Overhead introduced\n \uf097 Passive Measurement\n     \u25e6 Tools monitors the passing traffic without interfering\n     \u25e6 Less reliable than active \u2013 cannot selectively measure\n        all aspect of bandwidth\n\n\n                                         6/13/2024 Internetworking and Dist. Systems  29\n---\nMeasurement Technkques\n Measurement Techniques\n\n\n  \uf097 Receiver-based (end-to-end)\n       \u25e6 Usually use the one-direction TCP stream to probe the path bandwidth\n       \u25e6 Advantage\n           \uf096 More accurate than sender-based technique\n       \u25e6 Disadvantage\n           \uf096 Difficult to deploy\n           \uf096 The clock have to be synchronized at two ends\n  \uf097 Sender-based (echo-based)\n       \u25e6 Force the receiver to reply the ICMP query, UDP echo or TCP-FIN\n       \u25e6 Advantage\n           \uf096 Flexible deployment\n           \uf096 Clock needn\u2019t synchronized at two ends.\n       \u25e6 Disadvantage:\n           \uf096 ICMP and UDP echo packets are rate-limited or filtered out by some routers\n           \uf096 Round-trip is influenced by cross-traffic than that of one-way delay\n           \uf096 Response packets may come back through a different path\n\n\n                                                    6/13/2024 Internetworking and Dist. Systems  30\n---\nMeasurement Technlque Examples\nMeasurement Technique Examples\n\n\n \uf097 Packet Dispersion technology\n     \u25e6 Packet pair and packet train\n     \u25e6 Self-Loading Periodic streams (SLOPS)\n \uf097 Variable Packet Size (VPS) technology\n     \u25e6 VPS even/odd\n     \u25e6 Tailgating technique\n \uf097 TCP/UDP/ICMP Simulation\n\n\n                                             6/13/2024 Internetworking and Dist. Systems  31\n---\n   TCPNUDPICMP Stwuhatkn\n   TCP/UDP/ICMP Simulation\n\n\n   Tool Name            Method              Protocol            Metrics          Path/Per-link", "start_char_idx": 18938, "end_char_idx": 23611, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1f62dfc-d526-4f2d-a447-ed1bf918e240": {"__data__": {"id_": "d1f62dfc-d526-4f2d-a447-ed1bf918e240", "embedding": null, "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a4e343d8-c84b-473f-8413-4d02662d8aa9", "node_type": "4", "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "hash": "ad7ffb52e045eb784a8d8b7e54c7c74a01ca93a8928a4e55b6646f1d0dfc8360", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "890a9b29-b602-4c13-b7d0-f1df2b910edb", "node_type": "1", "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}, "hash": "11096e0c2cf48a5991180e431481edbce61ed03e41e3ce734d05b0189b86dd3e", "class_name": "RelatedNodeInfo"}}, "text": "6/13/2024 Internetworking and Dist. Systems  30\n---\nMeasurement Technlque Examples\nMeasurement Technique Examples\n\n\n \uf097 Packet Dispersion technology\n     \u25e6 Packet pair and packet train\n     \u25e6 Self-Loading Periodic streams (SLOPS)\n \uf097 Variable Packet Size (VPS) technology\n     \u25e6 VPS even/odd\n     \u25e6 Tailgating technique\n \uf097 TCP/UDP/ICMP Simulation\n\n\n                                             6/13/2024 Internetworking and Dist. Systems  31\n---\n   TCPNUDPICMP Stwuhatkn\n   TCP/UDP/ICMP Simulation\n\n\n   Tool Name            Method              Protocol            Metrics          Path/Per-link\n\n\n      TReno               TCP             UDP, ICMP               BTC                 Path\n                       simulation\n        ttcp         Path flooding            TCP,            Achievable              Path\n                                              UDP              bandwidth\n                                                              Bandwidth\n       iperf        Path flooding          TCP, UDP            capacity,             Path\n                                                                 Loss\n     Netperf         Path flooding         TCP, UDP           BTC, delay              Path\n                                                              throughput\n\n\nFOR MORE INFO...\n TReno http://www.psc.edu/networking/treno_info.html\n Iperf http://dast.nlanr.net/Project/Iperf\n Netperf http://www.netperf.org/netperf/NetperfPage.html\n ttcp ftp://ftp.arl.mil/pub/ttcp/\n\n\n                                                6/13/2024 Internetworking and Dist. Systems     32\n---\nIPERF\n IPERF\n\n\n  \uf097 Website\n     \u25e6 http://dast.nlanr.net/Projects/Iperf/\n  \uf097 Format\n     \u25e6 server side\n        \uf096 iperf -s -%\n        \uf096 Iperf -s -V\n     \u25e6 client side\n        \uf096 iperf -c <server address> -%\n        \uf096 iperf -c <server IPv6 address>\n\n\n                                          6/13/2024 Internetworking and Dist. Systems  33\n---\n   Vartabl Packet Stze Technokey\n    Variable Packet Size Technology\n\n\n       Tool Name                Protocol                   Metrics              Path/Per-link\n           bing                   ICMP              Bandwidth capacity,              Path\n                                                         loss, delay\n           clink                  UDP               Bandwidth capacity,              Path\n                                                            Loss\n          Pchar                UDP, ICMP            Bandwidth capacity,            Per-link\n                                                        Loss, delay\n        Nettimer                   TCP              Bandwidth capacity             Per-link\n        pathchar                  UDP,              Bandwidth capacity,            Per-link\n                                  ICMP                  Loss, delay\n\n\nFOR MORE INFO...\n\n\nBing http://www.cnam.fn/reseau/bing.html\nClink http://rocky.wellesley.edu/downey/clink/\nPchar http://www.emplyees.org/~bmah/software/pchar\nNettimer http://mosquitonet.stanford.edu/~laik/project/nettimer\nPathchar ftp://ftp.ee.lbl.gov/pathchar/\n                                                 6/13/2024 Internetworking and Dist. Systems   34\n---\n   Packet Dlsperakn Technlqua\n    Packet Dispersion Technique\n       Tool Name                     Method                    Protocol                 Rth\n                                                                                        Metrics\n\n\n          bprobe                    Packet pair                  ICMP             Bandwidth Capacity\n\n\n          cprobe                    Packet pair                  ICMP             Bandwidth utilization\n\n\n          Netest                    Packet pair                  UDP              Bandwidth capacity\n\n\n          Pathrate           Packet pair, packet train           UDP              Bandwidth capacity\n\n\n          Pipechar                 Packet train                  UDP              Available bandwidth\n\n\n          Sprobe                    Packet pair                  TCP              Bandwidth capacity\n\n\nFOR MORE INFO...\n\n\n  Bprobe and cprobe http://cs-people.bu.edu/carter/tools/Tools.html\n  Nettest http://www-didc.lbl.gov/pipechar\n  Pathrate http://www.cc.gatech.edu/fac/Constantinos.Dovrolis\n  Pipechar http://www-didc.lbl.gov/pipechar\n  SProbe http://sprobe.cs.washington.edu\n                                                    6/13/2024 Internetworking and Dist. Systems          35\n---\nPacket Dispersion Technique\n\n\n \uf097 Sender sends two same-size packets back-to-back from source to sink.\n \uf097 The packets will reach the sink dispersed by the transmission delay of the\n     bottleneck links if there is no cross traffic\n \uf097 Measuring the dispersion can infer the bottleneck link bandwidth capacity.\n                          Xld_[\n Note: Bottleneck link can refer to the link with smallest transmission rate, it\u2019s\n     also can refer to the link with minimum available bandwidth. We refer the\n     bottleneck link to the first case.\n\n\n                                                6/13/2024 Internetworking and Dist. Systems  36", "start_char_idx": 23019, "end_char_idx": 28111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3302bed-1315-48ec-9bfa-02e9d5a46eae": {"__data__": {"id_": "f3302bed-1315-48ec-9bfa-02e9d5a46eae", "embedding": null, "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7cdfdb2a-b39a-47c4-9444-6e39be015900", "node_type": "4", "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "hash": "1bf60889ecd6a5b7b8e9c08f3f7d011635c47883fc1b360d128d8f1e703526ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f98514d-6660-4824-9b53-741a65ee838f", "node_type": "1", "metadata": {}, "hash": "ffb021bd5efbd5354e36a01456345154089721ea65dd88e1455551bdc5a4fc83", "class_name": "RelatedNodeInfo"}}, "text": "0  EE 542\n   EE 542\n   Lecture 5: The Internet Networking Methods and Usage\n   Internetworking and Cloud Computing\n\n\n   Young Cho\n   Department of Electrical Engineering\n   University of Southern California\n\n\n                                                         1\n---\n  Address DlstrIbutkon\n  Address Distribution\n                    R1          129.36.1.64/27\n129.36.0.0/16                   129.36.2.64/27     B2\n                     29.36.1.32127\n                    129.36.2.32127\n              B1\n                                            R2\n                                RI                         129.36.1.32/27\n                                                          129.36.2.32127\n                                129.36.4.32127  129.36.3.32127\n                                                                           2\n---\n Routo Aesresatkn\n  Route Aggregation\n                   R1                             B2\n129.36.0.0/16                   129.36.2.0/24\n              B1  129.36.1.0/24\n                                          R2\n                               RI                         129.36.1.32/27\n                                                         129.36.1.64/27\n                              129.36.1.128/27  129.36.1.96/27\n                                                                         3\n---\nLonsest Preix Match\n Longest Prefix Match\n\n\n  \uf097 Allow more specific entries to supersede more\n     general ones\n     \u25e6 128.42.8/24\n        \uf096 Route this traffic to Italy\n     \u25e6 128.42/16\n        \uf096 Route this traffic to Houston\n        \uf096 Except for addresses that match a route with a longer prefix\n          (i.e., 128.42.8/24)\n  \uf097 Allows significantly more route aggregation\n  \uf097 Simplifies things if companies move (physically\n     or to another ISP) their block of IP addresses\n\n\n                                                                        4\n---\nLongest Prefix Match\n\n\n \uf097 Software Methods\n     \u25e6 Hashing\n     \u25e6 Predictive\n     \u25e6 Mostly not used\n     \u25e6 May make a come back for IPv6\n \uf097 Ternary CAM\n     \u25e6 Use \u201cdon\u2019t care\u201d for bits outside the prefix\n     \u25e6 All matching prefixes will yield a hit\n     \u25e6 Pick the one with the longest prefix\n \uf097 Simple Improvement\n     \u25e6 Sort CAM entries based on decreasing prefix length (use lowest\n        matching entry)\n \uf097 Also does not scale for larger tables\n\n\n                                                                       5\n---\nIP Routers\n IP Routers\n\n\n  \uf097 IP routers determine next hop using LPM\n     \u25e6 Given a destination IP address, what is the IP address of the\n        router to which the datagram should be forwarded next?\n  \uf097 Why do they need the next hop IP address?\n     \u25e6 Destination IP address remains unchanged in the datagram\n     \u25e6 Actually need the next hop Ethernet address\n  \uf097 Review\n     \u25e6 Ethernet address\n        \uf096 Unique identifier for a piece of hardware\n     \u25e6 IP address\n        \uf096 Unique identifier for a system performing a function\n  \uf097 Address Resolution Protocol\n\n\n                                                                      6\n---\nAddress Resolutkon Protocol\n Address Resolution Protocol\n\n\n \uf097 Find link layer using network layer\n    \u25e6 i.e., what is the Ethernet address for a given IP\n      address?\n \uf097 Every IP hosts/routers has an ARP table\n    \u25e6 Map IP to Ethernet addresses on their LAN\n    \u25e6 May be incomplete\n    \u25e6 Can include both static and dynamic entries\n\n\n                                                         7\n---\nStatkARP Enurles\nStatic ARP Entries\n\n\n \uf097 Example\n    \u25e6 IP address 74.23.121.45 has Ethernet address\n      00:E0:81:A4:23:EF\n \uf097 Must be managed by the sysadmin\n    \u25e6 Actively managing IP to Ethernet address\n      mappings for all nodes in a LAN would be\n      difficult\n    \u25e6 What if that NIC fails and is replaced?\n    \u25e6 What if that system\u2019s IP address is changed?\n\n\n                                                    8\n---\nDyamk ARP Enutes\n Dynamic ARP Entries\n\n\n \uf097 Systems \u201cdiscover\u201d IP Ethernet address\n   mappings, as needed\n \uf097 Each entry has an IP address, an Ethernet\n   address, and a timeout (typically around\n   20 minutes)\n \uf097 ARP packets are broadcast on the LAN\n   to discover mappings\n    \u25e6 ARP packets are encapsulated in Ethernet\n      frames", "start_char_idx": 0, "end_char_idx": 4229, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f98514d-6660-4824-9b53-741a65ee838f": {"__data__": {"id_": "0f98514d-6660-4824-9b53-741a65ee838f", "embedding": null, "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7cdfdb2a-b39a-47c4-9444-6e39be015900", "node_type": "4", "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "hash": "1bf60889ecd6a5b7b8e9c08f3f7d011635c47883fc1b360d128d8f1e703526ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3302bed-1315-48ec-9bfa-02e9d5a46eae", "node_type": "1", "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "hash": "5df71cc6efdb429563efc4e678583777b6f8dd64fe0c8ec4f49aa82835cb5ebb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5d88ea9-9f16-4555-ab0d-fedec43b0751", "node_type": "1", "metadata": {}, "hash": "3c2b1497ca66088106e89aaae690e67d6ea89425cd0f79ac4b5b07b1e2de3066", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Example\n    \u25e6 IP address 74.23.121.45 has Ethernet address\n      00:E0:81:A4:23:EF\n \uf097 Must be managed by the sysadmin\n    \u25e6 Actively managing IP to Ethernet address\n      mappings for all nodes in a LAN would be\n      difficult\n    \u25e6 What if that NIC fails and is replaced?\n    \u25e6 What if that system\u2019s IP address is changed?\n\n\n                                                    8\n---\nDyamk ARP Enutes\n Dynamic ARP Entries\n\n\n \uf097 Systems \u201cdiscover\u201d IP Ethernet address\n   mappings, as needed\n \uf097 Each entry has an IP address, an Ethernet\n   address, and a timeout (typically around\n   20 minutes)\n \uf097 ARP packets are broadcast on the LAN\n   to discover mappings\n    \u25e6 ARP packets are encapsulated in Ethernet\n      frames\n\n\n                                                9\n---\nARP Request\n ARP RequestDestination MAC Address (ff:ff:ff:ff:ff:ff)\n            Destination MAC Address                   Source MAC Address\n                                  Source MAC Address\n                  Type (Ox0806)                   HW TypeEthernet: OxO001)\n           Protocol Type (IP: Ox0800)          HW AddrLen (6)     Prot AddrLen (4)\n              Opcode (Request: 1)                     Source HW Address\n                                  Source HW Address\n                                   Source IP Address\n                                Destination HW Address\n            Destination HW Address                   Destination IP Address\n             Destination IP Address                          Padding\n                                      Ethernet CRC\n                                                                                    10\n---\nSending a Packet from a Host\n Sending a Packet from a Host\n\n\n  \uf097 Host setup\n     \u25e6 IP address\n     \u25e6 Subnet \u2013 what IP addresses are on the same LAN\n     \u25e6 Gateway \u2013 where to send traffic outside the LAN\n  \uf097 Destination on LAN\n     \u25e6 Create ARP request for destination IP\n     \u25e6 Broadcast to everyone on the LAN\n     \u25e6 Destination should reply with its MAC address\n  \uf097 Destination not on LAN\n     \u25e6 Create ARP request for gateway IP\n     \u25e6 Broadcast to everyone on the LAN\n     \u25e6 Gateway should reply with its MAC address\n\n\n                                                        11\n---\nLeamlng MACAddresses\n Learning MAC Addresses\n\n\n \uf097 Hosts learn IP to Ethernet address map\n    \u25e6 ARP responses are stored in ARP tables\n    \u25e6 ARP requests are stored in ARP tables\n      (whether the host is the target or not!)\n \uf097 ARP entries time out\n    \u25e6 Allow machines to change IP and/or MAC\n      addresses transparently\n    \u25e6 Eliminate stale entries (machines turn off,\n      move, crash, etc.)\n\n\n                                                   12\n---\nForwarding a Packet In a Router\n Forwarding a Packet in a Router\n\n\n  \uf097 Lookup dest IP address in forwarding table\n    \u25e6 Yields a next hop port and IP address\n    \u25e6 If not found, drop packet\n  \uf097 Lookup packet DA in forwarding table.\n    \u25e6 If known, forward to correct port.\n    \u25e6 If not found (in particular: no default router), drop\n      packet\n  \uf097 Decrement TTL, update heade Checksum.\n  \uf097 Forward packet to outgoing interface\n  \uf097 Transmit packet onto link\n\n\n                                                             13\n---\nFonwarding Deckkn\n Forwarding Decision\n\n\n  1. Determine the network prefix of the destination\n  2. Use own address and subnet mask if on the same network\n  3. If found, immediate destination = final destination\n  4. Else, use routing table to find immediate destination\n  5. Use ARP to find datalink (MAC) address\n  6. Send packet over to datalink immediate destination\n\n\n                                                             14\n---\nRoudng Tabl\n Routing Table\n               128.17.20.1      e.g. 128.9.16.14 => Port 2\n                            R2                       Next-hop\n                                         Prefix                     Port\n                                       65/8          12841716\n            Rl              R3        128.9/16       12817141\n                                       128.9.16/20    128.17.14.1     2\n                                       128.9.9/24     128.17.10.1\n                                      128.9.25/24    128.17.14.1\n                            RA        128.9.176720   128.17.20.1\n                                       742.12719      128.17.16.1\n               128.17.16.1                   Forwarding/routing table\n                                                                          15\n---\nIntemet Conuol Mextaso Protocol\n Internet Control Message Protocol", "start_char_idx": 3510, "end_char_idx": 8067, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5d88ea9-9f16-4555-ab0d-fedec43b0751": {"__data__": {"id_": "d5d88ea9-9f16-4555-ab0d-fedec43b0751", "embedding": null, "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7cdfdb2a-b39a-47c4-9444-6e39be015900", "node_type": "4", "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "hash": "1bf60889ecd6a5b7b8e9c08f3f7d011635c47883fc1b360d128d8f1e703526ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f98514d-6660-4824-9b53-741a65ee838f", "node_type": "1", "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "hash": "193ebb110f7ba43c497149378fd5d5df8930bfab835e8f6a2238c5a975d11883", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02894ed3-84db-4ef5-b79b-d512571888b8", "node_type": "1", "metadata": {}, "hash": "adbf126427e92e7de8a97a6216e17af4f487d5f5fe4144db4532c4de551dd1ba", "class_name": "RelatedNodeInfo"}}, "text": "bit # 0                7 8              15  16             23 24       31\n\n\n                  type              code                       checksum\n\n\n                                       additional information\n                                               or\n                                           0x00000000\n\n\n \uf097 ICMP is a helper protocol for IP\n     \u25e6 Error reporting\n     \u25e6 Simple queries\n     \u25e6 Encapsulated as IP datagrams\n \uf097 Header\n     \u25e6 Type (1 byte): type of ICMP message\n     \u25e6 Code (1 byte): subtype of ICMP message\n     \u25e6 Checksum (2 bytes): checksum is calculated over entire ICMP message\n \uf097 If there is no additional data, 4 bytes are set to zero.\n     \u25e6 Each ICMP messages is at least 8 bytes long\n\n\n                                                                                16\n---\n  ICMP Query me3sa80\n   ICMP Query message\n                        ICMP Request\n                         ICMP Reply\nHostl                                        Host or routerl\n ICMP query:\n \u2022 Request sent by host to a router or host\n \u2022 Reply sent back to querying host\n\n\n                                                              17\n---\nExampb d Query:\n Example of a Query:\nEcto Reqertand Rcpl\n Echo Request and Reply\n  \uf097 Ping\u2019s are handled directly by the kernel\n  \uf097 Each Ping is translated into an ICMP Echo Request\n  \uf097 The Ping\u2019ed host responds with an ICMP Echo Reply\n\n\n           Host                                    Host\n            or                                       or\n         Router                                   router\n\n\n                                                          18\n---\nICMP Ertor messa8o\n  ICMP Error message\n                                          IP datagram\n                                          ICMP ErrorMessage\n                     Host                                            Host or router\n                                                     ICMP Message\n\n\n                                                  from IP datagram that triggered the error\n\n\n            IP header          ICMP header            IP header         8 bytes of payload\n\n\n                type              code                     checksum\n\n\n                                    Unused (0x00000000)\n\n\n\u2022    ICMP error messages report error conditions\n      \u2022    ICMP error messages include the complete IP header and the first 8 bytes of\n           the payload (typically: UDP, TCP)\n\u2022    Typically sent when a datagram is discarded\n\u2022    Error is often passed from ICMP to the apps                                             19\n---\nFrequent ICMP Ertor messase\n Frequent ICMP Error message\n\n\n Type Code          Description\n\n\n      3     0\u201315 Destination     Notification that an IP datagram could not be\n                    unreachable  forwarded and was dropped. The code field\n                                 contains an explanation.\n      5      0\u20133 Redirect        Informs about an alternative route for the\n                                 datagram and should result in a routing table\n                                 update. The code field explains the reason for\n                                 the route change.\n    11       0, 1 Time           Sent when the TTL field has reached zero (Code\n                    exceeded     0) or when there is a timeout for the reassembly\n                                 of segments (Code 1)\n    12       0, 1 Parameter      Sent when the IP header is invalid (Code 0) or\n                    problem      when an IP header option is missing (Code 1)\n\n\n                                                                                   20\n---\nCan HTTP ba Faster?\nCan HTTP be Faster?User-perceivedlatency\n\n\n    $BROWSER           Launch     Chrome\n    HTTP/1.1         your own      HTTP/2\n                      browser\n    TLS 1.2\n    TCP                UpdateHTTP ???\n    IP\n\n\n    Physical Network\n                       Build a     Google\n    google.com         carrier-    CDNgoogle.co\n                        grade       m\n                      network\n---\nQUIC Feaures\nQUIC Features\n\n\n \uf097 0-RTT connection handshake\n \uf097 0-RTT encryption handshake\n \uf097 Connections survive IP address change\n \uf097 Enhanced packet loss recovery\n \uf097 Always encrypted\n \uf097 Mostly fixes head of line blocking\n \uf097 FEC (Forward Error Correction) data\n   recovery\n---\nHTTPn Features In QUIC\n HTTP/2 Features in QUIC\n\n\n \uf097 Multiplexed streams\n \uf097 Sharing connection across domains\n \uf097 HPACK header compression\n \uf097 Stream prioritization\n \uf097 Flow Control\n \uf097 Serverinitiated streams\n---\nQUICQUIC\n\n\n \uf097 Congestion control, encryption, and some\n   HTTP/2 move to QUIC\n---\n   Sureams\n   Streams\n\n\n                     HTTP/2 Connection\n\n\n                         stream 1stream 2stream 2stream 1stream 1\n                         HEADER  HEADER   DATA    DATA    DATA\n\n\n                                                 stream 3\n       Client                                    HEADER            Server\n\n\n\uf097 One stream per request\n\uf097 Stream are broken up into frames\n\uf097 Stream 1 crypto handshake\n\uf097 Stream 3 is for headers \u2013 to serialize headers (HPACK)\n---\n  Multplexed Sueams\n   Multiplexed Streams", "start_char_idx": 8075, "end_char_idx": 13213, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "02894ed3-84db-4ef5-b79b-d512571888b8": {"__data__": {"id_": "02894ed3-84db-4ef5-b79b-d512571888b8", "embedding": null, "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7cdfdb2a-b39a-47c4-9444-6e39be015900", "node_type": "4", "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "hash": "1bf60889ecd6a5b7b8e9c08f3f7d011635c47883fc1b360d128d8f1e703526ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5d88ea9-9f16-4555-ab0d-fedec43b0751", "node_type": "1", "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "hash": "064318e43e696d183fb6a8d6c078f0ab3de2ef6d726cc749322604bb0b73b9a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3aa495d-d2f2-48cb-b614-685662d764de", "node_type": "1", "metadata": {}, "hash": "8ba9d6548a8c82d367f63a2fe85b7138498e4e9ca646792ab8fa15e052e1b034", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Multiplexed streams\n \uf097 Sharing connection across domains\n \uf097 HPACK header compression\n \uf097 Stream prioritization\n \uf097 Flow Control\n \uf097 Serverinitiated streams\n---\nQUICQUIC\n\n\n \uf097 Congestion control, encryption, and some\n   HTTP/2 move to QUIC\n---\n   Sureams\n   Streams\n\n\n                     HTTP/2 Connection\n\n\n                         stream 1stream 2stream 2stream 1stream 1\n                         HEADER  HEADER   DATA    DATA    DATA\n\n\n                                                 stream 3\n       Client                                    HEADER            Server\n\n\n\uf097 One stream per request\n\uf097 Stream are broken up into frames\n\uf097 Stream 1 crypto handshake\n\uf097 Stream 3 is for headers \u2013 to serialize headers (HPACK)\n---\n  Multplexed Sueams\n   Multiplexed Streams\n\n\n                 HTTP/1.1                               HTTP/2\n                 Sequential                          Multiplexed\n           Client          Server                Client         Server\n\n\n\uf097 HTTP/1.1\n       \u2022 4-8 outstanding requests on 4-8 connections\n       \u2022 Resource intensive on the server\n\uf097 HTTP/2 and QUIC\n       \u2022 One connection, many concurrent requests\n       \u2022 Normally limited to 100\n---\n           Eabllhinga QUIC Connectn\n            Establishing a QUIC Connection\n\n\n    \uf097 HTTP response header                  QUIC Connetion\n\n\n      \u2022 Alternate-Protocol: 443:quic\n\uf097 Client establishes QUIC\n   connection in the background\n\uf097 Client\u2019s can cache if server\n   supports QUIC\n\n\nClient       Server\n       HTTP\n      Alternate-Protocol:\n       QUIC\n---\n TCP+TLS v QUIC\n  TCP+TLS vs. QUIC\n         HTTP over TCP + TLS                          HTTP over QUIC\n         client         server                     client         server\n                             TCP              QUIC\n                             handshake    handshake\n                                                                        HTTP\n  TLS 1.3                                                              exchange\nhandshake\n                             HTTP\n                             exchange\n      time                                      time\n                              Initial Connection\n\n\n                                                                              28\n---\n TCP+TLS vs. QUIC\n           HTTP over TCP + TLS                               HTTP over QUIC\n          client           server                         client           server\n                                                    QUIC\n                                 TCP                0-RTT                        HTTP\n                                 handshake      handshake                        exchange\n   TLS 1.30-RTT                   HTTP\nhandshake                        exchange\n       time                                            time\n                                    Reconnection\n\n\n                                                                                         29\n---\n   QUIC Success Rata\n   QUIC Success Rate                     QUIC works\n                          7%             UDP is rate limited\n                                         QUIC is not used\n                               92%\n\uf097 QUIC connection success rate\n      \u2022 92% works\n      \u2022 7% doesn\u2019t work\n      \u2022 1% is rate limited\n\uf097 Google disables QUIC to specific ASNs\n---\nQUIC Performance\nQUIC Performance\n\n\n \uf097 5% latency reduction on average\n \uf097 30% reduction in rebuffers (video pauses)\n   on YouTube\n \uf097 1 second faster at the 99th percentile for\n   Google web search\n \uf097 Helps more for higher latency networks\n---\n                  Protocol Usaso 6n to Intemnet\n                    Protocol Usage on the Internet\nZoomIm     3m    6m   YTD    ly    AlI                                                        From   Jan 1, 2017    To  Apr 29, 2018\n                                                                           QUIC: 30.4% (170 MBit/s)         QUIC\n                                                                  HTTPSHTTPS: 36.8% (205 MBit/s)\n                                                                                                                                      3\n                           HTTP                                               4; 19.8% (110 MBit/ s)\n                                                       Other                Other; 13.0% (72 MBit/ s)\n           2017-03           2017             2017-07       2017-09           2017-11         Monday, Jan 8, 20182018-03\n   lan'16                        6                                                                               YJan '18\n                                                                                                                                       32\n---\nQUIC Support\nQUIC Support\n\n\n \uf097 Google QUIC\n   \u25e6 Chrome (Desktop/Mobiles)\n \uf097 IETF QUIC\n   \u25e6 Chrome Canary\n   \u25e6 Firefox Nightly\n   \u25e6 Safari 14\n \uf097 Early Trials\n   \u25e6 https://quic.nginx.org\n   \u25e6 https://ietf.akaquic.com", "start_char_idx": 12451, "end_char_idx": 17388, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c3aa495d-d2f2-48cb-b614-685662d764de": {"__data__": {"id_": "c3aa495d-d2f2-48cb-b614-685662d764de", "embedding": null, "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7cdfdb2a-b39a-47c4-9444-6e39be015900", "node_type": "4", "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "hash": "1bf60889ecd6a5b7b8e9c08f3f7d011635c47883fc1b360d128d8f1e703526ea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02894ed3-84db-4ef5-b79b-d512571888b8", "node_type": "1", "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}, "hash": "7f51f2131f10ab40feae8bda1ceb803b5595ec66bdc48b663a5916711cd39d54", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Google QUIC\n   \u25e6 Chrome (Desktop/Mobiles)\n \uf097 IETF QUIC\n   \u25e6 Chrome Canary\n   \u25e6 Firefox Nightly\n   \u25e6 Safari 14\n \uf097 Early Trials\n   \u25e6 https://quic.nginx.org\n   \u25e6 https://ietf.akaquic.com\n\n\n                               33\n---\nQUIC Linca8o\n QUIC Lineage\n                                                                 Google QUICIdentical to\n 2012   Google QUIC  2015                             2019        IETF QUIC\n                             IETF QUIC\n                           2016   QUIC Crypto\n                                  Replaced by 2018    2019     2020\n                                                             QUIC v1\n                                    TLS 1,3                 Finalized (?)\n                                                    HTTPR\n                                                      2019     2020\n                                                              HTTP3\n                                                            Finalized (?)\n                                                                              34\n---\nDifkarences\nDifferences\n\n\n \uf097 HTTP/1 and HTTP/2 on TCP\n   \u25e6 Until Now\n   \u25e6 TLS used for Security\n   \u25e6 Share a Single TCP Connection (HTTP/2)\n \uf097 HTTP/3 on UDP\n   \u25e6 Debut 2020\n   \u25e6 QUIC to Replace TCP+TLS\n   \u25e6 Low Latency (Reduced Overhead)\n   \u25e6 Higher Throughput (Multiple Connections)\n\n\n                                               35\n---\nThousho on QUIC\n Thoughts on QUIC\n\n\n  \uf097 Challenges\n     \u25e6 UDP blocking by Service Providers\n     \u25e6 Complexity Associated with Multiple\n       Threadedness/Connections/Streams\n     \u25e6 Higher CPU Utilization\n  \uf097 Possible Solutions\n     \u25e6 OS Bypassing Drivers\n     \u25e6 Hardware Offload Engines\n  \uf097 Why Not Replace Other TCP packets\n     \u25e6 Likely will follow after HTTP/3\n     \u25e6 What would it take?\n\n\n                                            36", "start_char_idx": 17203, "end_char_idx": 19050, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8800a61f-47a2-4f74-94ea-700fb028856f": {"__data__": {"id_": "8800a61f-47a2-4f74-94ea-700fb028856f", "embedding": null, "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "10f7a796-383c-4237-8197-5fd5d7aef48f", "node_type": "4", "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "hash": "08f9013051fdcf72a3c8a2ff169260e6e90bcd0affcca04984338254522c0a04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e1630e7c-e3d7-44f1-b72e-5eb01674465f", "node_type": "1", "metadata": {}, "hash": "1653abb5e7f1730dc3ee7f2c18887b46901ee556194aa2f765a7e3e87195b487", "class_name": "RelatedNodeInfo"}}, "text": "0  Ee542\n   EE542\n   LLecture 6: Software Defined Networks\n   Lecture 6: Software Defined Networks\n   Internet and Cloud Computing\n\n\n   Young Cho\n   Department of Electrical Engineering\n   University of Southern California\n---\nSoftwara Defned Netwmork\n Software Defined Network\n\n\n \uf097 Driven by Cost and Control\n \uf097 Trend is towards an Open-source\n \uf097 Virtualization (or slicing) of Network\n \uf097 Adopted by Cloud Companies\n \uf097 Network with Low-level Control\n---\nThe Real Story-\"\nThe Real Story\u2026\n\n\n                  6/13/2024 Copyright USC/ISI. All rights reserved.  3\n---\n     Anabey\n     Analogy\n\n\n                                       Application        Application\n\n\nApplication\n                                                     OS\n\n\nComputer                                        Computer\n\n\n             OS abstracts hardware substrate\n             \u2192 Innovation in applications\n---\n          Analogy\n\n\nApplication         Application                   Application           Application\n\n\n          Windows                                 Windows     or  Linux  or   Mac\n             (OS)                                   (OS)                       OS\n\n\n             x86                                                 x86\n        (Computer)                                          (Computer)\n\n\n       Simple, common, stable, hardware substrate below\n       + Programmability\n       + Competition\n       \u2192 Innovation in OS and applications\n---\n          Vrunliaton\n          Virtualization\n\n\n                                                    App         App       App\n\n\nApplication          Application                  Windows                 Mac\n                                                WindowsWindows LinuxLinuxMacMacOS\n                                                   (OS)(OS)(OS)Linux     OSOS\nWindows    or   Linux or   Mac\n  (OS)                      OS                         Virtualization\n\n\n               x86                                             x86\n          (Computer)                                      (Computer)\n\n\n            Simple, common, stable, hardware substrate below\n            + Programmability\n            + Strong isolation model\n            + Competition above\n            \u2192 Innovation in infrastructure\n---\nVrurlbaton and SDN\n Virtualization and SDN\n\n\n                                                             App             App          App\n         App            App           App\n\n\n      Windows                         Mac            ControllerControllerController  ControllerControllerController\n    WindowsWindows      LinuxLinux  MacOSMac               111                             222\n       (OS)(OS)(OS)   Linux         OSOS\n              Virtualization                              Virtualization (FlowVisor)\n\n\n                       x86                                    OpenFlow\n                 (Computer)\n\n\n   Simple, common, stable, hardware substrate below\n   + Programmability\n   + Strong isolation model\n   + Competition above\n   \u2192 Faster innovation\n---\n                  Inskdk tho Swtch\n                   Inside the Switch\n\n\n                    \uf097 What happens inside switch?TCAM              MAC                            Port\n                                                                     AA                              1\n                                                                      BB                             2\n                                                                     CC                              3\n                                                                     DD                              4\nTo: EE, From: CC                                                      EE                             5\n                                                                      FF                             6\n\n\n                                                       6/13/2024 Copyright USC/ISI. All rights reserved.  8\n---\nWero ara to smarts?\nWhere are the smarts?\n\n\n \uf097 Greatly simplified example\n \uf097 But\u2026 where do the smarts to figure out\n     the port mappings, etc. lie?\n \uf097 In the switch!\n\n\n                                           6/13/2024 Copyright USC/ISI. All rights reserved. 9\n---\nExampk\u2013 Cisco 5548\n Example                     Clsco 5548\n\n\n   \uf097 Big data center switch\n   \uf097 Features:\n\n\n                                         6/13/2024 Copyright USC/ISI. All rights reserved.  10\n---\nTlal Swtches\n Typical Switches\n\n\n  \uf097 Lots of features because *somebody* might need it\n  \uf097 Adds cost/complexity\n  \uf097 Even \u2018dumb\u2019 switches support lots of protocols\n  \uf097 Why?\n       \u25e6 Different use scenarios need subset of features to build flexible,\n          powerful, secure networks \u2013 this is good\u2026 but\u2026\n\n\n                                                6/13/2024 Copyright USC/ISI. All rights reserved.  11\n---\nSDN: Contd/vData Ptano\nSDN: Control vs. Data Plane\n\n\n \uf097 Data plane: hardware that\n   receives/moves/transmits packets\n \uf097 Control plane:\n   hardware/firmware/software that makes\n   decisions about which packets to forward\n   and where\n \uf097 Most switches/routers have control plane\n   and data plane together\n\n\n                           6/13/2024 Copyright USC/ISI. All rights reserved. 12\n---\nSDN Dfierences\n  SDN Differences", "start_char_idx": 0, "end_char_idx": 5254, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1630e7c-e3d7-44f1-b72e-5eb01674465f": {"__data__": {"id_": "e1630e7c-e3d7-44f1-b72e-5eb01674465f", "embedding": null, "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "10f7a796-383c-4237-8197-5fd5d7aef48f", "node_type": "4", "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "hash": "08f9013051fdcf72a3c8a2ff169260e6e90bcd0affcca04984338254522c0a04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8800a61f-47a2-4f74-94ea-700fb028856f", "node_type": "1", "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "hash": "bf18302a170d6fb21c7bb7d890413fcd2b3a20cd6080ee18a121990256740f07", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8b3c6d4-d075-4a65-b9d1-7a6d5b4f1a55", "node_type": "1", "metadata": {}, "hash": "c6411f4f97fe65de3f2a0bd326e7393027f4ad9fb9ac8c6d8a064d24c3d6eebb", "class_name": "RelatedNodeInfo"}}, "text": "6/13/2024 Copyright USC/ISI. All rights reserved.  11\n---\nSDN: Contd/vData Ptano\nSDN: Control vs. Data Plane\n\n\n \uf097 Data plane: hardware that\n   receives/moves/transmits packets\n \uf097 Control plane:\n   hardware/firmware/software that makes\n   decisions about which packets to forward\n   and where\n \uf097 Most switches/routers have control plane\n   and data plane together\n\n\n                           6/13/2024 Copyright USC/ISI. All rights reserved. 12\n---\nSDN Dfierences\n  SDN Differences\n\n\n   \uf097 Main idea:\n       \u25e6 Separate control plane from data plane\n   \uf097 Data plane becomes very simple\n       \u25e6 Faster, cheaper\n       \u25e6 Data is thought of as flows from sender to\n           receiver\n   \uf097 Implement control plane in SOFTWARE\n       \u25e6 Support only the protocols you need by writing\n           software that runs on general purpose server, not\n           by writing firmware for embedded processor\n\n\n                                                   6/13/2024 Copyright USC/ISI. All rights reserved.  13\n---\nSDNTerms\n  SDN Terms\n   \uf097 Flow\n       \u25e6 Data flowing from source to destination\n            \uf096 Think TCP session\n       \u25e6 Packets belong to a flow my matching on some\n           condition (source MAC, dest. Port, etc)\n   \uf097 Flow Table\n       \u25e6 Table of flows stored in switch to make\n           forwarding decisions\n   \uf097 Controller\n       \u25e6 Software running remotely from switch that sets\n           and updates the flow table in one or more\n           switches\n\n\n                                                     6/13/2024 Copyright USC/ISI. All rights reserved.  14\n---\nNormal Network t SDN\nNormal Network to SDN\n\n\n                                Controller\nA)MAC: AA              0Control trafficMAC: DDA)\nA)MAC: BB                                   A)\n                                     MAC: EE\n\n\n A)MAC: CC                           MAC: FF A)\n                           6/13/2024 Copyright USC/ISI. All rights reserved. 15\n---\nArst Successful SDN: OpenFkow\n First Successful SDN: OpenFlow\n\n\n  \uf097 Flexible definitions of a flow\n    \u25e6 Unicast, multicast, waypoints, load-balancing\n    \u25e6 Different aggregations\n  \uf097 Direct control over flows\n    \u25e6 Flow as an entity we program: To route, to\n      make private, to move, \u2026\n  \uf097 Exploit the benefits of packet switching\n    \u25e6 It works and is universally deployed\n    \u25e6 It\u2019s efficient (when kept simple)\n---\nControl Path (Software)\nControl Path\n Control Path\n             Control Path (Software)\nData Path (Hardware)\n Data Path (Hardware)\n---\n      OpenFlowController\n      OpenFlow Controller\n\n\nOpenFlow Protocol (SSL/TCP)\n Control Path       OpenFlow\n                     OpenFlow\n\n\n  Data Path (Hardware)\n---\nOpenFlow Flow Table Abstraction\n                                                                                    Controller\n\n\n  Software                                                                                   PC\n  Layer           OpenFlow Firmware\n\n\n                                   Flow Table\n               MAC      MAC      IP       IP      TCP      TCP\n                                                           dport Action\n               src      dst      Src      Dst     sport\n  Hardware      *       *        *        5.6.7.8  *       *        port 1\n  Layer\n\n\n                   port 1           port 2            port 3           port 4\n\n\n       5.6.7.8                                                             1.2.3.4\n---\n        OpenFkow Besko\n         OpenFlow Basics\n         Flow Table Entries\n\n\n    Rule           Action              Stats\n\n\n                                      Packet + byte counters\n\n\n             1. Forward packet to port(s)\n             2. Encapsulate and forward to controller\n             3. Drop packet\n             4. Send to normal processing pipeline\n             5. Modify Fields\n\n\nSwitch    VLAN     MAC       MAC      Eth       IP      IP    IP    TCP    TCP\nPort      ID       src       dst      type      Src     Dst   Prot  sport  dport\n  + mask what fields to match\n---\n           Bxmpks\n            Examples\n\n\nSwitching\n\n\n SwitchMAC         MAC     Eth     VLAN     IP      IP   IP    TCP      TCP\n                                                                        dport Action\n Port     src      dst     type    ID       Src     Dst  Prot  sport\n *        *      00:1f:.. *        *        *       *    *     *        *        port6\n\n\nFlow Switching", "start_char_idx": 4773, "end_char_idx": 9166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8b3c6d4-d075-4a65-b9d1-7a6d5b4f1a55": {"__data__": {"id_": "e8b3c6d4-d075-4a65-b9d1-7a6d5b4f1a55", "embedding": null, "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "10f7a796-383c-4237-8197-5fd5d7aef48f", "node_type": "4", "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "hash": "08f9013051fdcf72a3c8a2ff169260e6e90bcd0affcca04984338254522c0a04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1630e7c-e3d7-44f1-b72e-5eb01674465f", "node_type": "1", "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "hash": "129da21a073e01462b49f9c0c6fb3b1e63ef150d68679d49d2919f865e2a72c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "418e3b87-4868-4c17-9254-a1b0aa0de50c", "node_type": "1", "metadata": {}, "hash": "4ac96c7857e72f1c25cbf501e0cef87be435685d1c3f7e58523cd6c7ebc0eb2b", "class_name": "RelatedNodeInfo"}}, "text": "Rule           Action              Stats\n\n\n                                      Packet + byte counters\n\n\n             1. Forward packet to port(s)\n             2. Encapsulate and forward to controller\n             3. Drop packet\n             4. Send to normal processing pipeline\n             5. Modify Fields\n\n\nSwitch    VLAN     MAC       MAC      Eth       IP      IP    IP    TCP    TCP\nPort      ID       src       dst      type      Src     Dst   Prot  sport  dport\n  + mask what fields to match\n---\n           Bxmpks\n            Examples\n\n\nSwitching\n\n\n SwitchMAC         MAC     Eth     VLAN     IP      IP   IP    TCP      TCP\n                                                                        dport Action\n Port     src      dst     type    ID       Src     Dst  Prot  sport\n *        *      00:1f:.. *        *        *       *    *     *        *        port6\n\n\nFlow Switching\n\n\n SwitchMAC         MAC     Eth     VLAN     IP      IP   IP    TCP      TCP\n                                                                        dport Action\n Port     src      dst     type    ID       Src     Dst  Prot  sport\n port3    00:20.. 00:1f.. 0800 vlan1 1.2.3.4 5.6.7.8        4  17264 80          port6\n\n\nFirewall\n\n\n SwitchMAC         MAC     Eth     VLAN     IP      IP   IP    TCP      TCP\n                                                                        dport Forward\n Port     src      dst     type    ID       Src     Dst  Prot  sport\n *        *    *           *       *        *       *    *     *        22       drop\n---\n            Examples\n\n\nRouting\n\n\n SwitchMAC         MAC     Eth   VLAN     IP   IP       IP     TCP    TCP\n                                                                      dport Action\n Port     src      dst     type  ID       Src  Dst      Prot   sport\n *        *     *          *     *        *    5.6.7.8 *      *       *         port6\n\n\nVLAN Switching\n\n\n SwitchMAC         MAC     Eth   VLAN     IP   IP       IP     TCP    TCP\n                                                                      dport Action\n Port     src      dst     type  ID       Src  Dst      Prot   sport\n                                                                                port6,\n *        *       00:1f..  *     vlan1 *        *       *     *       *         port7,\n                                                                                port9\n---\n   OpenFkowUnso\n   OpenFlow Usage\n   DedicatedOpufbwNemk OpenFlow Network                              Controller\n                                                       specific code\n                                OpenFlow                                   PC\n\n\n                            RuleSwitchAction Statistics\n                                                                   OpenFlow\n                                                                   Protocol\n\n\n        RuleOpenFlow StatisticsAction       RuleOpenFlowAction Statistics\n           Switch                              Switch\n\n\nOpenFlowSwitch.org\n---\n  Centalhedvs Distributed Control\n  Centralized                    Dlsulbuted Contol\n\n\nCentralized Control                           Distributed Control\n\n\n                    Controller                     Controller\n\n\n    OpenFlow                                     OpenFlow\n    Switch                                       Switch\n                                                           Controller\n\n\n  OpenFlow                                    OpenFlow             Controller\n  Switch                                      Switch\n\n\n            OpenFlow                                     OpenFlow\n            Switch                                       Switch\n---\n       Alow Roudng WAgeaton\n        Flow Routing vs. Aggregation\n        Both models are possible withOpuow OpenFlow\n\n\n        Flow-Based                                   Aggregated\n\n\nEvery flow is individually set\n   up by controller\nExact-match flow entries\nFlow table contains one entry\n   per flow\nGood for fine grain control, e.g.\n   campus networks\n\n\nOne flow entry covers large\ngroups of flows\nWildcard flow entries\nFlow table contains one entry per\ncategory of flows\nGood for large number of flows,\ne.g. backbone\n---\n        Rexctm 6 Rroactt\n        Reactive vs. Proactive\n        Both models are possible withOpuRow OpenFlow\n\n\n        Reactive                                      Proactive\n\n\nFirst packet of flow triggers\n    controller to insert flow\n    entries\nEfficient use of flow table\nEvery flow incurs small\n    additional flow setup time\nIf control connection lost,\n    switch has limited utility\n\n\nController pre-populates flow table\nin switch\nZero additional flow setup time\nLoss of control connection does\nnot disrupt traffic\nEssentially requires aggregated\n(wildcard) rules\n---\nUndertyng Featres\n Underlying Features\n\n\n \uf097 Forwarding logic (of course)\n \uf097 Centralized vs. distributed control\n \uf097 Fine vs. coarse grained rules\n \uf097 Reactive vs. Proactive rule creation\n \uf097 Open research area for SDN\n---\nSDNMrunltatkon\n SDN Virtualization", "start_char_idx": 8273, "end_char_idx": 13327, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "418e3b87-4868-4c17-9254-a1b0aa0de50c": {"__data__": {"id_": "418e3b87-4868-4c17-9254-a1b0aa0de50c", "embedding": null, "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "10f7a796-383c-4237-8197-5fd5d7aef48f", "node_type": "4", "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "hash": "08f9013051fdcf72a3c8a2ff169260e6e90bcd0affcca04984338254522c0a04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8b3c6d4-d075-4a65-b9d1-7a6d5b4f1a55", "node_type": "1", "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "hash": "c3c9d0d3d57d3a4179ea92fbb73e58dd69ff3346e5948f4059616be45ae0f632", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75ac0824-4e85-4db0-949e-5f01343321b2", "node_type": "1", "metadata": {}, "hash": "1711660d1208473ef1a11ebaa40f220106173d18f22e6e9f66ad02c4a5a52da9", "class_name": "RelatedNodeInfo"}}, "text": "Reactive                                      Proactive\n\n\nFirst packet of flow triggers\n    controller to insert flow\n    entries\nEfficient use of flow table\nEvery flow incurs small\n    additional flow setup time\nIf control connection lost,\n    switch has limited utility\n\n\nController pre-populates flow table\nin switch\nZero additional flow setup time\nLoss of control connection does\nnot disrupt traffic\nEssentially requires aggregated\n(wildcard) rules\n---\nUndertyng Featres\n Underlying Features\n\n\n \uf097 Forwarding logic (of course)\n \uf097 Centralized vs. distributed control\n \uf097 Fine vs. coarse grained rules\n \uf097 Reactive vs. Proactive rule creation\n \uf097 Open research area for SDN\n---\nSDNMrunltatkon\n SDN Virtualization\n\n\n\u2022 Divide the production network into logical slices\n    o each slice/service controls its own packet forwarding\n    o users pick which slice controls their traffic: opt-in\n    o existing production services run in their own slice\u25aa e.g., Spanning tree, OSPF/BGP\n\n\n\u2022 Enforce strong isolation between slices\n    o actions in one slice do not affect another\n\n\n\u2022 Allows the (logical) testbed to mirror the production\n   network\n    o real hardware, performance, topologies, scale, users\no Prototype implementation: FlowVisor\n---\n            Adda\n            Add a Slicing Layer Between PlanesSlkang Layer Beteen Faanes\nSlice 2\nController            ICore 2(intel)Extreme] Slice 1               Core 2_(intel)Extreme]Slice 3\n                                                                                        Controller  ICore 2(intel)Extreme]\n                       quad-core             Controller              quad-core                        quad-core\n                                               Slicing Layer                                         Slice\n                                                                                                     Policies\n                              Rules         Control/Data                            Excepts\n                                            Protocol\n                                                                                Eicadcom\n                                                Data\n                                                Plane\n---\nNetwork SlkchgActttecure\nNetwork Slicing Architecture\n\n\n\uf097 A network slice is a collection of sliced switches/routers\n\n\n \u2022 Data plane is unmodified\n \u2013 Packets forwarded with no performance penalty\n \u2013 Slicing with existing ASIC\n\n\n\u2022 Transparent slicing layer\n \u2013 each slice believes it owns the data path\n \u2013 enforces isolation between slices\n        \u2022 i.e., rewrites, drops rules to adhere to slice police\n \u2013 forwards exceptions to correct slice(s)\n---\nMaps Packets t0 Slkes\n Maps Packets to SlicesTCP port#\n                           Slice 2\n                                    Slice 3\n     Slice 1\n                                     IP address\n     address\n MAC\n---\n          FowMsor:Skco Manager 6rOpenFkw\n          FlowVisor: Slice Manager for OpenFlowServer            Servers\n\n\nCustom\nControl          OpenFlow                     OpenFlow          OpenFlow        OpenFlow\nPlane            Controller                   Controller        Controller      Controller\n\n\n                                                        OpenFlow\n\n\n Network           OpenFlow\n                   Protocol                                 FlowVisor\n Stub                                                          OpenFlow\n Control     OpenFlow                                      OpenFlow\n Plane       Firmware                                      Firmware\n  Data\n  Plane          Data Path                                     Data Path\n\n\n                 Switch/\n                        Switch/                                 Switch/\n                                                                       Switch/\n                 Router\n                       Router                                   Router\n                                                                      Router\n---\nManaglng Slkes\n Managing Slices\n\n\n \u25aa A proxy between switch and guest controller\n \u25aa Parses and rewrites SDN messages as they pass\n \u25aa Ensures that one experiment doesn\u2019t affect\n    another\n \u25aa Allows rich virtual network boundaries\n    \u25aa By port, by IP, by flow, by time, etc.\n \u25aa Define virtualization rules in software\n---\nSlkdngSlicing\n            Slice: OpenRoads    Slice: Aggregation  Slice: Production\n                                                          88888888\n                                                          3889\n                                                          88888880\n              Slice: PlugnServ   Physical Network   Slice: OpenPipes\n             %80\n               88\n           388888888\n---\nFutre Netvork Englneers\n Future Network Engineers\n\n\n  \uf097 Network SoC Designers\n  \uf097 Hardware Acceleration Engine Designer\n  \uf097 Application Specific System Programmer\n  \uf097 Low Level Embedded Software\n  \uf097 Intelligent Filter Algorithm Designer\n  \uf097 Application Specific Network Protocol\n  \uf097 Network Configuration Architect", "start_char_idx": 12617, "end_char_idx": 17670, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75ac0824-4e85-4db0-949e-5f01343321b2": {"__data__": {"id_": "75ac0824-4e85-4db0-949e-5f01343321b2", "embedding": null, "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "10f7a796-383c-4237-8197-5fd5d7aef48f", "node_type": "4", "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "hash": "08f9013051fdcf72a3c8a2ff169260e6e90bcd0affcca04984338254522c0a04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "418e3b87-4868-4c17-9254-a1b0aa0de50c", "node_type": "1", "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}, "hash": "35ad0b4286b71848612880f739f1a7675d8c81313980184262833e5a3751fe9a", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Network SoC Designers\n  \uf097 Hardware Acceleration Engine Designer\n  \uf097 Application Specific System Programmer\n  \uf097 Low Level Embedded Software\n  \uf097 Intelligent Filter Algorithm Designer\n  \uf097 Application Specific Network Protocol\n  \uf097 Network Configuration Architect\n\n\n                                          6/13/2024 Internetworking and Dist. Systems  35\n---\nLab 4 Custom Protocol Design\n                            Lab 4:Custom Protocol Deslgn\n \uf097 TCP/IP\n      \u25e6 Over 90% of all bits on the Internet\n      \u25e6 Tuned for wired network\n      \u25e6 Assumes low utility, latency, and data loss\n      \u25e6 Packet loss are assumed to be caused by congestion\n \uf097 Today and Future\n      \u25e6 Transition to HTTP/3 (QUIC: TCP to UDP)\n      \u25e6 Wireless Connectivity: Mobile is over 50%\n      \u25e6 Mix of both Congestion and Data Loss\n\n\n                                                   6/13/2024 Copyright USC/ISI. All rights reserved.  36\n---\nLab 4: Custom Frotocol Desbn\n Lab 4: Custom Protocol Design\n  \uf097 Internet Condition Emulation\n      \u25e6 Packet Loss\n      \u25e6 Latencies\n  \uf097 Latencies\n      \u25e6 Physical Distance\n      \u25e6 Software Overhead\n  \uf097 Packet Loss\n      \u25e6 Congestion: Case 2\n      \u25e6 Data Corruption: Case 3\n  \uf097 Custom Protocol\n      \u25e6 Handle Case 3\n      \u25e6 Is there a way to detect and optijmize?\n\n\n                                                 6/13/2024 Copyright USC/ISI. All rights reserved.  37", "start_char_idx": 17410, "end_char_idx": 18791, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aab87825-1e27-4155-b920-5b9a85d0d660": {"__data__": {"id_": "aab87825-1e27-4155-b920-5b9a85d0d660", "embedding": null, "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "071db331-e5e6-4236-89d1-b34992c71198", "node_type": "4", "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "hash": "21b9474f0e2889360be54d1b2fda0bedfb6ef19efb47a5e55198945b366fcfd8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "464c1cbc-38c6-47ce-b971-e47ceac8765f", "node_type": "1", "metadata": {}, "hash": "fe966d59ccabaa52458ca98418b552c6b18fce19ae023946acae19f66b54d59f", "class_name": "RelatedNodeInfo"}}, "text": "0  EESA2\n    EE542\n   Lecture 7: Computer Networks for Cloud\n    Lecture 7: Computer Networks for Cloud\n    Internet and Cloud Computing\n\n\n    Young Cho\n    Department of Electrical Engineering\n    University of Southern California\n---\n       Enterprise Network Market\n        Enterprise Network Market\n\n\n             Ethernet switch       Enterprise routers        WLAN         Network security\n          6.5\n          5.5                                                                  5.1    5.3   5.4\n                                                    4.6    4.7   4.8    4.9\n                 4.3    4.4    4.4    4.5    4.5\n          4.5                                                                               4.1\n                                                                               3.5    3.8\n          3.5                                                    3.1    3.4                 3.1\n                                                    2.8     3                  2.9     3\n                        2.3    2.3    2.5    2.5\n                                             2.3    2.4    2.4   2.6    2.6\n          2.5    2.12   2.2    2.2    2.2\n                 1.4    1.3    1.4    1.4    1.5    1.4    1.5   1.4    1.5    1.4    1.4   1.5\n          1.5\n       Market in billion U.S. dollars\n          0.5\n\n\n   Note(s): United States; 2017                                              statista\n   Further information regarding this statistic can be found on page 8.\n6  Source(s): Statista estimates; Grand View Research; ID 807581\n---\n  Netwvork Equlpment Companles\n  Network Equipment Companiesaruba\n   CISCO                     Enterprise company\n                                               a Hewlett Packard\njuniperl                            ARISTA\n       NETWORKS   HUAWel\n                        6/13/2024 Copyright USC/ISI. All rights reserved. 3\n---\n Equlvaknt Comand Lno Interface\n  Equivalent Command Line Interface\n         'lmln\n         cisco                       juniperNETwORKS                   NOKIA                                HUAWEl\n          JOS KR                           JUNOS                           SROS                            HMRP\n                                      COMMAND LINE CHEAT SHEET\n                                                            BASIC\n              show                            show                           show                           display\n              exit                           exit / up                        exit                            quit\n               run                            run\n              end                             exit                           exit all                        return\n              include                         match                           match                          include\n             formal                         display-set\n             reload                    request system reboot            admin reboot now                    reboot\n                                                  GENERAL CONFIGURATION\n        show running-config             show configuration             admin display-config         display current-configuration\n        show startup-config                                                                         display saved-configuration\n         configure terminal               configure / edit                  configure                     system view\n        hostname hostname           system host-name hostname        system name systemname           sysname systemname\n      show (after conf change)           show   compare               info (afterconfchange)\n             commit                          commit                        admin save                        save\nCOMMAND LINE CHEAT SHEET (Cisco, Juniper, Nokia, Huawei)                   Copyright @ 2018-2019, By Gokhan Kosem WWWipciscocom\n                                                                     6/13/2024        Copyright USC/ISI. All rights reserved.      4\n---\n Top5 Certikaatkns\n  Top 5 Certifications\n                                        CCNP:\n                                    Na                         JNCIE-ENT\n                AWS                                               (riper Recxorkag\n            Certied Rdvarced                                     Cemifed Erlerprise\n               NawOrksirg\n             aWs\n             CERTIFIED\n    CCIE                      Top 05]                                            F5\n  Clsco cerililed                                                         Cenhied Tediriglezv\nInleretyck Exper                                                               Specialistz\n    CCleTP:              Paying IT NetworkingCertifications\n                                      for 2019\n                                                 6/13/2024 Copyright USC/ISI. All rights reserved.  5\n---\nComponent 6f Switch\n  Components of Switch\n\n\n   \uf097 Control/Management Software\n   \uf097 Network OS\n   \uf097 Hardware Driver\n   \uf097 Mechanical Box\n   \uf097 Silicon\n\n\n                                  6/13/2024 Copyright USC/ISI. All rights reserved.  6\n---\nWtta Box\nWhite Box", "start_char_idx": 0, "end_char_idx": 5187, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "464c1cbc-38c6-47ce-b971-e47ceac8765f": {"__data__": {"id_": "464c1cbc-38c6-47ce-b971-e47ceac8765f", "embedding": null, "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "071db331-e5e6-4236-89d1-b34992c71198", "node_type": "4", "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "hash": "21b9474f0e2889360be54d1b2fda0bedfb6ef19efb47a5e55198945b366fcfd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aab87825-1e27-4155-b920-5b9a85d0d660", "node_type": "1", "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "hash": "63e1ad18c1350f3b91ba3a4d767a4b504ccda67abd89001cd44a0d293acfd216", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c91ab7d-bd48-4606-997b-8ecd0f801d06", "node_type": "1", "metadata": {}, "hash": "9d143039fabeeffe154ccb9a3c5f1474496ffe378923f4c76c7b01ec4a651579", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Control/Management Software\n   \uf097 Network OS\n   \uf097 Hardware Driver\n   \uf097 Mechanical Box\n   \uf097 Silicon\n\n\n                                  6/13/2024 Copyright USC/ISI. All rights reserved.  6\n---\nWtta Box\nWhite Box\n\n\n \uf097 An Open Switch Architecture\n \uf097 Separate switch software and hardware\n \uf097 Openness, Flexibility and Programmability\n \uf097 Transparent price\n \uf097 Break free from vendor lock-in\n\n\n                                             6/13/2024 Copyright USC/ISI. All rights reserved.  7\n---\n Whtta Box Market\n White Box Market\n\n\n       Report Attribute                                          Details\n\n\nMarket size value in 2020 USD 8.8 billion\nRevenue forecast in 2025 USD 25.5 billion\n\n\nGrowth Rate                                22.0% from 2018 to 2025\n\n\nHistorical data                            2015 - 2016\nForecast period                            2018 - 2025\n\n\n                                            6/13/2024 Copyright USC/ISI. All rights reserved.  8\n---\nBara Metal Servr 6 Swtch\n Bare Metal Server vs. Switch\n\n\n  \uf097 BIOS + PXE \u2192 U-Boot + ONIE\n  \uf097 Open Network Install Environment\n    \u25e6 Supported hardware preloaded with ONIE\n    \u25e6 ONIE available on GitHub\n\n\n              app   app  app           app   app  app\n               operating system         operating system\n\n\n                BIOS and PXE            U-Boot and ONIE\n              bare metal server        bare metal switch\n\n\n                                                          9\n---\n Open Source Networking Switch\n\n\n                             Single Vendor                          Vendor Agnostic\n\n\nManagement                                                              Applications\n   Software\n Network OS\n    Drivers         \u201cBlack Box\u201dProductClosed  VendorSW             #Networking StackControl Plane\n                                                                                                 Open Source\n                                                                         Network OS\n                                                                     Management Plane\n\n\n       Box                                     Orig                           Orig\n                                            Design Box                     Design Box\n                                               Orig                           Orig\n     Silicon                                 Deisgn IC                     Deisgn IC\n\n\n                 Legacy Internal           Traditional                   Bare Metal\n                      Switch                 Switch                      White Box\n\n\n                                                        \u00a9 2016 Edgecore Networks. All rights reserved |\n                                                        www.edge-core.com\n---\nOpen Networkdng Softwvaro\n Open Networking Software\n\n\n  \uf097                               \uf097\n       \u25e6                               \u25e6\n       \u25e6                          \uf097\n  \uf097                                    \u25e6\n       \u25e6                          \uf097\n       \u25e6                               \u25e6\n  \uf097                               \uf097\n       \u25e6                               \u25e6\n       \u25e6                               \u25e6\n  \uf097                               \uf097\n       \u25e6                               \u25e6\n                                       \u25e6\n       \u25e6                          \uf097\n                                       \u25e6\n                                       \u25e6\n                                       \u25e6\n\n\n                           6/13/2024 Copyright USC/ISI. All rights reserved.  11\n---\nBxampk Swtch LahtArchltecuure\n Example: Switch Light Architecture\n\n\n                                            Big Network\n                                            Controllers\n\n\n\n\n\n    Open                                                                               OpenFlowAgent\n                                                                 CLI\n   Network\n     Linux\n                                Switch Light OS                           Indigo    Loxi\n\n\n   BSN Open\n\n\n                 ZTN\n               Loader    SSH     Fan       NTP   Syslog SNMP\n                               Control                              Indigo/ASIC Driver\n     BSN\n    Closed         LibC on Debian Wheezy Base Distribution              ASIC SDK\n\n\n   3rd Party  ONL Linux Kernel            I2C     GPIO  Device             ASIC\n                                                         Trees\n    Closed\n    Source\n           Switch Light is our Indigo OpenFlow Agent running on Open\n                    Network Linux on x86 or ASIC-based hardware.\n---\n   Exmpl:CORDArdhttecura\n     Example: CORD ArchitectureCentral Office Re-architected as a Datacenter (CORD)\n                   Residential                    Mobile                     Enterprise\n\n\n                                             XOS (Orchestrator)\n\n\n                     vOLT         Multicast         Overlay         Underlay        vRouter\n                    Control       Control           Control          Control        Control\n                                          ONOS Controller Cluster\n\n\n             CORD-Fabric      6712-32X         6712-32X        6712-32X         6712-32X\n             Open Source\n             SDN-based\nUnderlay     CLOS Networking\n\n\n                 6712-32X     6712-32X       6712-32X        6712-32X      6712-32X      6712-32X\n                 6712-32X     6712-32X       6712-32X        6712-32X      6712-32X      6712-32X  RouterMetro\n\n\n Overlay                        OVS            OVS            OVS            OVS           OVS", "start_char_idx": 4976, "end_char_idx": 10542, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c91ab7d-bd48-4606-997b-8ecd0f801d06": {"__data__": {"id_": "8c91ab7d-bd48-4606-997b-8ecd0f801d06", "embedding": null, "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "071db331-e5e6-4236-89d1-b34992c71198", "node_type": "4", "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "hash": "21b9474f0e2889360be54d1b2fda0bedfb6ef19efb47a5e55198945b366fcfd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "464c1cbc-38c6-47ce-b971-e47ceac8765f", "node_type": "1", "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "hash": "95031c5956a9ca01faadb0c40ec2d16c501226d98770a7f52d0171bf170dbc87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55377015-0536-4341-9cac-67abf41ea708", "node_type": "1", "metadata": {}, "hash": "6e1b96da55a3a81171c787e5a856cb227e043885648ab7c6420f45218c6c86c4", "class_name": "RelatedNodeInfo"}}, "text": "XOS (Orchestrator)\n\n\n                     vOLT         Multicast         Overlay         Underlay        vRouter\n                    Control       Control           Control          Control        Control\n                                          ONOS Controller Cluster\n\n\n             CORD-Fabric      6712-32X         6712-32X        6712-32X         6712-32X\n             Open Source\n             SDN-based\nUnderlay     CLOS Networking\n\n\n                 6712-32X     6712-32X       6712-32X        6712-32X      6712-32X      6712-32X\n                 6712-32X     6712-32X       6712-32X        6712-32X      6712-32X      6712-32X  RouterMetro\n\n\n Overlay                        OVS            OVS            OVS            OVS           OVS\n\n\n                               vSG             VNF           VNF           VNF            VNF\n                  R,E,M-       vSG             VNF           VNF           VNF            VNF\n                  Access       vSG            VNF            VNF           VNF            VNF\n\n\n                                                                                                            13\n---\nComponeno 6f CORD\n  Components of CORD\n                    Access      Subscrber       Internet       CDN        Monitoring\n                  a5 4 service  a5 a seivice asdservice                   aS d service\n                                                 XOS\n  Gellometet    VSG        VGON\n         OpenSlacMDocker\n                                                  Vin       Fabrc    Mulcos|     VOL      vRouler\n                                                           conirol    contol\n                                                                      ONOS\n                                                   6/13/2024 Copyright USC/ISI. All rights reserved.  14\n---\nBullding Bkcks &CORD\n  Building Blocks of CORD\n\n\n   \uf097 OpenStack\n       \u25e6 Cluster Management Suite\n       \u25e6 Internet as a service (IaaS)\n       \u25e6 Create and Provision VMs and VNet\n   \uf097 Open Network OS (ONOS)\n       \u25e6 Collection of Control App\n       \u25e6 Manage SW and HW Switches\n   \uf097 Everything OS (XOS)\n       \u25e6 A service control plane on top of back-end service\n       \u25e6 VM-hosted VNFs, container-based services, and SDN control\n       \u25e6 Everything as a service (XaaS)\n   \uf097 Docker\n       \u25e6 Deploy and Interconnect Services\n       \u25e6 Deploy CORD\n\n\n                                                  6/13/2024 Copyright USC/ISI. All rights reserved.  15\n---\nExampk:Open Netork Lintx\n Example: Open Network Linux\n\n\n  \uf097 A Linux distribution for bare metal switches\n  \uf097 Open-sourced build scripts, drivers from Switch Light\n  \uf097 Part of Open Compute Project (OCP)\n  \uf097 Project goals\n     \u25e6 Improve perception/de-risk bare metal\n     \u25e6 \u201cCrowd source\u201d larger Switch Light HCL\n     \u25e6 Released mid-January: Initial results\n  \uf097 Strong community response from ODMs, OCP\n     \u25e6 Accton self-supporting three new boxes, more ODMs\n       interested\n     \u25e6 Other vendors investigating ONL for their own purposes\n     \u25e6 Info: http://opennetlinux.org \u2013 under construction\n---\n   ONL\u2013Supported Hhandtaro\n    ONL                                     Supported Hardware\n             Mlnb                                                   5Pat  Dorc\n          opennetlinux org/hcl\n                                                                                          Under Construction?", "start_char_idx": 9796, "end_char_idx": 13187, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "55377015-0536-4341-9cac-67abf41ea708": {"__data__": {"id_": "55377015-0536-4341-9cac-67abf41ea708", "embedding": null, "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "071db331-e5e6-4236-89d1-b34992c71198", "node_type": "4", "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "hash": "21b9474f0e2889360be54d1b2fda0bedfb6ef19efb47a5e55198945b366fcfd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c91ab7d-bd48-4606-997b-8ecd0f801d06", "node_type": "1", "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "hash": "36e0e42186030ec04fe6d709b50d862d029d5c54964df2b70ebe9ea7deeceeee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d326130-2b77-4071-af15-f6b73c50fd6f", "node_type": "1", "metadata": {}, "hash": "6d18e1337883e159bf66825ae016f3975fccc2e45ca84051150e1f7a4883ce41", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 A Linux distribution for bare metal switches\n  \uf097 Open-sourced build scripts, drivers from Switch Light\n  \uf097 Part of Open Compute Project (OCP)\n  \uf097 Project goals\n     \u25e6 Improve perception/de-risk bare metal\n     \u25e6 \u201cCrowd source\u201d larger Switch Light HCL\n     \u25e6 Released mid-January: Initial results\n  \uf097 Strong community response from ODMs, OCP\n     \u25e6 Accton self-supporting three new boxes, more ODMs\n       interested\n     \u25e6 Other vendors investigating ONL for their own purposes\n     \u25e6 Info: http://opennetlinux.org \u2013 under construction\n---\n   ONL\u2013Supported Hhandtaro\n    ONL                                     Supported Hardware\n             Mlnb                                                   5Pat  Dorc\n          opennetlinux org/hcl\n                                                                                          Under Construction?\nOpen Network Linux    Home    Download    Documentation-  FAQ    community\nHardware Support                                                                                               \u2022  ONL Support is\nBecause ofthe HTML formatting,this page may be best viewed from\nhttp: (/opennetlinuxorg/hcl                                                                                       Pre-cursor to\nQuanta/IW Networks                                                                                                Switch Light\n Device                   Ports             CPU     Forwarding                       Support Status               Support\n QuantaMesh T1048-LB9     48*1G4x10G        P20z0   Broadcom BCM56534 (Firebolt 3)   Supported and Tested\n QuantaMesh T1048-LB9a    48*1G4x10G        P2020   Broadcom BCM56534 (Firebolt 3)   Supported and Tested\n QuantaMesh T3048-LY2     48*10G4x40G       P2020   Broadcom BCM56846 (Trident+)     Supported and Tested\nAccton/Edge-Core                                                                                               \u2022  Working on OCP\n Device                Ports             CPU     Forwarding                         Support Status                box from\n Accton AS4600-54T     4Bx1C4x1OG        PzOz0   Broadcom BCM56540 (Apolloz)        Supported and Tested\n Accton AS5G00-52X     48x1C4X1OG        P2Oz0   Broadcom BCM56846 (Trident+)       Supported and Tested          Interface Masters\n Accton AS5610-52X     4Bx1C4X1OG        P2Oz0   Broadcom BCM56846 (Trident+)       Supported and Tested          with x86 support\n AcclonAS5710-54X      48x10G6x40G       P2041   Broadcom BCM56854 (Trident2)       Supported and Tested\n Accton AS6700-32X     32*40G            P2041   Broadcom BCM56850 (Trident2)       Supported and Tested\nDNI/Agema\n Device         Ports               CPU      Forwarding                          Support Status\n AG-7448CU      48x10G4x40G         Pzozo     Broadcom BCM56845 (Trident)        Supported and Tested\n---\nOpen Nctworkdng History\n  Open Networking History\n                                                                                                                                                              CERTIFIEDGOLD\n                                                                                                                                                    Hewlett Pickro\n                                                                                                                                                           Ipp0aCt\n                                                                                                                                                              Googl\n                                                                                                                                                          bigswitch\n                                 OPEN                 OpEn                                                                                           Next-Gen NOS\n                               Onie                                 OpenNSL:\n                                                                    Broadcom          ONL)\n     OPEN                     Open Network                          ASIC APIs                           Open\n                                                                                                         Switch                                          OO(\n      Coinpule Pioleri       Install Environment       ONL                                  NTT                                                                         ONI\n                                 Xbig:Iswitch      Open Network      BROADCOM:                              Microsomi\n                                                                                                             Azure                                   STRATUM\n                                                   XK(bigswitch                                            ACS           C922               Open/R    Next-gen SDN\n      2013                                      2014                                       2015                              2016             2017        2018\n                                                  Juniper        f                 hp)       juniper                                                   BROADCOM\n   Accton  p WertQCTNetworkingOpen Wedge 40OCx11O0 FBOSSONL6-Pack               AltolineONL      QFX52OO               Wedge 100Telco Infra\n                                                                                                                        BackPack           Project        SDKLT        ONL\n                                                                                   6/13/2024              Copyright USC/ISI. All rights reserved.                            18\n---\nSmartNICs\n  SmartNICs\n     NIC    Arm  NiC + GPU       P4 programmable NIC              FPGA\n                                            Arm\n                                                    Programmability\n                            6/13/2024 Copyright USC/ISI. All rights reserved.", "start_char_idx": 12336, "end_char_idx": 18371, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d326130-2b77-4071-af15-f6b73c50fd6f": {"__data__": {"id_": "2d326130-2b77-4071-af15-f6b73c50fd6f", "embedding": null, "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "071db331-e5e6-4236-89d1-b34992c71198", "node_type": "4", "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "hash": "21b9474f0e2889360be54d1b2fda0bedfb6ef19efb47a5e55198945b366fcfd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55377015-0536-4341-9cac-67abf41ea708", "node_type": "1", "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}, "hash": "db42ba78e546cccef2f5aa70fa9733b05ca8ed518affda75d5ed9d3cc43a49fc", "class_name": "RelatedNodeInfo"}}, "text": "All rights reserved.                            18\n---\nSmartNICs\n  SmartNICs\n     NIC    Arm  NiC + GPU       P4 programmable NIC              FPGA\n                                            Arm\n                                                    Programmability\n                            6/13/2024 Copyright USC/ISI. All rights reserved.  19\n---\nReconfiH basedSmartNICs\n Reconfig HW based\n                    ALVEO\n           U280\n                                               intel\n                                   Intel @ N6OOo Acceleration Development Platform\n                           6/13/2024 Copyright USC/ISI. All rights reserved. 20\n---\n             Remoto Direct Memory Access\n              Remote Direct Memory Access\n\uf097 RDMA enable Network\n     \u25e6 Low and stable latency, e.g.,< 10us; High throughput,         RDMA app                     RDMA app\n        e.g. , 100Gbps; Low CPU                               g       RDMA verbs                    RDMA verbs\n        overhead                                                  TCP/IP                                 TCP/IP\n     \u25e6 Widely deployed in                                     1  NIC driver                             NIC driver\n        companies such as                                               RDMA                       RDMA\n        Microsoft, Alibaba,                                           transportIPDMA       DMA    transport\n        ByteDance                                                  Ethernet                           Ethernet\n\uf097 Network stack in NIC                                                              network\n                                                                                           Lossless\n     \u25e6 Processing in dedicated NIChardware\n     \u25e6 Bypass kernel\n     \u25e6 Zero copy\n\n\n                                                                                                                21\n---\n          Remote Direct Memory Access\n\u2756Remote\n    \u2013data transfers between nodes in a network\n\u2756Direct\n    \u2013no Operating System Kernel involvement in transfers\n    \u2013everything about a transfer offloaded onto Interface Card\n\u2756Memory\n    \u2013transfers between user space application virtual memory\n    \u2013no extra copying or buffering\n\u2756Access\n    \u2013send, receive, read, write, atomic operations\n---\n                  RDMA Benefits\n\n\n\u2756High throughput\n\u2756Low latency\n\u2756High messaging rate\n\u2756Low CPU utilization\n\u2756Low memory bus contention\n\u2756Message boundaries preserved\n\u2756Asynchronous operation\n---\n               RDMA Technologies\n\n\n\u2756InfiniBand \u2013 (41.8% of top 500 supercomputers)\n   \u2013 SDR 4x \u2013 8 Gbps\n   \u2013 DDR 4x \u2013 16 Gbps\n   \u2013 QDR 4x \u2013 32 Gbps\n   \u2013 FDR 4x \u2013 54 Gbps\n\u2756iWarp \u2013 internet Wide Area RDMA Protocol\n   \u2013 10 Gbps\n\u2756RoCE \u2013 RDMA over Converged Ethernet\n   \u2013 10 Gbps\n   \u2013 40 Gbps\n---\n              Uniqueness of RDMA stack\n                Uniqueness of RDMA stack\n\n\n\uf097 Network stack on RDMA NIC\n       (RNIC)\n       \uf0a8 Maintain massive connection-\n  Hostrelated states on RNIC                                                                           NIC\n    Connection\uf096 Memory-access relatedCompletion QueueCQECQE\n  Application buffer\uf096 page size, WQ length, \u2026                                                                           e.g., MLX maintains\n                                             WRITE WQESend QueueSENDWQE             DMA                Net             256B states for each\n             \uf096 Networking relatedQP                                               context            stack               RDMA connection\n                  \uf096 congestion window, recv next, IP address, \u2026(/include/linux/mlx4/qp.hRECV WQEReceive QueueRECV WQE        mlx4_qp_context)\n                                                                             Memory table                                    Still growing\u2026\n\n\n                                                                                                                                               25\n---\nLab 5 Prewew\n Lab 5 Preview\n\n\n \uf097 Modifying Linux Kernel Module\n \uf097 Read and understand the congestion\n   control\n \uf097 Fix/Break it to Not Back Off\n\n\n                          2024/6/13    26", "start_char_idx": 18030, "end_char_idx": 22190, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71cd826e-b8c3-4526-bbbc-7de280ec05cb": {"__data__": {"id_": "71cd826e-b8c3-4526-bbbc-7de280ec05cb", "embedding": null, "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bd63c09-df09-470f-a2c3-ea9783f6a8d8", "node_type": "4", "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}, "hash": "60dbd70a8c0bd516c0e8853a24eaea191d6cbfbbd7b53346b30d583f2c943811", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f87cf45d-0ab7-44a9-9034-81cba5fc860e", "node_type": "1", "metadata": {}, "hash": "708dbd7a0c705e3dbd4a8788be3b60e8ed82fe473be11808afac353d19350bd5", "class_name": "RelatedNodeInfo"}}, "text": "0EE 542Loctro & SlnskProcenort Cbud\n                                   EE 542\n        Lecture 8: Single Processor to Cloud\n        Internet and Cloud Computing\n\n\n        Young Cho\n        Department of Electrical Engineering\n        University of Southern California\n\n\n                                              1\n---\nMooras Law\n   Moore\u2019s Law\n      50,000,000,000\n                                                                                                                                                                                                                                                                                                                                                                        72-coteSPARC M7 _eonPhi Centriq 2400                                       GC? IPUIER Gionic\n                                                                                                                                                                                                                                                                                                                                               IBM z13 Storage Controller                                                                         care AMD\n      10,000,000,000                                                                                                                                                                                                                                                                                                                                                                                                                                  Apple\n                                                                                                                                                                                                                                                                                                                                             18-core Xeon Haswell-ES                                                                                Qualcomimn Snapdragon Bx SCX818O\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Medra Xavier SoC\n           5,000,000,000                                                                                                                                                                                                                                                                                                                             XDOXOne maln ScC                                                                                   HISilicon Kirin 980                        Apple A12 Bionie\n                                                                                                                                                                                                                                                                                                                                                        0| CCIL                                                                                        Hisiicon Kinn 740\n                                                                                                                                                                                                                                                                                                  Dual-core laniumB-core Xeon Nehalem-EX-Coma Kcon /4                                                                       Duai-cq88e98GPU CoreEoaconeTrgadiaee %CXe\n                                                                                                                                                                                                                                                                                                                                                                                                                           Ouio-cote                   GPUGT2 Core\n           1,000,000,000                                                                                                                                                                                                                                                                  Pentiuma               Presler             POWER6                                                             Apple A7 (Gual-cGre ARMGA \"mcbile SoC )Quad cure               Haswel\n                 500,000,000                                                                                                                                                                                                                                                                                                                                                      Quad)\n                                                                                                                                                                                                                                                                   Itarjur -Penthum =\n                                                                                                                                                                                                                                                                                     Mlanium MxckmeMadisom !   Mehf Blc                                         Duo ConraeDuo Wolidale 3M\n                                                                                                                                                                                                                                                                                                                                                          COm           Duo Allendale\n                 100,000,000                                                                                                                                                                                                                                                                     AMD K8                           enlum              Prescoit                 Cedar M\n  8                  50,000,000                                                                                                                                                                                                                               Penium                Nonhwood                             danom\n                                                                                                                                                                                                                                              Pentium               Willamette                        Pentium                  Tualalin\n                                                                                                                                                                                                                                 Pentium               Mobile Dixor                                                                                      AAM Ccrtex-49\n                                                                                                                                                                                                                                                                AMD K?                          Pentium III Copperming\n 1                                                                                                                                                                                                                                                                       AMDKG-\n                     10,000,000                                                                                                                                                                                                                  AMD\n                         5,000,000                                                                                                                                                                                PentiumPentiumProsAm8 Ksmath\n                                                                                                                                                                                                                                              SA110\n                          1,000,000                                                                                                                                                    Intel 80486                     R4COO\n                                500,000                                                                                                                                         32 pil                                               AAM7O0\n                                                                                                                                                              Untel 803864                                 ARM 3\n                                                                                                                                           Motorola 68020 _                                         PEGYE\n                                100,000                                                                                                             Intel 80286\n                                   50,000                                                                                                                          Intel 80186\n                                                                                                                   Intel 8O8G              Intel 808B                                       'AM\n                                    10,000                              TMS IOC0                       Zilog 280                 Motorg 3                       650816N8o16\n                                         5,000                     Intel 2008                  RCA 18028080nicl 80 85\n                                       1,000                       Intel 400\"219721974197619781980198219841986198819901992199419961998                                                                                                                                                       8200220042006200820102012201420162018\nData source: Wikipedia Inttps //en wikipedia org/wiki/ Transistor_count)\nThe data visualization is available at OurWorldinData org:There you find more visualizations and research on this topic_\n---\n  CPU Saalilng\n    CPU Scaling\n 107                                                                                                                      Transistors\n106                                                                                                                        (thousands)\n105                                                                                                                       Single-Thread\n                                                                                                                          (SpecINT x 103)\n                                                                                                                                         Performance\n104\n 103                                                                                                                       Frequency (MHz)\n102                                                                                                                       Typical Power\n                                                                                                                           (Watts)\n10'                                                                                                                        Number of\n                                                                                                                           Logical Cores\n100\n     1970                   1980                  1990                  2000                   2010                  2020\n                                                             Year\n         Crg nal data UP   Iha year 2010 collecied and platted by M. Horowiz  Labanto    Shacran      Olukcin     Hanmond           Batlen\n         Now plat and dala ccllectad Iar 2010 2017 by  Rupr\n         https:{ {www kariruppnet/2018/02/42 years of-microprocessor-trend data/\n                                                                       6/13/2024 Internetworking and Distributed Systems                           3\n---\nParalkellsm\n Parallelism", "start_char_idx": 0, "end_char_idx": 13341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f87cf45d-0ab7-44a9-9034-81cba5fc860e": {"__data__": {"id_": "f87cf45d-0ab7-44a9-9034-81cba5fc860e", "embedding": null, "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bd63c09-df09-470f-a2c3-ea9783f6a8d8", "node_type": "4", "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}, "hash": "60dbd70a8c0bd516c0e8853a24eaea191d6cbfbbd7b53346b30d583f2c943811", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71cd826e-b8c3-4526-bbbc-7de280ec05cb", "node_type": "1", "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}, "hash": "dd39ad075911352c37b21b60e4c6a26d5ca0c2cbd6ec844fb4418a9cb10ac1fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b25b5c0-8eb7-435c-95d5-88448f1b1cb0", "node_type": "1", "metadata": {}, "hash": "8db91680107ffe03df3a2bde347d043cfd61db9a73347a809ba5789be8f31faa", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Bit Level\n      \u25e6 Parallel Circuit Design\n  \uf097 Instruction Level\n      \u25e6 Microarchitecture\n      \u25e6 Example: Pipelining and Superscalar\n  \uf097 Thread/Task Level\n      \u25e6 Independent Processes\n      \u25e6 Multiple cores, register files, and shared memory\n  \uf097 Application Level\n      \u25e6 Independent Programs\n      \u25e6 Multiple cores and Multiple chips\n\n\n                                                 6/13/2024 Internetworking and Distributed Systems  4\n---\nInstuctkon-Level Parallelism (ILP)\n                                  InstructionLavel Paralklbsm (LP)\n \uf097 Parallelism at the machine-instruction level\n \uf097 The processor can re-order, pipeline\n    instructions, split them into microinstructions,\n    do aggressive branch prediction, etc.\n \uf097 Instruction-level parallelism enabled rapid\n    increases in processor speeds\n\n\n                                                               5\n---\nThnead-Level Parallelism (TLP)\n                              ThreadLswel Paralkelksm (P)\n \uf097 This is parallelism on a more coarser scale\n \uf097 Server can serve each client in a separate\n    thread (Web server, database server)\n \uf097 A computer game can do AI, graphics, and\n    physics in three separate threads\n \uf097 Single-core superscalar processors cannot fully\n    exploit TLP\n \uf097 Multi-core architectures are the next step in\n    processor evolution: explicitly exploiting TLP\n\n\n                                                           6\n---\nApplkaadkn Level Paralkelbsm\nApplication Level Parallelism\n\n\n \uf097 Multicore Processor\n    \u25e6 All processors are on the same chip\n    \u25e6 Multi-core processors are MIMD\n       \uf096 Multiple Instructions Multiple Data\n    \u25e6 Extensive Shared Memory Management\n \uf097 Clustered Computers over Network\n    \u25e6 Scales based on the number of parallel programs\n    \u25e6 Potential for tighter integration - difficult to achieve\n\n\n                                                                7\n---\nTho Ultmata Goal\nThe Ultimate Goal\n\n\n \uf097 Inifinite Scalability\n      \u25e6 More HW => Higher Performance\n \uf097 Difficulty in Parallelization\n      \u25e6 Need to parallelize a single thread into\n         independent threads\n      \u25e6 Limits dependent on the algorithm\n      \u25e6 Or is there a limit??\n\n\n                                                 6/13/2024 Internetworking and Distributed Systems  8\n---\n            UnlprocessorVew\n             Uniprocessor View\n              \uf097 Performance depends heavily on memory hierarchy\n              \uf097 Time spent by a program\n                 \u25e6 Timeprog(1) = Busy(1) + Data Access(1)\n                 \u25e6 Divide by cycles to get CPI equation\n              \uf097 Data access time can be reduced by:\n                 \u25e6    Optimizing machine                          P\n                    \uf096 bigger caches, lower latency... 100        Data-local\n\n\n                 \u25e6    Optimizing program                          Busy-useful\n                    \uf096 temporal and spatial locality    75\n\n\nTime (s)50\n\n\n                                                       25\n---\n       Uniprocessor\n        Uniprocessor vs. MultiprocessorMuldprocesor\n\n\n 100                         100                       Synchronization\n                                                       Data-remote             Data-local\n                                                       Busy-overhead           Busy-useful\n   75                          75\n)s(                         )s(\n\n\nemiT50                      emiT50\n   25                          25\n\n\n                                        P 0         P 1          P 2          P 3\n\n\n           (a) Sequential                    (b) Parallel with four processors\n---\nMuldprocessor\nMultiprocessor\n\n\n \uf097 A collection of communicating processors\n     \u25e6 Goals: balance load, reduce inherent communication and extra work\n\n\n                         P    P      ...      P\n \uf097 A multi-cache, multi-memory system\n     \u25e6 Role of these components essential regardless of programming model\n     \u25e6 Prog. model and comm. abstr. affect specific performance tradeoffs\n\n\n                                       ...\n                         P       P            P\n---\nParalkel Archltecuure\n Parallel Architecture\n\n\n \uf097 Parallel Architecture\n    \u25e6 Computer Architecture\n    \u25e6 Communication Architecture\n \uf097 Small-scale shared memory\n    \u25e6 Extend the memory system to support multiple\n       processors\n    \u25e6 Good for multiprogramming throughput and parallel\n       computing\n    \u25e6 Allows fine-grain sharing of resources\n \uf097 Characterization\n    \u25e6 Naming\n    \u25e6 Synchronization\n    \u25e6 Performance\n---\nCharactertaton\nCharacterization", "start_char_idx": 13346, "end_char_idx": 17892, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b25b5c0-8eb7-435c-95d5-88448f1b1cb0": {"__data__": {"id_": "6b25b5c0-8eb7-435c-95d5-88448f1b1cb0", "embedding": null, "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bd63c09-df09-470f-a2c3-ea9783f6a8d8", "node_type": "4", "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}, "hash": "60dbd70a8c0bd516c0e8853a24eaea191d6cbfbbd7b53346b30d583f2c943811", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f87cf45d-0ab7-44a9-9034-81cba5fc860e", "node_type": "1", "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}, "hash": "2718126918c57b9ae4ee55135cb72e693b718b22725ed76293d06fca86f8c69e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ce10103-d065-4e0a-b40d-6473a662ef54", "node_type": "1", "metadata": {}, "hash": "094311a91344056605223810d10d6d9bff9d67065a7e14872b7672844faf2cde", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 A collection of communicating processors\n     \u25e6 Goals: balance load, reduce inherent communication and extra work\n\n\n                         P    P      ...      P\n \uf097 A multi-cache, multi-memory system\n     \u25e6 Role of these components essential regardless of programming model\n     \u25e6 Prog. model and comm. abstr. affect specific performance tradeoffs\n\n\n                                       ...\n                         P       P            P\n---\nParalkel Archltecuure\n Parallel Architecture\n\n\n \uf097 Parallel Architecture\n    \u25e6 Computer Architecture\n    \u25e6 Communication Architecture\n \uf097 Small-scale shared memory\n    \u25e6 Extend the memory system to support multiple\n       processors\n    \u25e6 Good for multiprogramming throughput and parallel\n       computing\n    \u25e6 Allows fine-grain sharing of resources\n \uf097 Characterization\n    \u25e6 Naming\n    \u25e6 Synchronization\n    \u25e6 Performance\n---\nCharactertaton\nCharacterization\n\n\n \uf097 Naming\n    \u25e6 Global physical address space\n    \u25e6 Global virtual address space\n    \u25e6 Segmented shared address space\n \uf097 Synchronization\n    \u25e6 Local and Shared Memory\n    \u25e6 BUS and Network Latencies\n \uf097 Performance of Parallel Algorithms\n    \u25e6 Total Latency\n    \u25e6 Total Bandwidth\n    \u25e6 Often not the processor\n---\n        Memory Confguradons\n         Memory Configurations\n\n\nP1                 Pn                                             Scale\n        Switch\n\n\n      (Interleaved)First-level $P1                       Pn\n\n\n      (Interleaved)             $                        $\n      Main memory\n                                    Interconnection network\n\n\n   Shared Cache                  Mem                 Mem\n\n\n                            Centralized Memory\n                            Dance Hall, Uniform MA          P1                              Pn\n\n\n                                                   Mem      $                       Mem      $\n\n\n                                                                Interconnection network\n\n\n                                                 Distributed Memory (Non-Uniform Mem Access)\n---\nShared Cacho\n\uf097Shared Cache\n   Alliant FX-8\n    \u25e6 early 80\u2019s\n    \u25e6 eight 68020s with x-bar to 512 KB interleaved cache\n\uf097 Encore & Sequent\n    \u25e6 first 32-bit micros (N32032)\n    \u25e6 two to a board with a shared cache\n\n\n                       P1                 Pn\n                               Switch\n\n\n                             (Interleaved)Cache\n\n\n                             (Interleaved)\n                             Main Memory\n---\n  Adant8es\n   Advantages\n\uf097 Single Cache\n    \u25e6 Only one copy of any cached block\n\n\n\uf097 Fine-Grain Sharing                     P1             Pn\n                                               Switch\n    \u25e6 Cray Xmp has shared registers!          (Interleaved)\n\uf097 Potential for Positive Interference          Cache\n    \u25e6 One proc pre-fetches data for          Main Memory(Interleaved)\n      another\n\uf097 Smaller Total Storage\n    \u25e6 Only one copy of code/data\n\uf097 Can share data within a line\n    \u25e6 Long lines without false sharing\n---\nDtad1anagcs\n Disadvantages\n\n\n\uf097 Fundamental BW limitation\n\uf097 Increases latency of all accesses\n\n\n                                         P1             Pn\n   \u25e6 Cross-bar (Multiple ports)                Switch\n   \u25e6 Larger cache                             (Interleaved)Cache\n   \u25e6 L1 hit time determines proc. Cycle\n\n\n\uf097 Potential for negative interference         (Interleaved)\n                                             Main Memory\n   \u25e6 one proc flushes data needed by\n      another\n\uf097 Many L2 caches are shared today\n\uf097 CMP makes cache sharing attractive\n---\n    BrBased Symmetric Shared Memory\n                                   Bus-Based Symeuk Shared Memory\n                          P1                                     Pn\n\n\n                          $                                      $\n                                            Bus\n\n\n                               Mem                       I/O devices\n\n\n\uf097 Dominate the server market\n    \u25e6 Building blocks for larger systems; arriving to desktop\n\uf097 Attractive as throughput servers and for parallel programs\n    \u25e6 Fine-grain resource sharing\n    \u25e6 Uniform access via loads/stores\n    \u25e6 Automatic data movement and coherent replication in caches\n    \u25e6 Cheap and powerful extension\n\uf097 Normal uniprocessor mechanisms to access data\n    \u25e6 Key is extension of memory hierarchy to support multiple processors\n\uf097 Chip Multiprocessors\n---\n Caches aro Crltkal 6r Ferforance\n  Caches are Critical for Performance\n\n\n\uf097 Reduce average latency\n   \u25e6 automatic replication closer to\n     processor\n\uf097 Reduce average bandwidth\n\uf097 Data is logically transferred from\n  producer to consumer to\n  memory\n   \u25e6 store reg --> mem\n   \u25e6 load reg <-- mem                  P  P  P\n\uf097 Many processors can shared data\n  efficiently\n\uf097 What happens when store & load\n  are executed on different\n  processors?\n---\nCacha Coherenco\n Cache Coherence", "start_char_idx": 16986, "end_char_idx": 21877, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ce10103-d065-4e0a-b40d-6473a662ef54": {"__data__": {"id_": "8ce10103-d065-4e0a-b40d-6473a662ef54", "embedding": null, "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bd63c09-df09-470f-a2c3-ea9783f6a8d8", "node_type": "4", "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}, "hash": "60dbd70a8c0bd516c0e8853a24eaea191d6cbfbbd7b53346b30d583f2c943811", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b25b5c0-8eb7-435c-95d5-88448f1b1cb0", "node_type": "1", "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}, "hash": "9c3ab6f150aa48b9713f3e445a1fabaaab1b48dc7c4e02d45ea73544b4dbb98d", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Reduce average latency\n   \u25e6 automatic replication closer to\n     processor\n\uf097 Reduce average bandwidth\n\uf097 Data is logically transferred from\n  producer to consumer to\n  memory\n   \u25e6 store reg --> mem\n   \u25e6 load reg <-- mem                  P  P  P\n\uf097 Many processors can shared data\n  efficiently\n\uf097 What happens when store & load\n  are executed on different\n  processors?\n---\nCacha Coherenco\n Cache Coherence\n\n\n  \uf097 Caches play key role in all cases\n     \u25e6 Reduce average data access time\n     \u25e6 Reduce bandwidth demands placed on shared\n        interconnect\n  \uf097 Private processor caches create a problem\n     \u25e6 Copies of a variable can be present in multiple caches\n     \u25e6 A write by one processor may not become visible\n     \u25e6 Accessing stale value in their caches\n     \u25e6 Cache coherence problem\n  \uf097 What do we do about it?\n     \u25e6 Organize the mem hierarchy to make it go away\n     \u25e6 Detect and take actions to eliminate the problem\n---\nArchitecural Bulldlng Blcks\nArchitectural Building Blocks\n\n\n \uf097 Bus Transactions\n   \u25e6 fundamental system design abstraction\n   \u25e6 single set of wires connect several devices\n   \u25e6 bus protocol: arbitration, command/addr, data\n   \u25e6 Every device observes every transaction\n \uf097 Cache block state transition diagram\n   \u25e6 FSM specifying how disposition of block\n     changes\n   \u25e6 invalid, valid, dirty\n---\n Desln Chokes\n  Design Choices\n\n\n\uf097 Cache Controller                  ProcessorLd/St\n    \u25e6 Updates state of blocks in\n      response to processor and            Cache Controller\n      snoop events                           State Tag Data\n    \u25e6 Generates bus transactions                      \u00b0 \u00b0 \u00b0\n\uf097 Action Choices\n    \u25e6 Write-through vs. Write-back\n    \u25e6 Invalidate vs. Update            Snoop\n---\nMul-core CPU chip\n                 Multicora CPU chip\n\uf097 All multiprocessor concepts apply\n\uf097 The cores fit on a single processor socket\n\uf097 Also called CMP (Chip Multi-Processor)\n\n\n         c          c         c          c\n         o          o         o          o\n         r          r         r          r\n         e          e         e          e\n\n\n         1          2         3          4\n\n\n                                              23\n---\nWy Muldpk Processors\n Why Multiple Processors\n\n\n  \uf097 Moore's Law in CMOS\n  \uf097 Deeply Pipelined circuits\n     \u25e6 Large size processors\n     \u25e6 Difficult hardware design and verification\n     \u25e6 Large design teams necessary\n  \uf097 Many Dumb But Useful Applications\n     \u25e6 Many new applications are multithreaded\n     \u25e6 General trend in computer architecture\n  \uf097 Marketing Strategy\n     \u25e6 Increased number of processors\n     \u25e6 Potential for instantaneous high performance\n\n\n                                                     24\n---\n      Todys CudApplkatkn\n          Today's Cloud ApplicationMesh                                                                                               DX\n                                                               OreateDcplay                  jdit Quve}                      Pokaone\n                                            PolvgotsPolygon UNsSubiv Surfaces\n                                          Moddirg                                                        6/2              Fe#?\n                                                PoluonsSubdv:DelolmatrAnnaborDunac:Renderng _PanEileci:\n\uf097 Database servers                              Viewv             LicntinoShowPareks\n                                                   Vanter\n                                                   Edgadi1166211662\n                                                   Fecod:7008           7808\n                                                   Trla:\n\uf097 Web servers (Web                                 Uva:\n             commerce)                                                                                                                    Each can\n                                                                                                                                          run on its\n                                                                                              perep                                       own core\n\uf097 Compilers                                     100   200 300 400 500 600Joo1.0o  70n0            70n0    HJDF(No Character Set\n\uf097 Multimedia applications                   Sekclby objecl lype\n\uf097 Scientific applications,                                 5\n             CAD/CAM                                       Srhrem\n\uf097 In general, applications with                            Se\n             Thread+ level parallelism\n             (as opposed to instruction-\n             level parallelism)\n\n\n                                                                                                                                                      25", "start_char_idx": 21472, "end_char_idx": 26270, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7cac62de-4ede-4577-a705-381ae930d366": {"__data__": {"id_": "7cac62de-4ede-4577-a705-381ae930d366", "embedding": null, "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "744d4679-5374-4bda-97d2-52d7af729f75", "node_type": "4", "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "hash": "05f5c45a23b2c03f7cdfe133fb6bed89d8bf8e513b8837faf531c9da59125009", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7bb57b98-1862-4d20-95e6-b9f11e979f28", "node_type": "1", "metadata": {}, "hash": "4e56c1fd2ec0a8e2dbfad9cd56a0b69d35923d0425d1ec7a3725b130ccfd191d", "class_name": "RelatedNodeInfo"}}, "text": "0EE 542Lecure 9Ckud Compudng\n                            EE 542\n       Lecture 9: Cloud Computing\n       Internet and Cloud Computing\n\n\n       Young Cho\n       Department of Electrical Engineering\n       University of Southern California\n\n\n                                             1\n---\n       Wat Is Cloud Computng?\n       What is Cloud Computing?\n\uf097 Cloud computing is a model for enabling shared\n  convenient, on-demand network access to a\n  pool of configurable computing resources (e.g.,\n  networks, servers, storage, applications, and\n  services) [Mell_2009], [Berkely_2009].\n\uf097 It can be rapidly provisioned and released with\n  minimal management effort.\n\uf097 It provides high level abstraction of computation\n  and storage model.\n\uf097 It has some essential characteristics, service\n  models, and deployment models.\n\n\n                                                     2\n---\nEssental Characteristcs\nEssential Characteristics\n\n\n \uf097 On-Demand Self Service:\n   \u25e6 A consumer can unilaterally provision\n     computing capabilities, automatically without\n     requiring human interaction with each\n     service\u2019s provider.\n \uf097 Heterogeneous Access:\n   \u25e6 Capabilities are available over the network\n     and accessed through standard mechanisms\n     that promote use by heterogeneous thin or\n     thick client platforms.\n\n\n                                                    3\n---\nEssential Characteristcs (cont;)\nEssential Characteristics (cont.)\n\n\n \uf097 Resource Pooling:\n    \u25e6 The provider\u2019s computing resources are pooled to\n      serve multiple consumers using a multi-tenant model.\n    \u25e6 Different physical and virtual resources dynamically\n      assigned and reassigned according to consumer\n      demand.\n \uf097 Measured Service:\n    \u25e6 Cloud systems automatically control and optimize\n      resources used by leveraging a metering capability at\n      some level of abstraction appropriate to the type of\n      service.\n    \u25e6 It will provide analyzable and predictable\n      computing platform.\n\n\n                                                             4\n---\nService Models\nService Models\n\n\n \uf097 Cloud Software as a Service (SaaS):\n    \u25e6 The capability provided to the consumer is to use\n      the provider\u2019s applications running on a cloud\n      infrastructure.\n    \u25e6 The applications are accessible from various\n      client devices such as a web browser (e.g., web-\n      based email).\n    \u25e6 The consumer does not manage or control the\n      underlying cloud infrastructure including network,\n      servers, operating systems, storage,\u2026\n    \u25e6 Examples: Caspio, Google Apps, Salesforce,\n      Nivio, Learn.com.\n\n\n                                                          5\n---\nServce Models (cont;)\nService Models (cont.)\n\n\n\uf097 Cloud Platform as a Service (PaaS):\n   \u25e6 The capability provided to the consumer is to\n     deploy onto the cloud infrastructure consumer-\n     created or acquired applications created using\n     programming languages and tools supported by the\n     provider.\n   \u25e6 The consumer does not manage or control the\n     underlying cloud infrastructure.\n   \u25e6 Consumer has control over the deployed\n     applications and possibly application hosting\n     environment configurations.\n   \u25e6 Examples: Windows Azure, Google App.\n\n\n                                                       6\n---\nService Models (cont.)\n\n\n\uf097 Cloud Infrastructure as a Service (IaaS):\n   \u25e6 The capability provided to the consumer is to\n     provision processing, storage, networks, and other\n     fundamental computing resources.\n   \u25e6 The consumer is able to deploy and run arbitrary\n     software, which can include operating systems and\n     applications.\n   \u25e6 The consumer does not manage or control the\n     underlying cloud infrastructure but has control over\n     operating systems, storage, deployed applications, and\n     possibly limited control of select networking\n     components (e.g., host firewalls).\n   \u25e6 Examples: Amazon EC2, GoGrid, iland, Rackspace\n     Cloud Servers, ReliaCloud.\n\n\n                                                             7\n---\nServce Models (cont:)\n Service Models (cont.)\n                                    Clients\n                             User           Machine\n                           Interface        Interface\n                             Application\n                         Components         Services\n                                Platform\n                        Compute     Network    Storage\n                           Infrastructure\n                                   Servers\n   Service Model at a glance: Picture From http://en.wikipedia.org/wiki/File:Cloud_Computing_Stack.svg\n\n\n                                                                                   8\n---\nTes df Ckud\nTypes of Cloud\n\n\n \uf097 Private Cloud\n    \u25e6 The cloud is operated solely for an organization.\n      It may be managed by the organization or a third\n      party and may exist on premise or off premise.\n \uf097 Community Cloud (Federated)\n    \u25e6 The cloud infrastructure is shared by several\n      organizations and supports a specific community\n      that has shared concerns.\n    \u25e6 It may be managed by the organizations or a third\n      party and may exist on premise or off premise\n---\nTypes of Cloud", "start_char_idx": 0, "end_char_idx": 5230, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7bb57b98-1862-4d20-95e6-b9f11e979f28": {"__data__": {"id_": "7bb57b98-1862-4d20-95e6-b9f11e979f28", "embedding": null, "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "744d4679-5374-4bda-97d2-52d7af729f75", "node_type": "4", "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "hash": "05f5c45a23b2c03f7cdfe133fb6bed89d8bf8e513b8837faf531c9da59125009", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7cac62de-4ede-4577-a705-381ae930d366", "node_type": "1", "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "hash": "12107f272a4a85a51ec00152b9f0a8995a2a7e1147e1c7b486401f264aa54a4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c73f5131-7493-4ff0-a4c4-7ef674d0b98e", "node_type": "1", "metadata": {}, "hash": "d1e9694a3d8a1c38d7829b8350c22ea17a68aa6511782ee24cf6855f02999f04", "class_name": "RelatedNodeInfo"}}, "text": "7\n---\nServce Models (cont:)\n Service Models (cont.)\n                                    Clients\n                             User           Machine\n                           Interface        Interface\n                             Application\n                         Components         Services\n                                Platform\n                        Compute     Network    Storage\n                           Infrastructure\n                                   Servers\n   Service Model at a glance: Picture From http://en.wikipedia.org/wiki/File:Cloud_Computing_Stack.svg\n\n\n                                                                                   8\n---\nTes df Ckud\nTypes of Cloud\n\n\n \uf097 Private Cloud\n    \u25e6 The cloud is operated solely for an organization.\n      It may be managed by the organization or a third\n      party and may exist on premise or off premise.\n \uf097 Community Cloud (Federated)\n    \u25e6 The cloud infrastructure is shared by several\n      organizations and supports a specific community\n      that has shared concerns.\n    \u25e6 It may be managed by the organizations or a third\n      party and may exist on premise or off premise\n---\nTypes of Cloud\n\n\n \uf097 Public Cloud\n   \u25e6 The cloud infrastructure is made available to\n      the general public or a large industry group\n      and it is owned by an organization selling\n      cloud services.\n \uf097 Hybrid Cloud\n   \u25e6 The cloud infrastructure is a composition of\n      two or more         clouds (private, community, or\n      public).\n---\n                 Hybrid\n     Privatel\n     Internal                  Publicl\n                              Extemal\n                                              The Cloud\nOn Premises   Inter nal                  Off Premises   Third Party\n                     Cloud Computing Types                         ccjY-54].bySum Johnston\n---\nAdvantages of Cloud Computing\n \u26ab Cloud computing do not need high quality\n   equipment for user, and it is very easy to\n   use.\n \u26ab Provides dependable and secure data\n   storage center.\n \u26ab Reduce run time and response time.\n \u26ab Cloud is a large resource pool that you can\n   buy on-demand service.\n \u26ab Scale of cloud can extend dynamically\n   providing nearly infinite possibility for users\n   to use internet.\n---\nInfrastrucuuna 2s a Serwkce\n  Infrastructure as a Service\n\n\n    \uf097 A category of cloud services which provides capability to provision\n              processing, storage, intra-cloud network connectivity services, and\n              other fundamental computing resources of the cloud infrastructure.\n\n\n                                                                                                                                              Source- [ITU \u2013Cloud Focus Group]\n                                                                                           Cloud Clients\n                                                                Web brcwser; mcbile app_tnin client; terminaemu  tor;\n                                                       1          CRM; Email, virtual desktopSaaS                              cmmunication;\n                                                                                                      games\n                                                         7                                              Paas\n                                                                      Executionruntimedatajasewe? server,clevelcpment tcc\n                                                      1                                                  laaS\n                                                                       Virtual machines, servers, storage lcadpalancersnetwcr_\n                                                                                  Diagram Source: Wikipedia\n---\nHtshltshts &fbaS\n Highlights of IaaS\n\n\n  \uf097 On demand computing resources\n     \u25e6 Eliminate the need of far ahead planning\n  \uf097 No up-front commitment\n     \u25e6 Start small and grow as required\n     \u25e6 No contract, Only credit card!\n  \uf097 Pay for what you use\n  \uf097 No maintenance\n  \uf097 Measured service\n  \uf097 Scalability\n  \uf097 Reliability\n---\nEhstk\nElastic Compute Cloud (EC2)Compute Clud (EC2\n\n\n \u26ab Amazon Elastic Compute Cloud (EC2) is a web\n   service that provides resizeable computing\n   capacity that one uses to build and host different\n   software systems.\n \u26ab Designed to make web-scale computing easier for\n   developers.\n \u26ab A user can create, launch, and terminate server\n   instances as needed, paying by the hour for active\n   servers, hence the term \"elastic\".\n    \u26ab Provides scalable, pay as-you-go compute capacity\n    \u26ab Elastic - scales in both direction\n---\nEC2 Concepts\n            EC2Concepts\n\uf097 AMI & Instance\n\uf097 Region & Zones\n\uf097 Storage\n\uf097 Networking and Security\n\uf097 Monitoring\n\uf097 Auto Scaling\n\uf097 Load Balancer\n---\n   Amazon Machlne Ima8es (AMI)\n   Amazon Machine Images (AMI)\n\n\n    \u26ab Is an immutable representation of a set of disks that contain an operating\n        system, user applications and/or data.\n    \u26ab From an AMI, one can launch multiple instances, which are running copies\n        of the AMI.\n           Launch\n          different             Large\n          instance\n           types               Instance\n                                                 High-CPU\n                                                Extra LargeInstance\nTemplate(AMI)                                                      High-Memory\n                                                                    Double Extra\n                                                                   Large Instance\n---\nAMl ad Instnco\nAMI and Instance", "start_char_idx": 4054, "end_char_idx": 9659, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c73f5131-7493-4ff0-a4c4-7ef674d0b98e": {"__data__": {"id_": "c73f5131-7493-4ff0-a4c4-7ef674d0b98e", "embedding": null, "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "744d4679-5374-4bda-97d2-52d7af729f75", "node_type": "4", "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "hash": "05f5c45a23b2c03f7cdfe133fb6bed89d8bf8e513b8837faf531c9da59125009", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7bb57b98-1862-4d20-95e6-b9f11e979f28", "node_type": "1", "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "hash": "3c15a85cc0989832bba650436c4bd16b9c87be85ca9f29424298fa7fad09b14a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1e2a36c-28ae-4fb7-9700-7e58853ce4fb", "node_type": "1", "metadata": {}, "hash": "7f30113e0602a4fdf471f0430ba843e528321735819ec69ce85b39d86e53aff9", "class_name": "RelatedNodeInfo"}}, "text": "\u26ab Is an immutable representation of a set of disks that contain an operating\n        system, user applications and/or data.\n    \u26ab From an AMI, one can launch multiple instances, which are running copies\n        of the AMI.\n           Launch\n          different             Large\n          instance\n           types               Instance\n                                                 High-CPU\n                                                Extra LargeInstance\nTemplate(AMI)                                                      High-Memory\n                                                                    Double Extra\n                                                                   Large Instance\n---\nAMl ad Instnco\nAMI and Instance\n\n\n \uf097 Amazon Machine Image (AMI)\n     \u25e6 Software configuration templates\n     \u25e6 Operating System, Application Server, and\n       Applications\n \uf097 Instance is an AMI running on virtual servers\n     \u25e6 Type offers different compute and memory facilities\n                                                                Instance\n                                      Ami                    Host compute\n                                                                Instance\n                                             Ljunchinstancos\n                                                 any type       Instance\n                                                             Host computee\n                                                        Diagram Source: http://docs.aws.amazon.com\n---\nType         CPU                     Memory    Local Storage       Platform   I/O       Name\nSmall          EC2 Compute            1.7 GB   160 GB instance     32-bit     Moderate   mi.small\n             Unit (1 virtual core             storage (150 GB\n             with    EC2                       plus 10 GB root\n             Compute Unit)                     partition)\nLarge          EC2 Compute           7.5 GB    850 GB instance     64-bit     High       m1.large\n             Units (2 virtual cores           storage (2x 420 GB\n             with 2 EC2                        plus 10 GB root\n              Compute Units                    partition)\n             each)\nExtra Large  8 EC2 Compute           15 GB      690 GB instance    64-bit     High      mI.xlarge\n             Units (4 virtual cores           storage (4 x 420 GB\n             with 2 EC2                        plus 10 GB root\n              Compute Units                   partition)\n             each)\nMicro        Up to 2 EC2             613 MB    None (use Amazon    32-bit or  Low       t1.micro\n             Compute Units (for                EBS volumes for     64-bit\n             short periodic                   storage)\n              bursts)\nHigh-CPU     5EC2 Compute             1.7 GB   350 GB instance     32-bit     Moderate  clmedium\nMedium       Units (2 virtual cores           storage (340 GB\n             with 2.5 EC2                      plus 10 GB root\n             Compute Units                     partition)\n             each)\n---\nRedkn md Zoncs\n Region and Zones\n\n\n  \uf097 Data centers in different Regions across the globe\n  \uf097 An Instance can be launched in different Regions\n     \u25e6 Depending on the need\n     \u25e6 Closer to specific customer\n     \u25e6 Meet legal or other requirements\n  \uf097 Each Region has a set of Zones\n     \u25e6 Zones are isolated from failure in other zones\n     \u25e6 Low latency connectivity between zones in the same region\n---\nStor8Storage\n\n\n    \uf097 Amazon EC2 provides three type of storage option\n          \u25e6 Amazon EBS\n          \u25e6 Amazon S3\n          \u25e6 Instance Storage\n                               Instance                                    Snapshot\n                                                                             Bucket\n                               Instance B\n                 epnemeralc ephemerailepnemeralz ephemeral3\n                             Instance Store\n                          Host Computer                      Amazon EBS  Amazon S3\n                                                                                  Diagram Source: http://docs.aws.amazon.com\n---\nEastk Bbck Store(EBS) volume\nElastic Block Store(EBS) volume\n\n\n \u26ab An EBS volume is a read/write disk that can be created by an AMI\n    and mounted by an instance.\n \u26ab Volumes are suited for applications that require a database, a file\n    system, or access to raw block-level storage.\n             Instance                                    Instance\n                  EBS Volume                        New EBSVolume\n                     Create\n                   snapshot                  Create\n                                            volume\n                            EBS Snapshot\n                            in Amazon 53\n---\nAmazon $3\nAmazon S3\n\n\n \u26ab Simple Storage Service\n   \u26ab Service Oriented Architecture\n   \u26ab Provides online storage using web services.\n   \u26ab Allows read, write and delete permissions on\n      objects.\n   \u26ab Specific messaging interface\n---\nAmazon SimpleDB\n               AmazonSlmpkDB\n\u26ab Highly available\n\u26ab Flexible, and scalable\n\u26ab Non-relational data store\n\u26ab Offloads the work of database\n   administration.\n\u26ab Creates and manages multiple\n   geographically distributed replicas\n\u26ab Fees based on resources consumed in\n   data storage and query rates\n---\nNetworking and Security", "start_char_idx": 8918, "end_char_idx": 14250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1e2a36c-28ae-4fb7-9700-7e58853ce4fb": {"__data__": {"id_": "d1e2a36c-28ae-4fb7-9700-7e58853ce4fb", "embedding": null, "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "744d4679-5374-4bda-97d2-52d7af729f75", "node_type": "4", "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "hash": "05f5c45a23b2c03f7cdfe133fb6bed89d8bf8e513b8837faf531c9da59125009", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c73f5131-7493-4ff0-a4c4-7ef674d0b98e", "node_type": "1", "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "hash": "e56a82a19d008aa86588ce97a509778747fba0f7e6d6550cf9576539c28acc9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1b92f16-3226-43c6-8347-0190554a4def", "node_type": "1", "metadata": {}, "hash": "91a128e414220c0c9ba619a690fea5fc3041b3edf3c192acf1b8d4dcdab4d905", "class_name": "RelatedNodeInfo"}}, "text": "\u26ab Simple Storage Service\n   \u26ab Service Oriented Architecture\n   \u26ab Provides online storage using web services.\n   \u26ab Allows read, write and delete permissions on\n      objects.\n   \u26ab Specific messaging interface\n---\nAmazon SimpleDB\n               AmazonSlmpkDB\n\u26ab Highly available\n\u26ab Flexible, and scalable\n\u26ab Non-relational data store\n\u26ab Offloads the work of database\n   administration.\n\u26ab Creates and manages multiple\n   geographically distributed replicas\n\u26ab Fees based on resources consumed in\n   data storage and query rates\n---\nNetworking and Security\n\n\n \uf097 Instances can be launched on one of the two platforms\n     \u25e6 EC2-Classic\n     \u25e6 EC2-VPC\n \u26ab Each instance launched is assigned two addresses a private address\n     and a public IP address.\n\n\n       \u26ab  A replacement instance has a different public IP address.\n \uf097 Instance IP address is dynamic.\n     \u25e6 new IP address is assigned every time instance is launched\n \u26ab Amazon EC2 offers Elastic IP addresses (static IP addresses) for\n     dynamic cloud computing.\n     \u25e6 Remap the Elastic IP to new instance to mask failure\n     \u25e6 Separate pool for EC2-Classic and VPC\n \uf097 Security Groups to access control to instance\n---\nMontorbe Auto Salg ad Lotd Bahndn8\n Monitoring, Auto Scaling, and Load Balancing\n\n\n \uf097 Monitor statistics of instances and EBS\n     \u25e6 CloudWatch\n \uf097 Automatically scales amazon EC2 capacity up and down\n    based on rules\n     \u25e6 Add and remove compute resource based on demand\n     \u25e6 Suitable for businesses experiencing variability in usage\n \uf097 Distribute incoming traffic across multiple instances\n     \u25e6 Elastic Load Balancing\n---\nWat Is Hadoop?\n              What isHadop\n \uf097 Map-Reduce Solution\n \uf097 Apache top level project, open-sourceimplementation of frameworks for reliable,\n   scalable, distributed computing and data storage.\n \uf097 It is a flexible and highly-available architecture for\n   large scale computation and data processing on a\n   network of commodity hardware.\n \uf097 Designed to answer the question: \u201cHow to\n   process big data with reasonable cost and\n   time?\u201d\n                               Hzmmp\n---\n       Gooele Orlgtns\n        Google Origins\n                     The Google File System\n            Sanjay Ghemawat; Howard Gobioff; and Shun-Tak Leung            Hdfs\n2003                               Google\n        MapReduce: Simplified Data Processing on Large Clusters\n 2004                    Jeffrey Dean and Sanjay Ghemawat                 Map\n                             jeff@ googlecm_ sunjay @ google com\n                                    Google, Inc:\n                             KIetahle:                              KBASE\n                                                                         A P     A  CAE\n                                                  Hich DhrnWallach\n 2006\n                                 Guk EuteGkH\n---\nHadoop Milestones\n Hadoop Milestones\n\n\n  \uf097 2008 - Hadoop Wins Terabyte SortBenchmark (sorted 1 terabyte of data in 209\n    seconds, compared to previous record of 297\n    seconds)\n  \uf097 2009 - Avro and Chukwa became new members\n    of Hadoop Framework family\n  \uf097 2010 - Hadoop's Hbase, Hive and Pig subprojects\n    completed, adding more computational power to\n    Hadoop framework\n  \uf097 2011 - ZooKeeper Completed\n  \uf097 2013 - Hadoop 1.1.2 and Hadoop 2.0.3\n    alpha.\n---\nHadoopFramework Tools\n   Hadoop Framework Tools\n          EDW                    (query, analytics,reporting; statistics)BI Applications\n                                       Orchestration Framework\n          EDW\n     Connector(s)              HBase         Chukwa           Flume         ZooKeeper\n             Pig             Data Access FrameworkHive Sqoop                  Avro        [   Iv\n        Data StorageFramework exWa Data Processing Framework                              14\n                    (HDFS)                                   (MapReduce)\n                                            JVM\n                            Operating System (Linux)\n                              Dell PE- R,PE-\u20acC Servers\n---\nMapReduce Englne\n MapReduce EngineSubmnit Job   Trcke\n                        Task\n                       Tracker\n                         Rerknl       Task\n                                      Tncker\n 4\n              Task    Kren]           Task\n             Tracker                 Tracker\n             Trcker   Kpan]\n---\nHadoop Use\n  Hadoop Use", "start_char_idx": 13703, "end_char_idx": 18075, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1b92f16-3226-43c6-8347-0190554a4def": {"__data__": {"id_": "c1b92f16-3226-43c6-8347-0190554a4def", "embedding": null, "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "744d4679-5374-4bda-97d2-52d7af729f75", "node_type": "4", "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "hash": "05f5c45a23b2c03f7cdfe133fb6bed89d8bf8e513b8837faf531c9da59125009", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1e2a36c-28ae-4fb7-9700-7e58853ce4fb", "node_type": "1", "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}, "hash": "fa38c5440f626a7972d2b3c0d95bd9d3c33e877884357ff58483506f99081962", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Hadoop is in use to handle big data:\n       \u25e6 Yahoo!\u2019s Search Webmap runs on 10,000 core Linux cluster and\n          powers Yahoo! Web search\n       \u25e6 FB\u2019s Hadoop cluster hosts 100+ PB of data (July, 2012) & growing at\n          \u00bd PB/day (Nov, 2012)\n       \u25e6 Amazon and Netflix\n       \u25e6 NY Times was dynamically generating PDFs of articles from 1851-\n          1922\uf096 Wanted to pre-generate & statically serve articles to improve performance\n          \uf096 Using Hadoop + MapReduce running on EC2 / S3, converted 4TB of TIFFs into 11\n             million PDF articles in 24 hrs\n   \uf097 Key Applications\n       \u25e6 Advertisement (Mining user behavior to generate\n          recommendations)\n       \u25e6 Searches (group related documents)\n       \u25e6 Security (search for uncommon patterns)\n---\nRegutrements at Facebook\n   Requirements at Facebook\n\n\n     \uf097 Design requirements:\n              \u25e6 Integrate display of email,                 bttpd dwww JacchookcomFarehuok chialMozllla Hrclox\n                                                              Facebook Chat                                 FacebockFacetcok Cha:\n                     SMS and chat messages                facebook                                                            Popn  chat   You ai0 Onine,setonosHelp\n                     between users                                 stephen shankland\n                                                                   Isnow CIET NaWs ccrl > Googl {Yahoolportalladkscad tcpateandn           Go Orflne\n                                                                   Vcryhapoy about thr                                              Current Conversations\n              \u25e6 Strong control over who                                  dicked \"hclp\"inthe Fopoft (ndzw   cocnconewitobtothc        Stcphcn ShonkIond\n                     users                                        iEht ofthe chat cne    dt lose cha: !indod                        Onlinc Fricnds\n                                                                  Focccool Wico nogc\n              \u25e6 Stringent latency & uptime                        Lindscy\n                                                                  Szc that;\n     \uf097 System requirements                                                                                                               Stephn shaniand\n                                                                  Yay, tha Wrks nOHa                                                           cret\n              \u25e6 High write throughput                                                     scowintr locis Ieto have mlticlo chats\n                                                                  Olon;\n                                                                  Stephen                                                   3244m\n              \u25e6 Cheap, elastic storage                                                                         bricfyy, tt he Kcnt\n                                                                  Oilne\n                                                                  bUhe does sTCwas another tab across te Lottcm\n              \u25e6 Low latency                                       Lnetey\n                                                                  Ok, chanks                                                Gaian\n              \u25e6 High consistency\n              \u25e6 Disk-efficient sequentialand random read\n---\nHadoop Use at Facebook\n Hadoop Use at Facebook\n  \uf097 Classic alternatives\n     \u25e6 These requirements typically met using large\n       MySQL cluster & caching tiers using Memcache\n     \u25e6 Content on HDFS could be loaded into MySQL\n       or Memcached if needed by web tier\n  \uf097 Problems with previous solutions\n     \u25e6 MySQL has low random write throughput\u2026 BIG\n       problem for messaging!\n     \u25e6 Difficult to scale MySQL clusters rapidly while\n       maintaining performance\n     \u25e6 MySQL clusters have high management overhead,\n       require more expensive hardware\n---\nHadoop Use at Facebook\n \uf097 Hadoop + HBase as foundations\n    \u25e6 Improve & adapt HDFS and HBase to scale to\n      FB\u2019s workload and operational considerations\n    \u25e6 NameNode is Single point of failure & failover\n      times are at least 20 minutes\n \uf097 AvatarNode\n    \u25e6 Eliminates single point of failure makes HDFS safe\n      to deploy even with 24/7 uptime requirement\n    \u25e6 Performance improvements for realtime\n      workload: RPC timeout.\n    \u25e6 Rather fail fast and try a different DataNode", "start_char_idx": 18081, "end_char_idx": 22571, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e85a68f8-b946-435e-96bc-9198ea7c06c2": {"__data__": {"id_": "e85a68f8-b946-435e-96bc-9198ea7c06c2", "embedding": null, "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f", "node_type": "4", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "a95881b23515ae12921be0d3f9e7127b2dab627124e0150d21cb45aee4c5e11c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea7291c8-689e-4414-b440-4a8886bca272", "node_type": "1", "metadata": {}, "hash": "144547f023ff188700b579d2e22a63bf93498d3357f581d6282074ba8407bb24", "class_name": "RelatedNodeInfo"}}, "text": "0  EE 542\n   EE 542\n   Lecture Id: Main Uses of Cloud\n   Lecture 10: Main Uses of Cloud\n    Internet and Cloud Computing\n\n\n    Young Cho\n    Department of Electrical Engineering\n    University of Southern California\n\n\n                                          1\n---\nIndustyIndustry\n  \u2022 At Google:\n     \u2013 Index building for Google Search\n     \u2013 Article clustering for Google News\n     \u2013 Statistical machine translation\n  \u2022 At Yahoo!:\n     \u2013 Index building for Yahoo! Search\n     \u2013 Spam detection for Yahoo! Mail\n  \u2022 At Facebook:\n     \u2013 Data mining\n     \u2013 Ad optimization\n     \u2013 Spam detection\n---\nResearch\n Research\n\n\n  \uf097 Analyzing Wikipedia conflicts (PARC)\n  \uf097 Natural language processing (CMU)\n  \uf097 Climate simulation (Washington)\n  \uf097 Bioinformatics (Maryland)             nature\n  \uf097 Particle physics (Nebraska)                       Vralinlcctang for ViruacyThebiterBit\n                                                       TROPICAL CYCLONES\n  \uf097 Cancer Research                                    BLACKHOLE PHYSICSGalactic Centre\n                                          SCIENCEINTHE\n                                           PETABYTE ERA\n---\nCbud Goal\n Cloud Goals\n\n\n \u2022 Scalability to large data volumes\n    \u2013 Scan 100 TB on 1 node @ 50 MB/s = 24 days\n    \u2013 Scan on 1000-node cluster = 35 minutes\n \u2022 Cost-efficiency\n    \u2013 Commodity nodes (cheap, but unreliable)\n    \u2013 Commodity network (low bandwidth)\n    \u2013 Automatic fault-tolerance (fewer admins)\n    \u2013 Easy to use (fewer programmers)\n---\nChalknses 6f Ckud Envronment\nChallenges of Cloud Environment\n\n\n \uf097 Cheap nodes fail, especially when you have many\n    \u25e6 Mean time between failures for 1 node = 3 years\n    \u25e6 MTBF for 1000 nodes = 1 day\n    \u25e6 Solution: Build fault tolerance into system\n\n\n \uf097 Commodity network = low bandwidth\n    \u25e6 Solution: Push computation to the data\n\n\n \uf097 Programming distributed systems is hard\n    \u25e6 Solution: Restricted programming model: users\n      write data-parallel \u201cmap\u201d and \u201creduce\u201d functions,\n      system handles work distribution and failures\n---\nBigdata Market Shara\n Bigdata Market Share\n\n\n                          Business Solution Companies\n                                   & Platforms    Informatica\n            13%                                   Apache Hadoop\n                                                  Teradata\n                                                  Apache Hbase\n                       45.2%                      Apache Spark\n    6.8%                                          Cloudera\n                                                  Actian\n     7%                                           Others\n         8.6%\n                11.5%\n---\nHadoP(B) w Spark(R)\n Hadoop(B) vs. Spark(R)\n                                        JAMA\n                                           Nole\n  AverageJJan | 2004     Mar2009  May 1,2014\n---\n     Wat Is Hadoop?\n                   What isHadoop\n      \uf097 Apache top level project, open-sourceimplementation of frameworks for reliable,\n        scalable, distributed computing and data storage.\n      \uf097 It is a flexible and highly-available architecture for\n        large scale computation and data processing on a\n        network of commodity hardware.\n\u2022 Designed to answer the question: \u201cHow to\n   process big data with reasonable cost and\n   time?\u201d\n                                     Hzmmp\n---\n       Gooele Orlgtns\n        Google Origins\n                     The Google File System\n            Sanjay Ghemawat; Howard Gobioff; and Shun-Tak Leung            Hdfs\n2003                               Google\n        MapReduce: Simplified Data Processing on Large Clusters\n 2004                    Jeffrey Dean and Sanjay Ghemawat                 Map\n                             jeff@ googlecm_ sunjay @ google com\n                                    Google, Inc:\n                             KIetahle:                              KBASE\n                                                                         A P     A  CAE\n                                                  Hich DhrnWallach\n 2006\n                                 Guk EuteGkH\n---\nHadoop Mllestones\n Hadoop Milestones\n\n\n  \uf097 2008 - Hadoop Wins Terabyte Sort\n    Benchmark (sorted 1 terabyte of data in 209\n    seconds, compared to previous record of 297\n    seconds)\n  \uf097 2009 - Avro and Chukwa became new members\n    of Hadoop Framework family\n  \uf097 2010 - Hadoop's Hbase, Hive and Pig subprojects\n    completed, adding more computational power to\n    Hadoop framework\n  \uf097 2011 - ZooKeeper Completed\n  \uf097 2013 - Hadoop 1.1.2 and Hadoop 2.0.3\n    alpha.\n---\nHadoop Use\n  Hadoop Use", "start_char_idx": 0, "end_char_idx": 4600, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea7291c8-689e-4414-b440-4a8886bca272": {"__data__": {"id_": "ea7291c8-689e-4414-b440-4a8886bca272", "embedding": null, "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f", "node_type": "4", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "a95881b23515ae12921be0d3f9e7127b2dab627124e0150d21cb45aee4c5e11c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e85a68f8-b946-435e-96bc-9198ea7c06c2", "node_type": "1", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "aeb31bc060d24ab6146f03efdc9df264b29904806fc36bce047376d6af458f5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60f3a652-7c09-4a4b-8fb2-54443aaaa8dd", "node_type": "1", "metadata": {}, "hash": "cd7da572d3768338514f08012619358aadf6ae903aa4637ffe52bbf2740c6613", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 2008 - Hadoop Wins Terabyte Sort\n    Benchmark (sorted 1 terabyte of data in 209\n    seconds, compared to previous record of 297\n    seconds)\n  \uf097 2009 - Avro and Chukwa became new members\n    of Hadoop Framework family\n  \uf097 2010 - Hadoop's Hbase, Hive and Pig subprojects\n    completed, adding more computational power to\n    Hadoop framework\n  \uf097 2011 - ZooKeeper Completed\n  \uf097 2013 - Hadoop 1.1.2 and Hadoop 2.0.3\n    alpha.\n---\nHadoop Use\n  Hadoop Use\n\n\n   \uf097 Hadoop is in use to handle big data:\n       \u25e6 Yahoo!\u2019s Search Webmap runs on 10,000 core Linux cluster and\n          powers Yahoo! Web search\n       \u25e6 FB\u2019s Hadoop cluster hosts 100+ PB of data (July, 2012) & growing at\n          \u00bd PB/day (Nov, 2012)\n       \u25e6 Amazon and Netflix\n       \u25e6 NY Times was dynamically generating PDFs of articles from 1851-\n          1922\uf096 Wanted to pre-generate & statically serve articles to improve performance\n           \uf096 Using Hadoop + MapReduce running on EC2 / S3, converted 4TB of TIFFs into 11\n             million PDF articles in 24 hrs\n   \uf097 Key Applications\n       \u25e6 Advertisement (Mining user behavior to generate\n          recommendations)\n       \u25e6 Searches (group related documents)\n       \u25e6 Security (search for uncommon patterns)\n---\nHadoop Concept (MapReduce)\n Hadoop Concept (MapReduce)\n\n\n  \uf097 Programming model for data-intensive\n    computing on commodity clusters\n  \uf097 Pioneered by Google\n    \u25e6 Processes 20 PB of data per day\n  \uf097 Popularized by Apache Hadoop project\n    \u25e6 Used by Yahoo!, Facebook, Amazon, \u2026\n---\nMapReduco Programming Modkel\nMapReduce Programming Model\n\n\n \uf097 Data type: key-value records\n\n\n \uf097 Map function:\n            (Kin,Vin) \u2794 list(Kinter,Vinter)\n\n\n \uf097 Reduce function:\n        (Kinter, list(Vinter)) \u2794 list(Kout,Vout)\n---\n  Example:Word Count\n  Example: Word Count\n\n\ndef mapper(line):\n     foreach word in line.split():\n          output(word, 1)\n\n\ndef reducer(key, values):\n     output(key, sum(values))\n---\n           Word Count Executon\n           Word Count Execution\n\n\n   Input             Map          Shuffle & Sort        Reduce    Output\n\n\n                               the, 1\nthe quick                     brown, 1fox, 1                     brown, 2\n  brown              Map                                          fox, 2\n    fox                                                  Reduce   how, 1\n                           the, 1                                 now, 1\n                           fox, 1                                 the, 3\n  the fox                  the, 1\n  ate the            Map                         quick, 1\n  mouse\n                        how, 1                                    ate, 1\n                        now, 1            ate, 1                  cow, 1\n                       brown, 1         mouse, 1         Reduce\nhow now                                                          mouse, 1\n  brown              Map               cow, 1                    quick, 1\n   cow\n---\nAn Optmtzatkon: Tha Combiner\nAn Optimization: The Combiner\n\n\n \uf097 Local reduce function for repeated keys\n   produced by same map\n \uf097 For associative ops. like sum, count, max\n \uf097 Decreases amount of intermediate data\n\n\n \uf097 Example: local counting for Word Count:\n\n\n  def combiner(key, values):\n       output(key, sum(values))\n---\n        Word Count wth Combiner\n         Word Count with Combiner\n\n\n  Input            Map          Shuffle & Sort       Reduce    Output\n\n\n                             the, 1\nthe quick                   brown, 1fox, 1                    brown, 2\n brown              Map                                        fox, 2\n   fox                                                Reduce   how, 1\n                        the, 2                                 now, 1\n                        fox, 1                                 the, 3\n the fox\n ate the            Map                       quick, 1\n mouse\n                      how, 1                                    ate, 1\n                      now, 1           ate, 1                  cow, 1\n                     brown, 1        mouse, 1         Reduce\nhow now                                                       mouse, 1\n brown              Map              cow, 1                   quick, 1\n  cow\n---\n  I.Search\n  1. Search\n\n\n\u2022 Input: (lineNumber, line) records\n\u2022 Output: lines matching a given pattern", "start_char_idx": 4146, "end_char_idx": 8476, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60f3a652-7c09-4a4b-8fb2-54443aaaa8dd": {"__data__": {"id_": "60f3a652-7c09-4a4b-8fb2-54443aaaa8dd", "embedding": null, "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f", "node_type": "4", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "a95881b23515ae12921be0d3f9e7127b2dab627124e0150d21cb45aee4c5e11c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea7291c8-689e-4414-b440-4a8886bca272", "node_type": "1", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "4601c3bbb9203a5b9aa0cb5d34678fb659e2990acac0c57f286f072732ec59ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9634d11-e5af-4a95-bf1c-f6783016f07c", "node_type": "1", "metadata": {}, "hash": "bf441537cabf7b3e9caa7bca3628b8b19813b67186b5479986cfbc9ec3c561ba", "class_name": "RelatedNodeInfo"}}, "text": "Input            Map          Shuffle & Sort       Reduce    Output\n\n\n                             the, 1\nthe quick                   brown, 1fox, 1                    brown, 2\n brown              Map                                        fox, 2\n   fox                                                Reduce   how, 1\n                        the, 2                                 now, 1\n                        fox, 1                                 the, 3\n the fox\n ate the            Map                       quick, 1\n mouse\n                      how, 1                                    ate, 1\n                      now, 1           ate, 1                  cow, 1\n                     brown, 1        mouse, 1         Reduce\nhow now                                                       mouse, 1\n brown              Map              cow, 1                   quick, 1\n  cow\n---\n  I.Search\n  1. Search\n\n\n\u2022 Input: (lineNumber, line) records\n\u2022 Output: lines matching a given pattern\n\n\n\u2022 Map:           if(line matches pattern):\n                      output(line)\n\n\n\u2022 Reduce: identity function\n  \u2013 Alternative: no reducer (map-only job)\n---\n   2 Sort\n   2. Sort\n\uf097 Input: (key, value) records\n\uf097 Output: same records, sorted by key\n\n\n                                       Map     ant, bee\n\uf097 Map: identity function                                 Reduce   [A-M]\n                                          zebra              aardvark\n\uf097 Reduce: identify function                                  ant\n                                            cow              bee\n                                                             cow\n                                       Map                   elephant\n                                             pig\n\uf097 Trick: Pick partitioning             aardvark,         Reduce   [N-Z]\n   function p such that                elephant              pig\n                                                             sheep\n   k1 < k2 => p(k1) < p(k2)            Map     sheep, yak    yak\n                                                             zebra\n---\n   3.Imerted Indkx\n   3. Inverted Index\n\u2022 Input: (filename, text) records\n\u2022 Output: list of files containing each word\n\n\n\u2022 Map:           foreach word in text.split():\n                     output(word, filename)\n\n\n\u2022 Combine: uniquify filenames for each word\n\n\n\u2022 Reduce:\n               def reduce(word, filenames):\n                   output(word,sort(filenames))\n---\n         Inverted Index Exampl\n          Inverted Index Example\n\n\nhamlet.txt           to, hamlet.txt\n   to be or          be, hamlet.txt\n  not to be          or, hamlet.txt       afraid, (12th.txt)\n                     not, hamlet.txt      be, (12th.txt, hamlet.txt)\n                                          greatness, (12th.txt)\n                                          not, (12th.txt, hamlet.txt)\n                     be, 12th.txt         of, (12th.txt)\n  12th.txt           not, 12th.txt        or, (hamlet.txt)\n   be not            afraid, 12th.txt     to, (hamlet.txt)\n  afraid of          of, 12th.txt\n greatness           greatness, 12th.txt\n---\n  4.Most PopulrWords\n   4. Most Popular Words\n\n\n\u2022 Input: (filename, text) records\n\u2022 Output: the 100 words occurring in most files\n\n\n\u2022 Two-stage solution:\n   \u2013 Job 1:\u2022 Create inverted index, giving (word, list(file)) records\n   \u2013 Job 2:\u2022 Map each (word, list(file)) to (count, word)\n      \u2022 Sort these records by count as in sort job\n\u2022 Optimizations:\n   \u2013 Map to (word, 1) instead of (word, file) in Job 1\n   \u2013 Estimate count distribution in advance by sampling\n---\n  5,Numerkaal Integraton\n   5. Numerical Integration\n\n\n\uf097 Input: (start, end) records for sub-ranges to integrate\n  \u25e6 Can implement using custom InputFormat\n\uf097 Output: integral of f(x) over entire range\n\n\n\uf097 Map:       def map(start, end):\n                 sum = 0\n                 for(x = start; x < end; x += step):\n                    sum += f(x) * step\n                 output(\u201c\u201d, sum)\n\uf097 Reduce: def reduce(key, values):\n\n\n                    output(key, sum(values))\n---\n          Word Count utlng Hadoop\n           Word Count using Hadoop\n\n\n Mapper.py:        import sys\n                   for line in sys.stdin:\n                     for word in line.split():\n                        print(word.lower() + \"\\t\" + 1)\n\n\nReducer.py:       import sys\n                  counts = {}\n                  for line in sys.stdin:\n                     word, count = line.split(\"\\t\")\n                       dict[word] = dict.get(word, 0) + int(count)\n                  for word, count in counts:\n                     print(word.lower() + \"\\t\" + 1)\n---\nRegutrements at Facebook\n   Requirements at Facebook", "start_char_idx": 7493, "end_char_idx": 12156, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9634d11-e5af-4a95-bf1c-f6783016f07c": {"__data__": {"id_": "f9634d11-e5af-4a95-bf1c-f6783016f07c", "embedding": null, "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f", "node_type": "4", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "a95881b23515ae12921be0d3f9e7127b2dab627124e0150d21cb45aee4c5e11c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60f3a652-7c09-4a4b-8fb2-54443aaaa8dd", "node_type": "1", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "ade886b521954c2ee3e719ea29d66823699244dfbcf4332c1180a0637f2bff34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "240ad29b-703b-44fc-a7f8-c743ebd6ed03", "node_type": "1", "metadata": {}, "hash": "8721a9311eaf2fc4537a7d50c8849b38a8781f8449d8223725db3b06cf5e72eb", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Map:       def map(start, end):\n                 sum = 0\n                 for(x = start; x < end; x += step):\n                    sum += f(x) * step\n                 output(\u201c\u201d, sum)\n\uf097 Reduce: def reduce(key, values):\n\n\n                    output(key, sum(values))\n---\n          Word Count utlng Hadoop\n           Word Count using Hadoop\n\n\n Mapper.py:        import sys\n                   for line in sys.stdin:\n                     for word in line.split():\n                        print(word.lower() + \"\\t\" + 1)\n\n\nReducer.py:       import sys\n                  counts = {}\n                  for line in sys.stdin:\n                     word, count = line.split(\"\\t\")\n                       dict[word] = dict.get(word, 0) + int(count)\n                  for word, count in counts:\n                     print(word.lower() + \"\\t\" + 1)\n---\nRegutrements at Facebook\n   Requirements at Facebook\n\n\n     \uf097 Design requirements:\n              \u25e6 Integrate display of email,                 bttpd dwww JacchookcomFarehuok chialMozllla Hrclox\n                                                              Facebook Chat                                 FacebockFacetcok Cha:\n                     SMS and chat messages                facebook                                                            Popn  chat   You ai0 Onine,setonosHelp\n                     between users                                 stephen shankland\n                                                                   Isnow CIET NaWs ccrl > Googl {Yahoolportalladkscad tcpateandn           Go Orflne\n                                                                   Vcryhapoy about thr                                              Current Conversations\n              \u25e6 Strong control over who                                  dicked \"hclp\"inthe Fopoft (ndzw   cocnconewitobtothc        Stcphcn ShonkIond\n                     users                                        iEht ofthe chat cne    dt lose cha: !indod                        Onlinc Fricnds\n                                                                  Focccool Wico nogc\n              \u25e6 Stringent latency & uptime                        Lindscy\n                                                                  Szc that;\n     \uf097 System requirements                                                                                                               Stephn shaniand\n                                                                  Yay, tha Wrks nOHa                                                           cret\n              \u25e6 High write throughput                                                     scowintr locis Ieto have mlticlo chats\n                                                                  Olon;\n                                                                  Stephen                                                   3244m\n              \u25e6 Cheap, elastic storage                                                                         bricfyy, tt he Kcnt\n                                                                  Oilne\n                                                                  bUhe does sTCwas another tab across te Lottcm\n              \u25e6 Low latency                                       Lnetey\n                                                                  Ok, chanks                                                Gaian\n              \u25e6 High consistency\n              \u25e6 Disk-efficient sequentialand random read\n---\nHadoop Use at Facebook\n  Hadoop Use at Facebook\n  \uf097 Classic alternatives\n     \u25e6 These requirements typically met using large\n       MySQL cluster & caching tiers using Memcache\n     \u25e6 Content on HDFS could be loaded into MySQL\n       or Memcached if needed by web tier\n  \uf097 Problems with previous solutions\n     \u25e6 MySQL has low random write throughput\u2026 BIG\n       problem for messaging!\n     \u25e6 Difficult to scale MySQL clusters rapidly while\n       maintaining performance\n     \u25e6 MySQL clusters have high management overhead,\n       require more expensive hardware\n---\nHadoop Use at Facebook\n \uf097 Hadoop + HBase as foundations\n    \u25e6 Improve & adapt HDFS and HBase to scale to\n      FB\u2019s workload and operational considerations\n    \u25e6 NameNode is Single point of failure & failover\n      times are at least 20 minutes\n \uf097 Proprietary \u201cAvatarNode\u201d\n    \u25e6 Eliminates single point of failure makes HDFS safe\n      to deploy even with 24/7 uptime requirement\n    \u25e6 Performance improvements for realtime\n      workload: RPC timeout.\n    \u25e6 Rather fail fast and try a different DataNode\n---\nClustering\nClustering\n---\nClustering\n---\nClitadon graph browelng\n   Citation graph browsing\n        Citations: The cascade-correlation learning architecture                Fahlman, Lebiere (Researchlndex)            Mozilla Firefox\n           Edit   Vew    Hitory     Bookmarks    Todls   Help\n                                               ht:Ilateseer,ist psu:edufcs?a-dbnum\" 01962CGID9308437*2CDID% 303769962Cstart%305092Cd                                    Google\n     372 citations found. Retrieving documents\n     C.Fahlman, C_Lebiere           The cascade- correlation learning architecture, in: D. Turetzky (Ed ) Advances in Neural Information Processing Systems, Vol: 2,\n     Morgan Kaufmann, Los Altos, 1990, Pp.", "start_char_idx": 11267, "end_char_idx": 16558, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "240ad29b-703b-44fc-a7f8-c743ebd6ed03": {"__data__": {"id_": "240ad29b-703b-44fc-a7f8-c743ebd6ed03", "embedding": null, "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f", "node_type": "4", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "a95881b23515ae12921be0d3f9e7127b2dab627124e0150d21cb45aee4c5e11c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9634d11-e5af-4a95-bf1c-f6783016f07c", "node_type": "1", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "4c63226ccf4f4d9863018fc98e6dc908781185b8127b957f5ab50935d11f9bb4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5af3419d-91d1-4a82-b265-3aa72b93416d", "node_type": "1", "metadata": {}, "hash": "444382d9fc080fa9b9b03b323deb96eae3cdfe7cc1e67bd7d2892c9a4b6bef04", "class_name": "RelatedNodeInfo"}}, "text": "\u25e6 Rather fail fast and try a different DataNode\n---\nClustering\nClustering\n---\nClustering\n---\nClitadon graph browelng\n   Citation graph browsing\n        Citations: The cascade-correlation learning architecture                Fahlman, Lebiere (Researchlndex)            Mozilla Firefox\n           Edit   Vew    Hitory     Bookmarks    Todls   Help\n                                               ht:Ilateseer,ist psu:edufcs?a-dbnum\" 01962CGID9308437*2CDID% 303769962Cstart%305092Cd                                    Google\n     372 citations found. Retrieving documents\n     C.Fahlman, C_Lebiere           The cascade- correlation learning architecture, in: D. Turetzky (Ed ) Advances in Neural Information Processing Systems, Vol: 2,\n     Morgan Kaufmann, Los Altos, 1990, Pp. 524-532.\n     citeSeerHome/Search                     Document Details and Download   Summary                  Related Articles    Check\n     This paper is cited      the following contexts\n     Documents 51 to 100 Previous 50Next 50\n     Evolvng Fuzzy Neural Networks for Supemvised Unsuperised                  Kasabov (2001          citation)  Correct)\n     (4,5,7,8,14,30,46,47,48]incrementalabove and thaz have influenced the development of EFuNNslifelonglearning [69,35,36,82] on line [17,21,22,28,31,35,36,42,44,61,66,67,69_constructivist structuralThese are methods and systems for: adaptive [6,7,8,9,19,53,58,61,71] learning15,19,11,14,9] that is\n     supported by biological facts\n     [52,66,70,31] knowledge based learning neuralnetworks (KBNN) 57,24,25,30,33,38,44, 45,51,63,76,77,83] The EFuNN model14,62,73,77 , 82] selectivist structural learning [26,29,49,56,59,64,50,32] hybrid constructivist selectivist structural learning\n     Fahlman;        and     Lebiere,   The Cascade- Correlation Leaming Architecture\" , in: Turetzky, D (ed) Advances                Neural Information Processing Systems, vol. 2, Morgan\n     Kaulmann, 524-532 (1990).\n     ADynamic Neural Network for Continual            Classification Lang Wamick         Correct)\n     network has no provision for perpetual novelty- IncrementalNetworks are an example of the how the network is dynamic during training [2]. Pruning removes\n                                                                                                                                                              mistaken for dynamic neural networks as they can be described as non Iinear, dynamic system in state space [5]Hopield networks are not truly dynamicas the\n     neurons ad links during the network          operation. Although these algorithms supply efiicient network architecturesthey are not purely dynamic as neither the topology nor\n     the knowledge within the network changes once the network has iinishedeamingIn trajectory\n     Fahlman $ E:      Lebiere \u20ac     The Cascade-Correlation Leaming Architecture            Technical Report CMU-CS-90-100School of Computer Science, Camegie Mellon University,\n     Pittsburg; PA: 1990,\n        Future for Dynamic Neural Networks         Lang(20001      (Correct]\n        of the network , it can be constructed dunng leaming and then reduced lateruntil an optimum solutionweights (links) during learning until the network can represent the function [4,5,6]. Reduction (alsogained . Constructive methods (also called growing) start\n     with an input and output layer and add hidden nodes\n     known as pruning) removes superfiuous parts of the network, while still representing the object function [7,8] Incrementalnetworks are useiul as theyprovde the user with\n      ess parameters to decide upon before learning has been done. Classicallythe number of nodes the\n                                             ckits     dccido                                           celc                                                                dccidod\n     monz                                                                                                                                                                                      Automata\n          Start                     4d e                         C: Documents and: ,          Names of large nu;           Gtatons: The cas,a.      0i Microsoft PowerPoi; ,                       12:30 AM\n---\n          Clustering Corpus browelng\n           Clustering: Corpus browsing\n\n\nwww.yahoo.com/Science\n                                                              \u2026 (30)\n\n\n    agriculture        biology        physics         CS            space", "start_char_idx": 15783, "end_char_idx": 20281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5af3419d-91d1-4a82-b265-3aa72b93416d": {"__data__": {"id_": "5af3419d-91d1-4a82-b265-3aa72b93416d", "embedding": null, "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f", "node_type": "4", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "a95881b23515ae12921be0d3f9e7127b2dab627124e0150d21cb45aee4c5e11c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "240ad29b-703b-44fc-a7f8-c743ebd6ed03", "node_type": "1", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "7909be9c33d4652b21a6345242fa9c7fefa95829f1cb1eb27ce16933db584ba8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8eaeaa00-e7d3-4143-857c-b986baa13670", "node_type": "1", "metadata": {}, "hash": "b6595322eda7c7aff308cb5803bf388d693df4f08c4cba6d561574dfc6710f7f", "class_name": "RelatedNodeInfo"}}, "text": "Reduction (alsogained . Constructive methods (also called growing) start\n     with an input and output layer and add hidden nodes\n     known as pruning) removes superfiuous parts of the network, while still representing the object function [7,8] Incrementalnetworks are useiul as theyprovde the user with\n      ess parameters to decide upon before learning has been done. Classicallythe number of nodes the\n                                             ckits     dccido                                           celc                                                                dccidod\n     monz                                                                                                                                                                                      Automata\n          Start                     4d e                         C: Documents and: ,          Names of large nu;           Gtatons: The cas,a.      0i Microsoft PowerPoi; ,                       12:30 AM\n---\n          Clustering Corpus browelng\n           Clustering: Corpus browsing\n\n\nwww.yahoo.com/Science\n                                                              \u2026 (30)\n\n\n    agriculture        biology        physics         CS            space\n\n\n            ...                ...            ...             ...         ...\ndairy crops         botany    cell                 AI    courses    craft\n          agronomy                 magnetism         HCI              missions\nforestry                 evolution         relativity\n---\nCluster Parddoning\n Cluster Partitioning\n\n\n  \uf097 Iterative Partitioning\n     \u25e6 Training data set to learn a partition of the given data space\n     \u25e6 learning a partition on a data set to produce several non-empty clusters\n         (usually, the number of clusters given in advance)\n  \uf097 Optimal partition\n     \u25e6 Minimizing the sum of squared distance to its \u201crepresentative object\u201d in\n         each cluster\n                  E   =\uf053K1\uf053x\uf0ceCkd2(x,mk)k=\n\n\n                                                    N\n     e.g., Euclidean distance        d2(x,mk)= \uf0e5n1(xn\u2212mkn)2=\n\n\n                                                                                 32\n---\nK-Means Clustering\n K     Mcans Clustering\n\n\n \uf097 Given a K, find a partition of K clusters to optimize the\n     chosen partitioning criterion (cost function)\n     o global optimum: exhaustively search all partitions\n \uf097 The K-means algorithm: a heuristic method\n     o K-means algorithm (MacQueen\u201967): each cluster is represented by the\n         centre of the cluster and the algorithm converges to stable centriods of\n         clusters.\n     o K-means algorithm is the simplest partitioning method for clustering\n         analysis and widely used in data mining applications.\n\n\n                                                                                   33\n---\n K-means Algorithmmcans Agortthm\n\n\n\uf097 Given the cluster number K, the K-means algorithm is\n    carried out in three steps after initialization:\n    Initialization: set seed points (randomly)\n    1) Assign each object to the cluster of the nearest seed\n        point measured with a specific distance metric\n    2) Compute new seed points as the centroids of the\n        clusters of the current partition (the centroid is the\n        centre, i.e.,mean point, of the cluster)\n    3) Go back to Step 1), stop when no more new assignment\n        (i.e., membership in each cluster no longer changes)\n\n\n                                                                34\n---\nK-Means ExampleMeans Exampl\n\n\n Suppose we have 4 types of medicines and each has two attributes (pH and\n weight index). Our goal is to group these objects intoK=2 group of medicine.\n\n\n     Medicin    Weight      pH-                                        D\n        e                  Index           2                       C\n        A          1          1            8\n                                           0\n        B\n        C          2\n                   4          1\n                              3            1        A    B\n\n\n        D          5          4\n                                                 attribute (XJ: weight index\n                                                                               35\n---\nEampk\n  Example\n\n\n  \uf097   Step 1: Use initial seed points for partitioning\n                  iteration 0                           c13.61=A,c2  =B\n                                              D\"                 5     51 = (1,1)group - 1\n     45                                                   2.83 4.24 | C2 = (2,1)group\n                                    D               4 B C\n  235                                                           D\n  325                         C                     [1  2   4  5      XEuclidean distance\n                                                     1 1 3            X\n  105        A     B                           d(D,c1)=     (5\u22121)2+(4\u22121)2\n                                                            (5\u22122)2+(4\u22121)2 =5\n                                               d(D,c2)=                          =4.24", "start_char_idx": 19042, "end_char_idx": 24140, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8eaeaa00-e7d3-4143-857c-b986baa13670": {"__data__": {"id_": "8eaeaa00-e7d3-4143-857c-b986baa13670", "embedding": null, "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f", "node_type": "4", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "a95881b23515ae12921be0d3f9e7127b2dab627124e0150d21cb45aee4c5e11c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5af3419d-91d1-4a82-b265-3aa72b93416d", "node_type": "1", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "76e584b9c89e0ddaef426427a7ef4be950128155f768baa4a2e984731211600c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9974446-61a5-49d6-aad9-ad32e6949f97", "node_type": "1", "metadata": {}, "hash": "4466bc4fe7ff497bbebac438a0f9b99519205192e3fac8fc5edebf7be7b99656", "class_name": "RelatedNodeInfo"}}, "text": "\uf097   Step 1: Use initial seed points for partitioning\n                  iteration 0                           c13.61=A,c2  =B\n                                              D\"                 5     51 = (1,1)group - 1\n     45                                                   2.83 4.24 | C2 = (2,1)group\n                                    D               4 B C\n  235                                                           D\n  325                         C                     [1  2   4  5      XEuclidean distance\n                                                     1 1 3            X\n  105        A     B                           d(D,c1)=     (5\u22121)2+(4\u22121)2\n                                                            (5\u22122)2+(4\u22121)2 =5\n                                               d(D,c2)=                          =4.24\n\n\n          attribute  (XJ: weight index         Assign each object to the cluster\n                                               with the nearest seed point\n\n\n                                                                                            36\n---\nExample\n\n\n\uf097    Step 2: Compute new centroids of the current partition\n                iteration 1\n                                           Knowing the members of each\n     45                                    cluster, now we compute the new\n  335                                      centroid of each group based on\n  425                                      these new memberships.\n  11,5                                                 c1=(1,     1)\n     0.5\n          attribute(XJ: weight index         c2 =\uf0e62+3\uf0e7\n                                                   \uf0e8      4+5,      1+3+4\uf0f63  \uf0f7\n                                                                             \uf0f8\n                                                 =(11,      8)\n                                                      3     3\n\n\n                                                                                37\n---\nExample\n\n\n\uf097    Step 2: Renew membership based on new centroids\n\n\n                                               Compute the distance of all\n                                               objects to the new centroids\n                                              D' =|3.14     3.61  5    62= (,9group - 1\n                                                                                       c1 = (1,1)\n                                                        2.360.471.89            group\n                                                                 D\n                                                                5     X\n                                              Assign the membership to objects\n\n\n                                                                                                   38\n---\nExample\n\n\n\uf097    Step 3: Repeat the first two steps until its convergence\n                iteration 2\n   45                                       Knowing the members of each\n235                                         cluster, now we compute the new\n32.5                                        centroid of each group based on\n                                            these new memberships.\n 11,5                                        c1=\uf0e61+\uf0e7\n                                                  \uf0e8   22,    1+21\uf0f6=(11,\uf0f7\n                                                                   \uf0f8      2   1)\n   0.5\n                                             c2 =\uf0e64+\uf0e7  25,   3+24\uf0f6=(41,\uf0f7        31)\n         attribute 1 (XJ: weight index            \uf0e8                 \uf0f8       2     2\n                                                                                     39\n---\nExample\n\n\n\uf097     Step 3: Repeat the first two steps until its convergence\n\n\n                                                         Compute the distance of all\n                                                         objects to the new centroids\n                                                        D?     0.5   0.5  3.20  4.617   c1 = (14,1)group -1\n                                                              4.30  3.54  0.71  0.71 | 82 = (43,34)   group - 2\n                                                                                       X\n                                                           Stop due to no new assignment\n                                                           Membership in each cluster no\n                                                           longer change\n\n\n                                                                                                                 40\n---\nExerdse\n Exercise\n\n\n For the medicine data set, use K-means with the Manhattan distance (Taxicab/Rectilinear)\n metric for clustering analysis by setting K=2 and initialising seeds as\n C1 = A and C2 = C. Answer three questions as follows:\n\n\n 1.   How many steps are required for convergence?\n\n\n 2.   What are memberships of two clusters after convergence?\n\n\n 3.   What are centroids of two clusters after convergence?\n\n\n  Medicine          Weight          pH-Index                                               D\n\n\n                                                                                        C\n       A                1                1\n\n\n       B                2                1                            A     B\n\n\n       C                4                3\n\n\n       D                5                4\n\n\n                                                                                              41\n---\nK-means PartitioningmeansPardtoning\n\n\n                                     WhenK centroids are set/fixed,\n                                     they partition the whole data\n                                     space intoK mutually exclusive\n                                     subspaces to form a partition.\n\n\n                                     Changing positions of centroids\n                                     leads to a new partitioning.\n\n\n                                                                      42\n---\n   Rekevant Issues\n    Relevant Issues", "start_char_idx": 23315, "end_char_idx": 29380, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a9974446-61a5-49d6-aad9-ad32e6949f97": {"__data__": {"id_": "a9974446-61a5-49d6-aad9-ad32e6949f97", "embedding": null, "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "660ec437-9dd6-4a22-9f49-f9a187fd7c0f", "node_type": "4", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "a95881b23515ae12921be0d3f9e7127b2dab627124e0150d21cb45aee4c5e11c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8eaeaa00-e7d3-4143-857c-b986baa13670", "node_type": "1", "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}, "hash": "aa393d4c478b2c9b0de12ae22e342a90dc6202e0bf356f20210a2d592772f934", "class_name": "RelatedNodeInfo"}}, "text": "1.   How many steps are required for convergence?\n\n\n 2.   What are memberships of two clusters after convergence?\n\n\n 3.   What are centroids of two clusters after convergence?\n\n\n  Medicine          Weight          pH-Index                                               D\n\n\n                                                                                        C\n       A                1                1\n\n\n       B                2                1                            A     B\n\n\n       C                4                3\n\n\n       D                5                4\n\n\n                                                                                              41\n---\nK-means PartitioningmeansPardtoning\n\n\n                                     WhenK centroids are set/fixed,\n                                     they partition the whole data\n                                     space intoK mutually exclusive\n                                     subspaces to form a partition.\n\n\n                                     Changing positions of centroids\n                                     leads to a new partitioning.\n\n\n                                                                      42\n---\n   Rekevant Issues\n    Relevant Issues\n\n\n\uf097    Computational complexity\n     \u25e6 O(tKn), where n is number of objects, K is number of clusters, and t is\n         number of iterations. Normally, K, t << n.\n\uf097    Local optimum\n     \u25e6 sensitive to initial seed points\n     \u25e6 converge to a local optimum: maybe an unwanted solution\n\uf097    Other problems\n     \u25e6 Need to specify K, the number of clusters, in advance\n     \u25e6 Unable to handle noisy data and outliers (K-Medoids algorithm)\n     \u25e6 Not suitable for discovering clusters with non-convex shapes\n     \u25e6 Applicable only when mean is defined, then what about categorical\n         data? (K-mode algorithm)\n     \u25e6 how to evaluate the K-mean performance?\n\n\n                                                                                43", "start_char_idx": 28138, "end_char_idx": 30123, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea87b82e-88de-4165-9a2b-1344b34c87ba": {"__data__": {"id_": "ea87b82e-88de-4165-9a2b-1344b34c87ba", "embedding": null, "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02", "node_type": "4", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "6246ed0ea2c5a3c14c14bfa398d4f0ee29ad66804bc9ffd2c221b4b92416553d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea3021d5-9896-4ebc-82f0-2bbd551eec16", "node_type": "1", "metadata": {}, "hash": "961c0aff822232aa250195bae825033c892e99d53edcd7ec9f898dc580fdd77b", "class_name": "RelatedNodeInfo"}}, "text": "0  Ee542\n   EE542\n   Lecture | (: Hardware Accelerators in Cloud\n   Lecture 11: Hardware Accelerators in Cloud\n   Internet and Cloud Computing\n\n\n   Young Cho\n   Department of Electrical Engineering\n   University of Southern California\n\n\n                                            Internet and Cloud Computing\n---\nFrkorlty br Cbud Computer Uters\nPriority for Cloud Computer Users\n---\nOwrall Rerformanco\nOverall Performance\n \uf097 Trade-off\n   \u25e6 Speed vs Power vs Area vs Cost\n \uf097 HW Accelerations\n   \u25e6 NSP (Native Signal Processing)\n   \u25e6 GPU (Graphics Processing Units)\n   \u25e6 FPGA (Field Programmable Gate Arrays)\n---\nTrua Rerforuanco Measurement\nTrue Performance MeasurementSail Boat Speed: 10 miles/hourRace Car: 100 miles/hour\n                                                         Running: 5 miles/hour\n\n\n                         100 miles                             0.1 mile\n                      10LA                                 OoSe=\n                                                           ISe =\n---\n         Amdahls Law\n         Amdahl\u2019s Law\n\n\n ExTimenew    =ExTimeold\uf0b4\uf0ea\uf0eb\uf0e9(1\u2212Fractionenhanced)+Speedupenhanced\uf0f9\uf0fa\uf0fbFractionenhanced\n\n\nSpeedupoverall=    ExTimeold    =                       1\n                  ExTimenew       (1\u2212Fractionenhanced)+      Fractionenhanced\n                                                             Speedupenhanced\n\n\nBest you could ever hope to do:\n                Speedupmaximum     =            1\n                                     (1-Fractionenhanced)\n---\nBotkeneck belora Network\n Bottleneck before Network\n\n\n    Memory          Cores\n   Controller      Caches\n\n\n350-500 Gbps    Max 200 Gbps\n6th and 7th gen\n Intel Core i7   QPI I/O Hub              I/O Controller Hub\n\n\n                Max 200 Gbps\n\n\n                     GPU          SATA       PCI-Express        USB\n\n\n                               Max 6 Gbps    Max 64 Gbps\n\n\n    Memory          Display       Disk         10Gbps        Keyboard\n                                 Typical    Max 10 Gbps\n                              Magnetic RAID\n                              Max 1-1.7 Gbps\n---\n Bampk Solutkons\n  Example Solutions\n\n\n\uf097 Intel Optane SSD 905P\u25e6 ~$2,000\n    \u25e6 1.5TB\n    \u25e6 One of the first PCIe SSDs\n    \u25e6 Non-Volatile Memory Express\n    \u25e6 ~18Gbps Reads/~14Gbps Writes\n    \u25e6 PCIe 3.0: ~30Gbps\n\uf097 Western Digital Black SSD\u25e6 ~$220\n    \u25e6 1TB\n    \u25e6 Expansion card\n    \u25e6 PCIe 3.0 x8: ~64Gbps          crucial\n    \u25e6 ~30Gbps Reads/~13Gbps Writes\n\uf097 Crucial PCIe 4.0 M.2 SSD          P5 Plus M.2 2280\n    \u25e6 ~$120\n    \u25e6 1TB\n    \u25e6 ~50Gbps Reads/~40Gbps Writes\n\n\n                                                      7\n---\nNatto Sknal Frocetslng Extenskns\n Native Signal Processing Extensions\n\n\n  \uf097 HW Accelerated Special Instructions\n     \u25e6 Most General Purpose Processors\n  \uf097 Intel\n     \u25e6 MMX (MultiMedia eXtensions)\n     \u25e6 SSE (Streaming SIMD Extensions)\n     \u25e6 SSE2, SSE3, Supplemental SSE3, SSE4\n     \u25e6 AVX (Advanced Vector eXtensions)\n  \uf097 AMD\n     \u25e6 3DNow!\n  \uf097 PowerPC\n     \u25e6 AltiVec\n---\nSIMD archltecures\n  SIMD architectures\n\n\n  \uf097 A data parallel architecture\n  \uf097 Applying the same instruction to many data\n      \u25e6 Save control logic\n      \u25e6 A related architecture is the vector architecture\n      \u25e6 SIMD and vector architectures offer high performance for\n         vector operations.\n                                   Processing Unit    Data Memory\n  Instruction Memory Control Unit  Frocessing Unit   Data Memory\n       Instruction Stream          Processing Unit    Data Memory\n                                   (6) SHD          Data Stream\n---\nVector operattons\n  Vector operations", "start_char_idx": 0, "end_char_idx": 3595, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea3021d5-9896-4ebc-82f0-2bbd551eec16": {"__data__": {"id_": "ea3021d5-9896-4ebc-82f0-2bbd551eec16", "embedding": null, "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02", "node_type": "4", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "6246ed0ea2c5a3c14c14bfa398d4f0ee29ad66804bc9ffd2c221b4b92416553d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea87b82e-88de-4165-9a2b-1344b34c87ba", "node_type": "1", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "95af3dcb7abe014e07c49823641b4fe07d4f9947c9d82af0f73e6efc5e369459", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d91408d7-4a79-4004-bf69-d0a641843f17", "node_type": "1", "metadata": {}, "hash": "909342c5dc264fb4c820a5f44657800227b6be51e77541cb1f48e00af2718286", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 A data parallel architecture\n  \uf097 Applying the same instruction to many data\n      \u25e6 Save control logic\n      \u25e6 A related architecture is the vector architecture\n      \u25e6 SIMD and vector architectures offer high performance for\n         vector operations.\n                                   Processing Unit    Data Memory\n  Instruction Memory Control Unit  Frocessing Unit   Data Memory\n       Instruction Stream          Processing Unit    Data Memory\n                                   (6) SHD          Data Stream\n---\nVector operattons\n  Vector operations\n\n\n    \uf097 Vector addition Z = X + Y                                              \uf0e7x1\uf0f7\n                                                                             \uf0e6     \uf0f6     \uf0e7y1\uf0f7\n                                                                                         \uf0e6     \uf0f6     \uf0e6x1+y1\uf0f7\n                                                                                                     \uf0e7x2+y2\uf0f6\n          for (i=0; i<n; i++) z[i] = x[i] + y[i];                            \uf0e7x2\uf0f7+\uf0e7...\uf0f7\n                                                                             \uf0e7...\uf0f7\n                                                                                  \uf0e7xn\uf0f7   \uf0e7y2\uf0f7=\uf0e7\n                                                                                         \uf0e7yn\uf0f7        \uf0e7\n                                                                                                     \uf0e7xn......+yn\uf0f7\uf0f7\n                                                                                                                   \uf0f7\n                                                                             \uf0e7\n                                                                             \uf0e8     \uf0f7\n                                                                                   \uf0f8     \uf0e7\n                                                                                         \uf0e8     \uf0f7\n                                                                                               \uf0f8     \uf0e7\n                                                                                                     \uf0e8             \uf0f7\n                                                                                                                   \uf0f8\n    \uf097 Vector scaling Y = a * X\n          for(i=0; i<n; i++) y[i] = a*x[i];                                          \uf0e7x1\uf0f7\n                                                                                     \uf0e6      \uf0f6    \uf0e6a*x1\uf0f7\n                                                                                                 \uf0e7a*x2\uf0f6\n                                                                                a*\uf0e7...\uf0f7\uf0e7x2\uf0f7=\uf0e7\n                                                                                     \uf0e7xn\uf0f7        \uf0e7\n                                                                                                 \uf0e7a*xn\uf0f7......\uf0f7\n    \uf097 Dot product                                                                    \uf0e7      \uf0f7    \uf0e7           \uf0f7\n                                                                                                             \uf0f7\n         for(i=0; i<n; i++) r += x[i]*y[i];                                          \uf0e8      \uf0f8    \uf0e8           \uf0f8\n                                                   \uf0e7x1\uf0f7\n                                                   \uf0e6     \uf0f6    \uf0e7y1\uf0f7\n                                                              \uf0e6      \uf0f6\n                                                   \uf0e7x2\uf0f7\u2022\uf0e7...\uf0f7\n                                                   \uf0e7...\uf0f7\n                                                   \uf0e7xn\uf0f8\uf0f7      \uf0e7y2\uf0f7=x1*y1+x2*y2+......+xn*yn\n                                                              \uf0e7yn\uf0f8\uf0f7\n                                                   \uf0e7\n                                                   \uf0e8     \uf0f7    \uf0e7\n                                                              \uf0e8      \uf0f7\n---\n         SISD and SIMD wector operatkons\n          SISD and SIMD vector operations\n\n\n            \uf097 C = A + B\n               \u25e6 For (i=0;i<n; i++) c[i] = a[i] + b[i]\n\n\n   9.0 8.0 7.0 6.0 5.0 4.0 3.0 2.0 1.0                               C\nA                                          SISD\n                                                     10 9.0 8.0 7.0 6.0 5.0 4.0 3.0 2.0\n                                              +\nB  1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0\n\n\n     A     7.0 5.0 3.0 1.0\n           8.0 6.0 4.0 2.0           SIMD\n                                        +          8.0 6.0 4.0 2.0    C\n                                        +          9.0 7.0 5.0 3.0\n     B     1.0 1.0 1.0 1.0\n           1.0 1.0 1.0 1.0\n---\n                   Normalw SSE C Cod\n                    Normal vs. SSE C Code", "start_char_idx": 3037, "end_char_idx": 7721, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d91408d7-4a79-4004-bf69-d0a641843f17": {"__data__": {"id_": "d91408d7-4a79-4004-bf69-d0a641843f17", "embedding": null, "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02", "node_type": "4", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "6246ed0ea2c5a3c14c14bfa398d4f0ee29ad66804bc9ffd2c221b4b92416553d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea3021d5-9896-4ebc-82f0-2bbd551eec16", "node_type": "1", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "83f6d63644c11d614a2bb26db19cd1d98f1062b3470819f2d9c58ff6d96c5192", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0643bbc9-6cbd-47df-852a-05012ca010f8", "node_type": "1", "metadata": {}, "hash": "95e4e0660ca1ff1a9f273f5d7194d052ac6e4fd1b250038d92228ef7017f6f84", "class_name": "RelatedNodeInfo"}}, "text": "A     7.0 5.0 3.0 1.0\n           8.0 6.0 4.0 2.0           SIMD\n                                        +          8.0 6.0 4.0 2.0    C\n                                        +          9.0 7.0 5.0 3.0\n     B     1.0 1.0 1.0 1.0\n           1.0 1.0 1.0 1.0\n---\n                   Normalw SSE C Cod\n                    Normal vs. SSE C Code\n\n\n// Scalar\ninline void\nnormalize(std::vector<vec3>& data)\n{\n  for (int i=0;i<data.size();i++)\n  {\n     vec3& m = data[i];\n     m /= sqrtf( m[0]*m[0] + m[1]*m[1]\n+ m[2]*m[2] );\n  }\n}\n\n\n\n// SSE\ninline void normalize(std::vector<mat4x3>&\ndata)\n{\n   for (int i=0;i<data.size();i++)\n   {\n     vec4 mx = data[i][0];\n     vec4 my = data[i][1];\n     vec4 mz = data[i][2];\n\n     vec4 multiplier = 1.0f/Sqrt(mx*mx + my*my\n+ mz*mz);\n\n\n\n\n                                                     mx*=multiplier;\n                                                     my*=multiplier;\n                                                     mz*=multiplier;\n\n\n                                                     data[i][0]=mx;\n                                                     data[i][1]=my;\n                                                     data[i][2]=mz;\n                                                   }\n                                                }\n---\nNSP Accekeratbon 0n Ckud\nNSP Acceleration on Cloud\n\n\n \uf097 Integration of NSP tuned OS                    \uf097 Processor Specific Tuning\n     \u25e6 Clear Linux OS for Intel                       \u25e6 Intel AVX512 (Intel AVX-512)\n        Architecture                                  \u25e6 Intel Memory Protection\n                                                         Extensions\n                1I\n                [\n                11\n                                Apache Spalk\" 2.0.2    (Intel\" hardwvare Clear Liriux Optimized OS)Apache Spark\" 2,4,0\n                                  IGeneric 051\n---\nGraphkes Froccssing Untt\n Graphics Processing Unit\n\n\n  \uf097 NVidia Architecture\n      \u25e6 Tesla \u2013 960 cores, 1.4 Ghz, 1200W, yr 2008\n      \u25e6 Fermi \u2013 1792 cores, 1.15 Ghz, 900W, yr 2011\n      \u25e6 Kepler \u2013 4992 cores, 560 Mhz, 300W, yr 2014\n      \u25e6 Maxwell \u2013 4096 cores, 899 Mhz, 300W, yr 2015\n      \u25e6 Pascal \u2013 3840 cores, 1.3 Ghz, 250W, yr 2016\n      \u25e6 Volta \u2013 5120 cores, ?? Ghz, 300W, yr 2017\n      \u25e6 Turing \u2013 2560 cores, ?? Ghz, 70W, yr 2018\n  \uf097 AMD Architecture\n      \u25e6 TeraScale 1,2,3 \u2013 3300 cores, 830 Mhz, 375W, yr.", "start_char_idx": 7382, "end_char_idx": 9773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0643bbc9-6cbd-47df-852a-05012ca010f8": {"__data__": {"id_": "0643bbc9-6cbd-47df-852a-05012ca010f8", "embedding": null, "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02", "node_type": "4", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "6246ed0ea2c5a3c14c14bfa398d4f0ee29ad66804bc9ffd2c221b4b92416553d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d91408d7-4a79-4004-bf69-d0a641843f17", "node_type": "1", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "8ff038d5e1230235c0ffff668b89fc25763be7009a79fe25248c9ed71145e1f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1fd4b519-b79b-4728-9a14-11aea02859dd", "node_type": "1", "metadata": {}, "hash": "4955e09ceb1a329c935949025d8583241ea1ac141a57393e5d1565b70075cb25", "class_name": "RelatedNodeInfo"}}, "text": "? Ghz, 300W, yr 2017\n      \u25e6 Turing \u2013 2560 cores, ?? Ghz, 70W, yr 2018\n  \uf097 AMD Architecture\n      \u25e6 TeraScale 1,2,3 \u2013 3300 cores, 830 Mhz, 375W, yr. 2011\n      \u25e6 GCN gen 1,2,3 \u2013 8600 cores, 1 Ghz, 350W, yr 2016\n      \u25e6 GCN gen 4 \u2013 5000 cores, 1.34 Ghz, 185W, yr 2017\n      \u25e6 GCN gen 5 \u2013 4800 cores, 1.68 Ghz, 345W, yr 2017\n---\n                                                                                                                                                              SMX\n                                                                                                                                                                                                                                                           PolyiorphEngina _U\n                                                                                                                                                                                             Vcrer Futch\n                                                                                                                                                                                                                                Attrbuto Sniup                                                          Simam Ouiput\nGPUArchtuecuuresScheduler\n    GPU ArchitecturesCoreDlpatch UnitWbup                                                                                                                                                      Dlapatch Unlt                                                                        [Dispatch UnatSchedulerDlspaich Unt                Dispatch UnltWWupSchedulerDibpatch Unt\n                                                                                                                                                                                                                                               Register File (65,536 :                               32-bit)\n                                                                                                                                         PCI Express 3.0 Host InterfaceGore     Cora          Core          Cora           Core                                      SFU              Core          Core                  Cora         Gor           Coto          LDstSFU\n                                                                                                                                                           Giga Thread EngineCoraCora         Core          Core                         Core                        SFU              Core          Core          Gore    Cora         Gore          Coto          Lots         SFU\n                                              GPC                                                                                                                Gor            Coro]GPCICoroGord                          Goro          CoroRaster EngineLoStSFU                    eer           Coro:          Coro   Gorg          Coro          Gort          LostSFU\n                                                                                          Raster Engine\n                                                  SMXCUDA Core\n                                                           Polymorph Enqne 2.", "start_char_idx": 9625, "end_char_idx": 12929, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fd4b519-b79b-4728-9a14-11aea02859dd": {"__data__": {"id_": "1fd4b519-b79b-4728-9a14-11aea02859dd", "embedding": null, "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02", "node_type": "4", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "6246ed0ea2c5a3c14c14bfa398d4f0ee29ad66804bc9ffd2c221b4b92416553d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0643bbc9-6cbd-47df-852a-05012ca010f8", "node_type": "1", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "ae1fe53f392eb2952ff6b664f851f345c165451f894b0963a7879c242c0017a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aafc6440-ec25-454a-8b25-79ccd50c9ea8", "node_type": "1", "metadata": {}, "hash": "ade0a81d5ca6c34cb2746cca99c7f309333a94dbee7a2bbeacfaad06ee1cc635", "class_name": "RelatedNodeInfo"}}, "text": "SMXPolymouph Enqne20CoreGorg                                                 GortSMXICorePolmorphEnahe2.0Gord           Coro          LDSTSRu\n                                                                                                                                                                                                                                                       LDSTSFUPoluorphEEnqine2.0clSMXCoto          Coto           Gort   CoreCoro                    Gort                       SFu\n                                                                                                                                                                  Gort          Goio          Gord           Goro          Goro          Goro                                        Goro           Goic          Coro                 Coro|Goro                                SFU\n                                                                          Dispatch Pont                                                                           Gort          Goo           Coro           Goro          CoroGoro                    LDST          SFU             GoroCoro                     Goro    Goo          Coro|Goro                                SFu\n                                                                  Operand Gollector                                                                                                                                                                                                                                                             I\n                                                                                                                                                                  Goro          Coto          Goro                         Core]Goro                   LDSI          SFU             GorelCotc                    Goro    Coto         Goro          Goro                       SFU\n                                                                                                                                                                  Goro          Gord}Gord                                  Core Gord                   LDSI          SFU             GoroCord                     Goro   GoroGord1Coro                                          SFu\n                                           1            FP Unit                                          INT Unit                                                 Coro |CorgCort\n                                                                                                                                                                  CoreCoreCore                              Cor\n                                                                                                                                                                                                               Coro        GoroGoreLDST\n                                                                                                                                                                                                                           GoreGoreLDST                              SFU\n                                                                                                                                                                                                                                                                     SFU             GoreCout\n                                                                                                                                                                                                                                                                                     Gore                         Gor\n                                                                                                                                                                                                                                                                                                                  Core   coroCort\n                                                                                                                                                                                                                                                                                                                         CoreCort                    Gord\n                                                                                                                                                                                                                                                                                                                                                     GoreLdisiLoI               SFu\n                                                                                                                                                                                                                                                                                                                                                                                SFu\n                                                                                                                                                                  Core          CoreCor                     (Goro)         Core |GoroLDST                            SFu             GoroCon                      Goro   GoroGoro(oroLDISI                                      SFu\n                                                                            Result Queue                                                                                        Goto]Cor                    (Goro)         GoroGoroLDS                               SFU             GorolCon                     Goro   GoroGoro(GoroLDSTSFU\n                                                                                                                                                                  Cort          Coro          Cor           Cora           Cor           Cor           Lpsi          SFU             Coro]Coro                    Goro    Cord         Cor           GordLois                   SFU\n                                                                                                                                                                                Cor           Gort          Cora           Cord          CoreLds                     SFU             CoreCora                             Cord         Gort          Cord          LoistSFu\n                                                                                                                                                                          L2 Gache\n                                                                                                                                                                 Gor            Core]                       ICoto          Gore          Coro          LoST          Shu             Coto           Core                 Gora          Coro          Core          LDISTShu\n                                                                                                                                                                  Core          Goid          Coro          ICoro          Coro          Coro          LoST          SFU             Coro          Coro           Coto   Goro          Coro          Core          LDISTsfu\n                                                                                                                                                                                                                                                                            (Momory /L1 Cacho\n                                                                                                                                                                                                                                                                                                                                              Tor\n                                                                                                                                                                                                                                                                                                                                              Tor1                         Tox\n                                           1                                                                                                                                                                                                              Jotorconnoct Nolwork                                                                    1\n                                                         Polyorph Enghe2.0                                               Polyuoqph Engkue 2.0                                                             Polymomph Endine 2.0                                                     Polymnoqph Enghe 2 0\n                                                Sh                                                                                                                                               SuX                                                                      Sh\n                                                                                          Raster Engine                                                                                                                                          Raster Engine\n                                               GPC                                                                                                                                             GPC\n---\n        Slmpl Processing Flow\n          Simple Processing FlowGigaThread\n               CPU\n              Bridge\n                                 PCI Bus\n            CPU Memory\n1. Copy input data from CPU memory                  Interconnect\n   to GPU memory                                      L2\n                                                     DRAM\n                                            \u00a9 NVIDIA 2013\n---\n           Simple Processing Flow\n\n\n                                   PCI Bus\n\n\n1. Copy input data from CPU memory\n    to GPU memory\n2. Load GPU program and execute,\n    caching data on chip for\n    performance\n\n\n                                            \u00a9 NVIDIA 2013\n---\n           Simple Processing Flow\n\n\n                                   PCI Bus\n\n\n1. Copy input data from CPU memory\n    to GPU memory\n2. Load GPU program and execute,\n    caching data on chip for\n    performance\n3. Copy results from GPU memory to\n    CPU memory\n\n\n                                            \u00a9 NVIDIA 2013\n---\n  CUDAA Paralkel Compudns Ptform\n   CUDA Parallel Computing Platformwww.nvidia.com/getcuda\n\n\n                           Libraries              OpenACC              Programming\n Programming                                      Directives             Languages\n  Approaches               \u201cDrop-in\u201d            Easily Accelerate     Maximum Flexibility\n                          Acceleration                Apps", "start_char_idx": 12965, "end_char_idx": 24322, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aafc6440-ec25-454a-8b25-79ccd50c9ea8": {"__data__": {"id_": "aafc6440-ec25-454a-8b25-79ccd50c9ea8", "embedding": null, "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02", "node_type": "4", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "6246ed0ea2c5a3c14c14bfa398d4f0ee29ad66804bc9ffd2c221b4b92416553d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1fd4b519-b79b-4728-9a14-11aea02859dd", "node_type": "1", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "d0dc30a78c9c2ab0dcbc4925eda2c2d52895f55eb390d6289cb663ca6ba3b8ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9ea7b05-ca5e-4dd8-a297-544c2f112037", "node_type": "1", "metadata": {}, "hash": "1afa6f81a2b502d44cfb35d93fcbbb6c5b892f60fc4834d50a070ec70123bdfb", "class_name": "RelatedNodeInfo"}}, "text": "PCI Bus\n\n\n1. Copy input data from CPU memory\n    to GPU memory\n2. Load GPU program and execute,\n    caching data on chip for\n    performance\n\n\n                                            \u00a9 NVIDIA 2013\n---\n           Simple Processing Flow\n\n\n                                   PCI Bus\n\n\n1. Copy input data from CPU memory\n    to GPU memory\n2. Load GPU program and execute,\n    caching data on chip for\n    performance\n3. Copy results from GPU memory to\n    CPU memory\n\n\n                                            \u00a9 NVIDIA 2013\n---\n  CUDAA Paralkel Compudns Ptform\n   CUDA Parallel Computing Platformwww.nvidia.com/getcuda\n\n\n                           Libraries              OpenACC              Programming\n Programming                                      Directives             Languages\n  Approaches               \u201cDrop-in\u201d            Easily Accelerate     Maximum Flexibility\n                          Acceleration                Apps\n\n\n                                               Nsight IDE                CUDA-GDB\n Development                             Linux, Mac and Windows           debugger\n Environment                                GPU Debugging and           NVIDIA Visual\n                                                 Profiling                 Profiler\n                              LIVM             Enables compiling new languages to CUDA\nOpen Compiler                                   platform, and CUDA languages to other\n\n\n   Tool Chain                                               architectures\n                             SMX           Dynamic          HyperQ        GPUDirect\n                                          Parallelism\n                             conirol Logic\n    Hardware\n   Capabilities\n\n\n                                                          \u00a9 NVIDIA 2013\n---\n     Helb Wrldl\n     Hello World!\n\n\n    int main(void) {\n            printf(\"Hello World!\\n\");\n            return 0;\n    }\n                                            Output:\nStandard C that runs on the host            $ nvcc\n                                            hello_world.\nNVIDIA compiler (nvcc) can be used          cu\nto compile programs with no device          $ a.out\ncode                                        Hello World!\n                                            $\n\n\n                                       \u00a9 NVIDIA 2013\n---\nAddtkon o tho Devce:add()\nAddition on the Device: add()\n\n\n \uf097 Returning to our add() kernel\n\n\n       __global__ void add(int *a, int *b, int\n*c) {\n             *c = *a + *b;\n       }\n\n\n \uf097 Let\u2019s take a look at main()\u2026\n---\n     Addition on the Device:eatn () main()\nint main(void) {\n         int a, b, c;                    // host copies of a, b, c\n         int *d_a, *d_b, *d_c;           // device copies of a, b, c\n         int size = sizeof(int);\n\n\n         // Allocate space for device copies of a, b, c\n         cudaMalloc((void **)&d_a, size);\n         cudaMalloc((void **)&d_b, size);\n         cudaMalloc((void **)&d_c, size);\n\n\n         // Setup input values\n         a = 2;\n         b = 7;\n---\nSpark and CUDASpark program with automatic translation to GPU code\nSpark and CUDA\n     val output\n---\nGFU Executon            2       4\nGPU Execution\n\n\n \uf097 Prep Data.mapExtFunc(\n    p => Point(p.x*2, p.y*2),\n    mapFunction)\n \uf097 CUDA code            2      -2\n  __global__ void multiplyBy2(\u2026){\n    outx[i] = inx[i] * 2;\n    outy[i] = iny[i] * 2;\n  }\n \uf097 Run on GPU\n---\nSpark 0n GFU Performance\nSpark on GPU Performance\n\uf097 2-3x for Tesla over Power8 160 SMT\n---\nAn Interestng Skd Nota\nAn Interesting Side Note\n\n\n \uf097 Clear Example of Unsolved IC Power Problem\n \uf097 NVidia GTX 1070 (Advertised as a lower power than GTX1080)\n     \u25e6 Pasal GP104 GPU - exactly the same GPU as GTX1080\n     \u25e6 Total of 20 Streaming Multiprocessors (SM) Clusters\n     \u25e6 15 out of 20 SM Clusters are enabled\n     \u25e6 Why 5 SMs disabled?? (20 SMs are enabled in GTX 1080)\n \uf097 Our Research Approach\n     \u25e6 Benchmark SW for each SM\n     \u25e6 If command to disable SMs based on ID\n     \u25e6 By disabling one SM at a time, we ranked efficiencies\n \uf097 Research Conclusion\n     \u25e6 4 best SMs consume the same amount of power as 3 worst SMs\n     \u25e6 Average of 33% more power needed by bad processors!!\n---\nFeld Programmabl GataAtays\n Field Programmable Gate Arrays", "start_char_idx": 23384, "end_char_idx": 27653, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9ea7b05-ca5e-4dd8-a297-544c2f112037": {"__data__": {"id_": "f9ea7b05-ca5e-4dd8-a297-544c2f112037", "embedding": null, "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02", "node_type": "4", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "6246ed0ea2c5a3c14c14bfa398d4f0ee29ad66804bc9ffd2c221b4b92416553d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aafc6440-ec25-454a-8b25-79ccd50c9ea8", "node_type": "1", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "2cda2a337d194aa006dd700a3efbe720828f2a16fe7b9132e4ffecd450064d25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c92e1572-16e4-418f-af0c-797537181238", "node_type": "1", "metadata": {}, "hash": "e3f7ec8528a6f78e515c0ff43eb053820baf80af2f10b3f1c0fd57d1bdf9368f", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Great for Prototyping and Testing\n    \u25e6 Enable logic verification without high cost of fab\n    \u25e6 Reprogrammable \u2192 Research and Education\n    \u25e6 Meets most computational requirements\n    \u25e6 Options for transferring design to ASIC\n  \uf097 Technology Advances\n    \u25e6 Huge FPGAs are available\n       \uf096 Up to 200,000 Logic Units\n    \u25e6 Above clocking rate of 500 MHz\n  \uf097 Competitive Pricing\n---\nDestning wth FPGAs\n Designing with FPGAs\n\n\n  \uf097 Opportunities\n     \u25e6 Hardware logics are programmable\n     \u25e6 Immediate testing on the actual platform\n  \uf097 Challenges\n     \u25e6 Programming Environment\n        \uf096 Think and design in 2-D instead of 1-D\n        \uf096 Consider hardware limitations\n     \u25e6 Hardware Synthesis\n        \uf096 Smart language interpreter and translator\n        \uf096 Efficient HW resource utilization\n---\n   Full-Adder Using Array of Logics\n                                   FullAdder Usln3Atay df Lesks\n                                      Input     Output\n                                   C\u2019 A     B   S    C\n                             OUTS  0    0   0   0    0\nC\u2019                                 1    0   0   1    0\n                                   0    1   0   1    0\n                                   1    1   0   0    1\n                              Coul 0    0   1   1    0\n                               C   1    0   1   0    1\n                                   0    1   1   0    1\n                                   1    1   1   1    1\n---\nArogranabk Losk (FLAPALFLD)\n Programmable Logic (PLA/PAL/PLD)\n Inputs                              AND matrix\n    OH matrix                      O?Outputs\n                                   Oa\n                                   O4\n---\nMoro Complex Frogrammabl Losk\nMore Complex Programmable LogicIO control block\n                      Logic     Logic            Logic    Logic\n                      array\n                      block     array\n                                block            array\n                                                 block    array\n                                                          block\n                             Programmable interconnect array\n                      Logic     Logic            Logic    Logic\n                      array     array            array    array\n            I/O       block     block            block    block     I/O\n            control                                                 control\n            block     Logic     Logic            Logic    Logic     block\n                      array\n                      block     array\n                                block            array\n                                                 block    block\n                                                               array\n                      array\n                           LogicLogic            array\n                                                      LogicLogic\n                                array                     array\n                      block     block            block    block\n                                    IO control block\n---\nSlmpla Wra Swltch (4x4 Crosbar)\n Simple Wire Switch (4x4 Crossbar)\n\n\n                  Input Ports", "start_char_idx": 27658, "end_char_idx": 30828, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c92e1572-16e4-418f-af0c-797537181238": {"__data__": {"id_": "c92e1572-16e4-418f-af0c-797537181238", "embedding": null, "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02", "node_type": "4", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "6246ed0ea2c5a3c14c14bfa398d4f0ee29ad66804bc9ffd2c221b4b92416553d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9ea7b05-ca5e-4dd8-a297-544c2f112037", "node_type": "1", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "3db8d1da3a30c16d9ea44864afb29692cf8c8b88e0503d6341b0ada95552eff7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2b63948-ac3e-4edf-8048-4d0df3b7216d", "node_type": "1", "metadata": {}, "hash": "68590d831ad3c4131ba491e62a0a583df1d098f128886ef0af7499762fd8e7ed", "class_name": "RelatedNodeInfo"}}, "text": "Input Ports\n\n\n                                    Output Ports\n---\n  Bbck Memory (I8 Kblt)\n   Block Memory (18 Kbit)Port A\n                                     No Parity Bits                         With Parity Bits\n                  16K x1  8K x2     4K x4   2K x 8   1Kx16   512 X 32  2K x 9  IK x 18 512 X 36\n         I6K xl\n        SK x 2\n         4K x 4                       AlI Allowed                           None Allowed\n         2K x 8\nPort B   IK x 16                                                                                             DIA\n         512 x 32                                                                                            DIPA\n         2K x 9                                                                                              ADDRA        DOA\n         IK x 18                     None Allowed                            AllAllowed                      WEA         DOPA\n                                                                                                             ENA\n         512 x 36                                                                                            REGCEA\n                                                                                                             RSTA\n                                                                                                              CLKA\n        Combinations     Memory      Data   Parity      Data Input       ADDR     Total RAM\n                          Depth     Width   Width      Data Output                   (Kb)                    DIB\n                                                                                                             DIPB\n      18 Kb Block RAM With and Without Parity                                                                ADDRB        DOB\n           512 x 32        512               NA           [31.0]         [13.5]       16                     WEB         DOPB\n                                                                                                             ENB\n           512 x 36        512                            [35.0]         [13.5]       18                     REGCEB\n                                                                                                             RSTB\n           IK xl6          1024       16      NA          [15.0]         [13.4]       16                      CLKB\n                                                          [17.0]         [13.4]                                                09333\n           IK xl8          1024       16                                              18\n            2K x 8         2045              NA            [7.0]         [13.3]       16\n            2K x 9         2048                            [8.0]         [13.3]       18\n            4K x 4         4096              NA            [3.0]         [13.2]       16\n            SK x 2         8192              NA            [1:0]         [13.1]       16\n           16K x 1        16384              NA            [0.0]         [13.0]       16\n                                                                      6/13/2024       Internetworking and Dist. Systems               33\n---\nFPGA Archttecuura\n FPGA Architecture\n                    IO Blocks\n Programmable         (IOB)\n  Interconnect\n  Configurable\n  LogicBlock           Block\n     (CLB)           Memories\n---\n       Potenthal Accekeratkon\n       Potential Acceleration", "start_char_idx": 30817, "end_char_idx": 34286, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2b63948-ac3e-4edf-8048-4d0df3b7216d": {"__data__": {"id_": "a2b63948-ac3e-4edf-8048-4d0df3b7216d", "embedding": null, "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bfbe7970-7d60-42ae-8318-ae162a55ab02", "node_type": "4", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "6246ed0ea2c5a3c14c14bfa398d4f0ee29ad66804bc9ffd2c221b4b92416553d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c92e1572-16e4-418f-af0c-797537181238", "node_type": "1", "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}, "hash": "11f0f2a99c18c4594869c1c90d90b0b74784506cd7b5898b80deb3e6433f5872", "class_name": "RelatedNodeInfo"}}, "text": "A Typical Sequential                  A Custom Parallel\n         Processor                           Processor\n            Dald               Data\n                                      C1  X                   CZL\nzkcz           SigbmoUn\n   @oededcdbsReg                    dbodzcydb   Daaow\n           @ataou\n    12G'z        595 'SPS                 600 Mdz     300 MSPS\n2016 clock cycles                        1clocx cycle\n---\nUltraSCALE\n HardharekSoftwara Codestgn\n Hardware/Software Co-design33878\n  Corentel)  MASSIVE !   module filteri(clock;BANDWAinteger 1,j;Hindex\n                             always@(posedge clock)IDIH\n                             Tor (120; iMUMINITS ; 121+1)\n                                  tmp_kerne1[J]\n                            Amazon AWS f1\n---\nSpark Plus FPGA InAWS fl\n Spark plus FPGA in AWS f1\n                                  AWS\nSparkAPache     Run your code on CPU      Amazon\n                        c4, m4            Marketplace\n    user\n            lOffload hardwork on F1\n                                               Download\n                                               Accelerator\n                                               from Marketplacel\n                        F1 (FPGA)\n                       Chrstoforos Kachris  Www inaccel.com, 2017, #EUres8\n---\nSparkMIIlbExtension\n                   Spark Mllib Extenskon\n                                                                                                      Mllib    Mlib accel                       Python API\n        SparkSQL                     Streaming(graph) | (maching(accelaratedSparkGraphx      learning)|            maching\n                                                                                                                  learning)                               C API\n                                                                               Spark Core\n                                                                                       HDFS                                                     Accelerator\n                                                                                                             6/13/2024       Network Processor                   38\n---\nScamkess FPGA Intcgraton\n Seamless FPGA IntegrationCloud tenants\n                Cloud computing Applications\n                                                      IP Accelerator'$\n             VINEYARD Cloud Resource Manager          App store\n                       Accelerator API\n                         Scheduler\n                  Accelerator Virtualization\n                    Accelerator Controller                               3r party IP\n                                                    Library of Hardware  developers\n                                                    accelerators as IP\n                                                    Blocks\n                             DIE              Acc\n                             DFE              Acc        Performance\n                             DFE              Acc\n                                                          Energy\n           Processors      Dataflow     Proc +FPGA\n                 Heterogeneous Data Center\n---\nFPGA InAWS fI\nFPGA in AWS f110\n           c4 (36)", "start_char_idx": 34292, "end_char_idx": 37562, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6212db5-e774-4a3d-bd59-f234d3060b67": {"__data__": {"id_": "a6212db5-e774-4a3d-bd59-f234d3060b67", "embedding": null, "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1a595d0-18c7-4d7c-a42a-94be94156c78", "node_type": "4", "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}, "hash": "44e19ca1b509ce58dfff2c9a57beb8bcc8f7d09282fb563ae42d56fc9c7ae677", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f15d465-50a3-4780-830c-022d7a27f1a4", "node_type": "1", "metadata": {}, "hash": "eef32d64f101e528c63cdad5830a03fb7f7eb7d6da847fd511c3f241959f3990", "class_name": "RelatedNodeInfo"}}, "text": "0  EE542\n        EE5A2\n   Lecuure I2: Network with RDMA\n                                Lecture 12:Neavork wth RDMA\n    Internet and Cloud Computing\n    Young Cho\n    Department of Electrical Engineering\n    University of Southern California\n\n\n                                   6/13/2024                 1\n---\nEthemetTedhnokey Trerds\n Ethernet: Technology Trends\n\n\n  \uf097    Regular Ethernet adapters\n       \u25e6 Layer-2 adapters\n       \u25e6 Rely on host-based TCP/IP to provide network/transport functionality\n       \u25e6 Could achieve a high performance with optimizations\n\n\n  \uf097    TCP Offload Engines (TOEs)\n       \u25e6 Layer-4 adapters\n       \u25e6 Have the entire TCP/IP stack offloaded on to hardware\n       \u25e6 Sockets layer retained in the host space\n\n\n  \uf097    RDMA-aware adapters\n       \u25e6 Layer-4 adapters\n       \u25e6 Entire TCP/IP stack offloaded on to hardware\n       \u25e6 Support more features than TCP Offload Engines\n           \uf096 No sockets ! Richer RDMA interface !\n           \uf096 E.g., Out-of-order placement of data, RDMA semantics\n---\n                What is a TCP Offload Engine (TOE)?\n\n\n                                                                          TOE stack\n          Traditional TCP/IP stack\n                                                       User          Application or Library\n\n\n  User        Application or Library                                   Sockets Interface\n\n\n                Sockets Interface                                    TCP\n                                                                                         Data\n                       TCP                                             IP                Path\n                                                      Kernel\n\n\n                        IP                                         Device Driver\n Kernel\n\n\n                  Device Driver                                                Offloaded TCP\n\n\nHardware        Network Adapter                      Hardware                    Offloaded IP\n                  (e.g., 10GigE)\n\n\n                                                               Network Adapter (e.g., 10GigE)\n---\n                            RDMA\n\n\n\u2756A method for interconnecting platforms in high-\n speed networks that overcomes many of the\n difficulties encountered with traditional networks\n such as TCP/IP over Ethernet.\n    \u2013 new standards\n    \u2013 new protocols\n    \u2013 new hardware interface cards and switches\n    \u2013 new software\n---\n          Remote Direct Memory Access\n\u2756Remote\n    \u2013data transfers between nodes in a network\n\u2756Direct\n    \u2013no Operating System Kernel involvement in transfers\n    \u2013everything about a transfer offloaded onto Interface Card\n\u2756Memory\n    \u2013transfers between user space application virtual memory\n    \u2013no extra copying or buffering\n\u2756Access\n    \u2013send, receive, read, write, atomic operations\n---\n                  RDMA Benefits\n\n\n\u2756High throughput\n\u2756Low latency\n\u2756High messaging rate\n\u2756Low CPU utilization\n\u2756Low memory bus contention\n\u2756Message boundaries preserved\n\u2756Asynchronous operation\n---\n              RDMA Technologies\n\n\n\u2756InfiniBand \u2013 (41.8% of top 500 supercomputers)\n   \u2013 SDR 4x \u2013 8 Gbps\n   \u2013 DDR 4x \u2013 16 Gbps\n   \u2013 QDR 4x \u2013 32 Gbps\n   \u2013 FDR 4x \u2013 54 Gbps\n\u2756iWarp \u2013 internet Wide Area RDMA Protocol\n   \u2013 10 Gbps\n\u2756RoCE \u2013 RDMA over Converged Ethernet\n   \u2013 10 Gbps\n   \u2013 40 Gbps\n---\n           RDMA Architecture Layering\n\n\n                                   User Application\n                                    OFA Verbs API\n\n\n   OSI\n  Layers         RDMAP\n                   DDP\nTransport          MPA                        IB Transport API\n                   TCP                          IB Transport\nNetwork             IP                           IB Network\nData Link             Ethernet MAC & LLC                      IB Link\nPhysical                 Ethernet PHY                         IB PHY\n    CA       IWARP \u201cRNIC\u201d            RoCE \u201cNIC\u201d         InfiniBand \u201cHCA\u201d\n---\n                            Specification\n\n\n\u2756InfiniBand specification\n     \u2013 semantic description of required behavior\n     \u2013 no syntactic or operating system specific details\n     \u2013 implementations free to define their own API\n               \u2022   syntax for functions, structures, types, etc.\n\u2756OpenFabrics Alliance (OFA)\n     \u2013 one possible syntactic definition of an API\n     \u2013 in syntax, each \u201cverb\u201d becomes an equivalent \u201cfunction\u201d\n     \u2013 done to prevent proliferation of incompatible definitions\n     \u2013 was an OFA strategy to unify InfiniBand market\n---\n           Libraries that access RDMA\n\n\n\u2756MPI \u2013 Message Passing Interface\n    \u2013Main tool for High Performance Computing (HPC)\n        \u2013Physics, fluid dynamics, modeling and simulations\n    \u2013Many versions available\n        \u2022OpenMPI\n        \u2022MVAPICH\n        \u2022Intel MPI\n---\n           Layering with user level libraries\n\n\n                                      User Application\n                            User level libraries, such as MPI\n                                      OFA Verbs API", "start_char_idx": 0, "end_char_idx": 4951, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f15d465-50a3-4780-830c-022d7a27f1a4": {"__data__": {"id_": "1f15d465-50a3-4780-830c-022d7a27f1a4", "embedding": null, "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1a595d0-18c7-4d7c-a42a-94be94156c78", "node_type": "4", "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}, "hash": "44e19ca1b509ce58dfff2c9a57beb8bcc8f7d09282fb563ae42d56fc9c7ae677", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6212db5-e774-4a3d-bd59-f234d3060b67", "node_type": "1", "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}, "hash": "72aab8189cd6bd15dadc0328bb99b1b6a868f16aba8faf4db23ce5a2937cbab3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bb4dd21-cc54-40ba-9d6d-f00afbdd4c7c", "node_type": "1", "metadata": {}, "hash": "046331a0c9d28fd354cab633596d034b440dcc0d9ff747824850f1eb8bd2bfce", "class_name": "RelatedNodeInfo"}}, "text": "\u2756MPI \u2013 Message Passing Interface\n    \u2013Main tool for High Performance Computing (HPC)\n        \u2013Physics, fluid dynamics, modeling and simulations\n    \u2013Many versions available\n        \u2022OpenMPI\n        \u2022MVAPICH\n        \u2022Intel MPI\n---\n           Layering with user level libraries\n\n\n                                      User Application\n                            User level libraries, such as MPI\n                                      OFA Verbs API\n\n\n    OSI\n  Layers           RDMAP\n                     DDP\nTransport            MPA                        IB Transport API\n                     TCP                           IB Transport\nNetwork               IP                            IB Network\nData Link               Ethernet MAC & LLC                       IB Link\nPhysical                    Ethernet PHY                         IB PHY\n    CA        IWARP \u201cRNIC\u201d              RoCE \u201cNIC\u201d         InfiniBand \u201cHCA\u201d\n---\n   Additional ways to access RDMA\n\n\nFile systems\n  Lustre \u2013 parallel distributed file system for Linux\n  NFS_RDMA \u2013 Network File System over RDMA\nStorage appliances by DDN and NetApp\n  SRP \u2013 SCSI RDMA (Remote) Protocol \u2013 Linux kernel\n  iSER \u2013 iSCSI Extensions for RDMA \u2013 Linux kernel\n---\n      Addluonal ways t0 acceds RDMA\n       Additional ways to access RDMA\n\n\nPseudo sockets libraries\n  SDP \u2013 Sockets Direct Protocol \u2013 supported by Oracle\n  rsockets \u2013 RDMA Sockets \u2013 supported by Intel\n  mva \u2013 Mellanox Messaging Accelerator\n  SMC-R \u2013 proposed by IBM\n---\n   Similarities between TCP and RDMA\n\n\n\u2756Both utilize the client-server model\n\n\n\u2756Both require a connection for reliable transport\n\n\n\u2756Both provide a reliable transport mode\n    \u2013 TCP provides a reliable in-order sequence of bytes\n    \u2013 RDMA provides a reliable in-order sequence of messages\n---\n    How RDMA differs from TCP/IP\n\n\n\u2756\u201czero copy\u201d \u2013 data transferred directly from\nvirtual memory on one node to virtual memory\non another node\n\n\n\u2756\u201ckernel bypass\u201d \u2013 no operating system\ninvolvement during data transfers\n\n\n\u2756asynchronous operation \u2013 threads not\nblocked during I/O transfers\n---\n                            TCP RECV()\n\n\n         USER                  OPERATING SYSTEM                NIC  WIRE\n\n\n                                                          control\n              allocate metadata\n               recv()            add to tables\n                                   sleep                             data packets\n\n\n virtual                                          TCP\n             blocked                             buffers\nmemory                                                                ACKs\n                                   copy\n\n\n              access     status    wakeup\n---\n                         RDMA RECV()\n\n\n          USER                                CHANNEL ADAPTER                  WIRE\n\n\n                            allocate\n                            register\n                                                      recv queue\n\n\n                           recv()  metadata                 . . .\n\n\n               parallel\n  virtual      activity                                                control\nmemory                                                                       data packets\n                                                     completion queue\n                                             status    . . .\n                           poll_cq()                                           ACK\n                           access\n---\n                      RDMA access model\n\n\n\u2756Messages \u2013 preserves user's message boundaries\n\u2756Asynchronous \u2013 no blocking during a transfer, which\n    \u2013starts when metadata added to work queue\n    \u2013finishes when status available in completion queue\n\u2756 1-sided (unpaired) and 2-sided (paired) transfers\n\u2756 No data copying into system buffers\n    \u2013order and timing of send() and recv() are relevant\n        \u2022recv() must be waiting before issuing send()\n    \u2013memory involved in transfer is untouchable between start and\n     completion of transfer\n---\n                          Kernel Bypass\n\n\n\u2756User interacts directly with CA queues\n\u2756Queue Pair from program to CA\n     \u2013 work request \u2013 data structure describing data transfer\n     \u2013 send queue \u2013 post work requests to CA that send data\n     \u2013 secv queue \u2013 post work requests to CA that receive data\n\u2756Completion queues from CA to program\n     \u2013 work completion \u2013 data structure describing transfer status\n     \u2013 Can have separate send and receive completion queues\n     \u2013 Can have one queue for both send and receive completions\n---\nNARP\n iWARP\n\n\n \uf097 Internet Wide Area RDMA Protocol\n \uf097 RDMA over TCP/IP\n   \u25e6 compatible with the existing Internet\n     infrastructure\n \uf097 Uses RDMA and OS bypass to move data\n   without the CPU or OS being involved,\n   greatly increasing performance.\n \uf097 Protocol offload \u2013 RDMA-enabled\n   Network Interface Card (RNIC)\n---\nNetworkdng Performanco Bartker}\n Networking Performance BarriersPacket Processing\n                               Intermediate Buffer Copies\n                                         Command Context Switches\n\n\n                       application     app buffer   I/O cmd                % CPU Overhead\n              user                                                 100%\n                       I/O library                  I/O cmd              application to OS\n                          context switch                                 context switches            40%\n   server                                                                Intermediate buffer copies  20%\n   software            OS    TCP/IP    OS buffer    I/O cmd\n             kernel                                                      transport processing        40%\n\n\n                       device          driver bufferI/O cmd\n   software            driver", "start_char_idx": 4505, "end_char_idx": 10291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9bb4dd21-cc54-40ba-9d6d-f00afbdd4c7c": {"__data__": {"id_": "9bb4dd21-cc54-40ba-9d6d-f00afbdd4c7c", "embedding": null, "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1a595d0-18c7-4d7c-a42a-94be94156c78", "node_type": "4", "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}, "hash": "44e19ca1b509ce58dfff2c9a57beb8bcc8f7d09282fb563ae42d56fc9c7ae677", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f15d465-50a3-4780-830c-022d7a27f1a4", "node_type": "1", "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}, "hash": "8c2cccf5145a6cc6a9b1741b4fd3693ebb243cf55eb9a1761735d22dea9a20ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2546559e-c7e9-44a4-b1d1-c998886715a3", "node_type": "1", "metadata": {}, "hash": "431f7a7ab2c7fce80081b1481a3f95c44967d4c85a19dde4692da4e8213c3366", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Internet Wide Area RDMA Protocol\n \uf097 RDMA over TCP/IP\n   \u25e6 compatible with the existing Internet\n     infrastructure\n \uf097 Uses RDMA and OS bypass to move data\n   without the CPU or OS being involved,\n   greatly increasing performance.\n \uf097 Protocol offload \u2013 RDMA-enabled\n   Network Interface Card (RNIC)\n---\nNetworkdng Performanco Bartker}\n Networking Performance BarriersPacket Processing\n                               Intermediate Buffer Copies\n                                         Command Context Switches\n\n\n                       application     app buffer   I/O cmd                % CPU Overhead\n              user                                                 100%\n                       I/O library                  I/O cmd              application to OS\n                          context switch                                 context switches            40%\n   server                                                                Intermediate buffer copies  20%\n   software            OS    TCP/IP    OS buffer    I/O cmd\n             kernel                                                      transport processing        40%\n\n\n                       device          driver bufferI/O cmd\n   software            driver\n\n\n   hardware\n           I/O Adapter                 adapter bufferI/O cmdI/O cmd\n\n\n                                 standard Ethernet\n                                 TCP/IP packet\n---\nElkato Networkdng Perfrmanco Bantkrs\n Eliminate Networking Performance Barriers\n With iWARP\n           WthNARP\n                                    Packet Processing\n                                              Intermediate Buffer Copies\n                                                              Command Context Switches\n\n\n                                   application             app buffer\n                                                                     app bufferI/O cmd                   % CPU Overhead\n                     user                                                                       100%\n                                   I/O library                                I/O cmd                 application to OS\n                                       context switch                                                 context switches              40%\n    server                                                                                       60%  application to OS\n                                           TCP/IP                                                     Intermediate buffer copies    20%\n    software                       OS\n                                     OS                    OS buffer          I/O cmd            40%  context switches              40%\n                   kernel                                                                             application to OS\n                                                                                                      transport processing          40%\n                                                                                                                                       40%\n                                                                                                      context switches\n                                                                                                      Intermediate buffer copies    20%\n                                   device\n                                         device            driver buffer     I/O cmd\n     software                      driver\n                                         driver\n                                                                                                         Transport (TCP) offload\n     hardware\n                                           TCP/IP          adapter bufferI/O cmd cmdI/O cmdI/O           RDMA / DDP\n            standardI/O Adapter\n            Ethernet                                                                                     User-Level Direct Access/\n              TCP/IP                                                                                      OS Bypass\n               packet\n\n\n                                                 standard Ethernet\n                                                 TCP/IP packet\n---\nNARPProtocol Stack\niWARP Protocol StackiWARP                     TraditionalTCP\n        Verbs API                            Sockets API\n                            Software\n         RDMAP                                   TCP\n           DDP                                    IP\n     MPA                       Hardware\n     TCP        SCTP       \u25ab RDMAP \u2013 RDMA protocol\n                           \u25ab DDP \u2013 Direct Data Placement\n            IP               protocol\n                           \u25ab MPA \u2013 Marker PDU Aligned\n                             Framing Layer\n---\nNARPProtocol Stack\niWARP Protocol Stack\n \uf097 Verbs layer is the user-level interface to\n   the RDMA-enabled NIC.\n \uf097 RDMAP layer is responsible for RDMA\n   operations, joint buffer management with\n   DDP.\n \uf097 DDP layer is used for direct zero-copy\n   data placement, as well as segmentation\n   and reassembly.\n \uf097 MPA layer assigns boundaries to DDP\n   messages\n---\n   RDMA over Convensod Ethemet\n    RDMA over Converged Ethernet\n\n\n                               RDMA Application / ULP\n                                 OFA Verbs\n                                  InterfaceOFA* Stack\n\n\n      IB                                IB\n   Transport                        Transport\n   Protocol                          Protocol\n\n\nNetwork Layer                     Network Layer\n\n\n  InfiniBand                         Ethernet\n  Link Layer                        Link Layer\n   InfiniBand        RoCE             RoCE\n                   Specification\n\n\n  InfiniBand                        Ethernet\n Management                       Management\n\n\n                                 RoCEv2 Update from the\n                                                  IBTA 25\n---\n     ThoRoCEPeckot FonextInfiniBandRoCEThe RoCE Packet Format\n\n\n  LRH      L3 Hdr      BTH+            IB Payload           ICRC  VCRC\n(L2 Hdr)              (L4 Hdr)\n                                    No Changes\n\n\n Eth L2    L3 Hdr      BTH+            IB Payload           ICRC    FCS\n Header               (L4 Hdr)\n\n\n                             RoCEv2 Update from the\n                                           IBTA 26\n---\nRoCE\u2013 Extension\nRoCEv2              Exucukn\n\n\n                                        RDMA Application / ULP                         Software\n                                             OFA Verbs\n                                               Interface\n                                               OFA* Stack\n\n\n                         IB                         IB                         IB\n                     Transport                  Transport                  Transport\n                      Protocol                   Protocol                   Protocol   Typically HW\n\n\n                                                                              UDP\n                 IB Network Layer          IB Network LayerRoCEv2Specification IP", "start_char_idx": 9058, "end_char_idx": 16233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2546559e-c7e9-44a4-b1d1-c998886715a3": {"__data__": {"id_": "2546559e-c7e9-44a4-b1d1-c998886715a3", "embedding": null, "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1a595d0-18c7-4d7c-a42a-94be94156c78", "node_type": "4", "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}, "hash": "44e19ca1b509ce58dfff2c9a57beb8bcc8f7d09282fb563ae42d56fc9c7ae677", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9bb4dd21-cc54-40ba-9d6d-f00afbdd4c7c", "node_type": "1", "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}, "hash": "8b1e807376615ab3f3186fb7383bdb9bdb076a2f323871dc7b1d5e43486a90fa", "class_name": "RelatedNodeInfo"}}, "text": "LRH      L3 Hdr      BTH+            IB Payload           ICRC  VCRC\n(L2 Hdr)              (L4 Hdr)\n                                    No Changes\n\n\n Eth L2    L3 Hdr      BTH+            IB Payload           ICRC    FCS\n Header               (L4 Hdr)\n\n\n                             RoCEv2 Update from the\n                                           IBTA 26\n---\nRoCE\u2013 Extension\nRoCEv2              Exucukn\n\n\n                                        RDMA Application / ULP                         Software\n                                             OFA Verbs\n                                               Interface\n                                               OFA* Stack\n\n\n                         IB                         IB                         IB\n                     Transport                  Transport                  Transport\n                      Protocol                   Protocol                   Protocol   Typically HW\n\n\n                                                                              UDP\n                 IB Network Layer          IB Network LayerRoCEv2Specification IP\n\n\n                     InfiniBand                 Ethernet                   Ethernet\n                    Link Layer                  Link Layer                Link Layer\n                     InfiniBand      RoCE         RoCE                     RoCE v2\n                                  Specification\n\n\n                    InfiniBand                Ethernet / IP             Ethernet / IP\n                   Management                 Management                Management\n                                              RoCEv2 Update from the\n                                                                  IBTA 27\n---\nRoCEv2\n     RoCE- IP Routable Packet FormatIP Rouebl Pecket FonmatRoCERoCEv2\n\n\n                             EtherType indicates\n                             that packet is RoCE\n                          (i.e. next header is IB GRH)\n\n\n                           EtherType\n                Eth L2          IB GRH        IB BTH+                   IB Payload       ICRC        FCS\n               Header                          (L4 Hdr)\n\n\n                     EtherType    Proto #HeaderPort #IB BTH+\n         Eth L2              IP           UDP                                IB Payload        ICRC       FCS\n         Header           Header                     (L4 Hdr)\n\n\n    EtherType indicates\n     that packet is IP\n   (i.e. next header is IP)                      UDP dport number Indicates\n                          ip.protocol_number      that next header is IB.BTH\n                       indicates that packet is UDP\n                                                       RoCEv2 Update from the\n                                                                           IBTA 28\n---\nModker RDMA\n Modern RDMA\n\n\n \u2022 Several major vendors: Qlogic (Infiniband), Mellanox, Intel,\n    Chelsio, others\n\n\n \u2022 RDMA has evolved from the U/Net approach to have three\n    \u201cmodes\u201d\n      \u2022 Infiniband (Qlogic PSM API): one-sided, no \u201cconnection\n         setup\u201d\n      \u2022 More standard: \u201cqpair\u201d on each side, plus a binding\n         mechanism (one queue is for the sends, or receives, and\n         the other is for sensing completions)\n      \u2022 One-sided RDMA: after some setup, allows one side to\n         read or write to the memory managed by the other side,\n         but pre-permission is required\n      \u2022 RDMA + VLAN: needed in data centers with multitenancy\n---\n                Software RDMA Drivers\n\n\n\u2756Softiwarp\n    \u2013 www.zurich.ibm.com/sys/rdma\n    \u2013 open source kernel module that implements iWARP\n      protocols on top of ordinary kernel TCP sockets\n    \u2013 interoperates with hardware iWARP at other end of wire\n\n\n\u2756Soft RoCE\n    \u2013 www.systemfabricworks.com/downloads/roce\n    \u2013 open source IB transport and network layers in software\n      over ordinary Ethernet\n    \u2013 interoperates with hardware RoCE at other end of wire", "start_char_idx": 15126, "end_char_idx": 19069, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e620e89b-651b-40b7-8a0b-4e371f2d48da": {"__data__": {"id_": "e620e89b-651b-40b7-8a0b-4e371f2d48da", "embedding": null, "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f23e7729-edc0-45ba-90c9-377b39803a2c", "node_type": "4", "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "hash": "10b689e89aaceccff2d56f181319717b73611e6c186d2f9eab5951d598288185", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f036aca-07f2-4441-8410-0f0ba836a7f6", "node_type": "1", "metadata": {}, "hash": "cc189bdc622a50ac06f605e43f2fadeb351c5b6b37dac8f16cff48c45d8833a4", "class_name": "RelatedNodeInfo"}}, "text": "0  EE 542\n   EE 542\n   Lecuure I3: Hadoop and Spark in the Cloud\n                                            Lecture 13:Hadoop and Spark In the Clud\n   Internet and Cloud Computing\n\n\n   Young Cho\n   Department of Electrical Engineering\n   University of Southern California\n\n\n                              Some of the Slides borrowed from UC Berkeley AMP Lab1\n---\nMapReduco\n MapReduce\n\n\n \uf097 Programming model for data-intensive\n   computing on commodity clusters\n \uf097 Pioneered by Google\n    \u25e6 Processes 20 PB of data per day\n \uf097 Popularized by Apache Hadoop project\n    \u25e6 Used by Yahoo!, Facebook, Amazon, \u2026\n---\n Hadboop Cluster\n  Hadoop Cluster\n\n\n                          Aggregation switch            8 gigabitgigabit\n            Rack switch\n   Node        Node        Node       Node        Node   Node\n   Disks       Disks      Disks       Disks      Disks   Disks\n\uf097 40 nodes/rack, 1000-4000 nodes in cluster\n\uf097 1 Gbps bandwidth in rack, 8 Gbps out of rack\n\uf097 Node specs (Facebook):\n   8-16 cores, 32 GB RAM, 8\u00d71.5 TB disks, no RAID\n---\nHadoop Cluster\n---\nChalknses 6f Ckud Envronment\nChallenges of Cloud Environment\n\n\n \uf097 Cheap nodes fail, especially when you have many\n    \u25e6 Mean time between failures for 1 node = 3 years\n    \u25e6 MTBF for 1000 nodes = 1 day\n    \u25e6 Solution: Build fault tolerance into system\n\n\n \uf097 Commodity network = low bandwidth\n    \u25e6 Solution: Push computation to the data\n\n\n \uf097 Programming distributed systems is hard\n    \u25e6 Solution: Restricted programming model: users\n      write data-parallel \u201cmap\u201d and \u201creduce\u201d functions,\n      system handles work distribution and failures\n---\nHadoop Components\n Hadoop Components\n\n\n  \uf097 Distributed file system (HDFS)\n    \u25e6 Single namespace for entire cluster\n    \u25e6 Replicates data 3x for fault-tolerance\n\n\n  \uf097 MapReduce framework\n    \u25e6 Runs jobs submitted by users\n    \u25e6 Manages work distribution & fault-tolerance\n    \u25e6 Colocated with file system\n---\nHadoop Dlstrlbuted Fll System\n Hadoop Distributed File System\n\n\n \uf097 Files split into 128MB           Namenode\n    blocks                                       File11\n \uf097 Blocks replicated                              2\n                                                  3\n    across several                                4\n    datanodes (often 3)\n \uf097 Namenode stores\n    metadata (file names,\n    locations, etc)\n \uf097 Optimized for large           1\n                                 2     2\n                                       1      1\n                                              4   3\n                                                  2\n    files, sequential reads      4     3      3   4\n \uf097 Files are append-only              Datanodes\n---\nMapReduce Execution Details\n\n\n \uf097 Mappers preferentially scheduled on same\n   node or same rack as their input block\n    \u25e6 Minimize network use to improve\n     performance\n\n\n \uf097 Mappers save outputs to local disk before\n   serving to reducers\n    \u25e6 Allows recovery if a reducer crashes\n    \u25e6 Allows running more reducers than # of\n     nodes\n---\n        Fault Tokranco In MapReduco\n        Fault Tolerance in MapReduce\n\n\n        1. If a task crashes:\n            \u25e6 Retry on another node\n              \uf096 OK for a map because it had no dependencies\n              \uf096 OK for reduce because map outputs are on disk\n            \u25e6 If the same task repeatedly fails, fail the job or\n              ignore that input block\n\n\n\u27a2Note: For the fault tolerance to work, user\n   tasks must be deterministic and side-effect-free\n---\nFault Tolerance in MapReduce\n\n\n2. If a node crashes:\n   \u25e6 Relaunch its current tasks on other nodes\n   \u25e6 Relaunch any maps the node previously ran\n      \uf096 Necessary because their output files were lost\n        along with the crashed node\n---\nFault Tolerance in MapReduce\n\n\n3. If a task is going slowly (straggler):\n   \u2013 Launch second copy of task on another node\n   \u2013 Take the output of whichever copy finishes\n     first, and kill the other one\n\n\n \u2022 Critical for performance in large clusters\n   (many possible causes of stragglers)\n---\nAmazon Elastkc MapReduco\n Amazon Elastic MapReduce", "start_char_idx": 0, "end_char_idx": 4052, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f036aca-07f2-4441-8410-0f0ba836a7f6": {"__data__": {"id_": "1f036aca-07f2-4441-8410-0f0ba836a7f6", "embedding": null, "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f23e7729-edc0-45ba-90c9-377b39803a2c", "node_type": "4", "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "hash": "10b689e89aaceccff2d56f181319717b73611e6c186d2f9eab5951d598288185", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e620e89b-651b-40b7-8a0b-4e371f2d48da", "node_type": "1", "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "hash": "8b68e8e94d8b54ec665a215481a92abeb513476317d6651865c7dee3224fc504", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64b7de43-188b-49be-8a2b-fb1d3cde6b41", "node_type": "1", "metadata": {}, "hash": "436388b71054a90862664f82888a13883a753eae871943dcc3cc33a3672099d0", "class_name": "RelatedNodeInfo"}}, "text": "\u27a2Note: For the fault tolerance to work, user\n   tasks must be deterministic and side-effect-free\n---\nFault Tolerance in MapReduce\n\n\n2. If a node crashes:\n   \u25e6 Relaunch its current tasks on other nodes\n   \u25e6 Relaunch any maps the node previously ran\n      \uf096 Necessary because their output files were lost\n        along with the crashed node\n---\nFault Tolerance in MapReduce\n\n\n3. If a task is going slowly (straggler):\n   \u2013 Launch second copy of task on another node\n   \u2013 Take the output of whichever copy finishes\n     first, and kill the other one\n\n\n \u2022 Critical for performance in large clusters\n   (many possible causes of stragglers)\n---\nAmazon Elastkc MapReduco\n Amazon Elastic MapReduce\n\n\n \uf097 Web interface and command-line tools\n   for running Hadoop jobs on EC2\n \uf097 Data stored in Amazon S3\n \uf097 Monitors job and shuts machines after\n   use\n---\n                Eastk MapReduco Ul\n                Elastic MapReduce UIContact Us                                                                                     Create an AWS Account\n         amazon                                     About AWS         Products        Solutions                         Support        Your Account\n         webservices\"                                                                                  Resources\nHome    Resources   AWS Management Console   BETA    Amazon Elastic MapReduce                                     Welcome, Rad Lab     Settings   Sign Out\n   Amazon EC2       Amazon Elastic          Amazon\n                      MapReduce            CloudFront\n   Your Elastic MapReduce Job Flows\n    Region:    US East         Create Newy Job Flm     Terminate                                                        ShowlHide     Refresh     Help\n   viewing:                                                                                                          I<               Job Flows\n         Name                         State                    Creation Date            Elapsed Time         Normalized Instance Hours\n         My Job Flow                     STARTING              2009-08-19 14.50 PDT     0 hours 0 minutes\n      Job Flow selected\n       Id:                           j-46JLOYQZZPHI                            Creation Date:               2009-08-19 14.50 PDT\n        Name:                        My Job Flow'                             Start Date:\n        State:                       STARTING                                  End Date:\n        Last State Change Reason:    Starting instances\n        Availability Zone:           us-east-Ib                               Instance Count:\n               2008  2009, Amazon Web Services LLC or its affiliatesAll right reserved:Feedback     Support    Privacy Policy    Terms of Use\n---\nMapReduce\n\n\n \uf097 Programming model for data-intensive\n   computing on commodity clusters\n \uf097 Pioneered by Google\n   \u25e6 Processes 20 PB of data per day\n \uf097 Popularized by Apache Hadoop project\n   \u25e6 Used by Yahoo!, Facebook, Amazon, \u2026\n \uf097 Industry Trending Toward Spark\n   \u25e6 Quickly Being Adopted by Big Data Industry\n---\nVmtatons &MapReduce\n                   Limitations ofMapReduca\n \uf097 MapReduce is great at one-pass computation,\n    but inefficient for multi-pass algorithms\n \uf097 No efficient primitives for data sharing\n \uf097 State between steps goes to distributed file\n    system\n \uf097 Slow due to replication & disk storage\n \uf097 No control of data partitioning across steps\n---\nSpark Procrammlng Mdel\n Spark Programming Model\n\n\n  \uf097 Extends MapReduce with primitives for efficient\n    data sharing\n    \u25e6 \u201cResilient distributed datasets\u201d\n  \uf097 Open source in Apache Incubator\n    \u25e6 Growing community with 100+ contributors\n  \uf097 APIs in Java, Scala & Python\n---\n            Retllkent Dbtibuted Dataseds (RDDS)\n            Resilient Distributed Datasets (RDDs)\n\n\n             \uf097 Collections of objects stored across a cluster\n             \uf097 User-controlled partitioning & storage (RAM, disk, \u2026)\n             \uf097 Automatically rebuilt on failure\n\n\n urls = spark.textFile(\u201chdfs://...\u201d)                                     Known to be\n records = urls.map(lambda s: (s, 1))                                  hash-partitioned\n counts = records.reduceByKey(lambda a, b: a + b)\n bigCounts = counts.filter(lambda (url, cnt): cnt > 10)                        Also known\n\n\n                                                       map        reduce      filterInput file\nbigCounts.cache()\n\n\nbigCounts.filter(\n   lambda (k,v): \u201cnews\u201d in k).count()\n\n\nbigCounts.join(otherPartitionedRDD)\n---\nSparkSpark", "start_char_idx": 3363, "end_char_idx": 7882, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "64b7de43-188b-49be-8a2b-fb1d3cde6b41": {"__data__": {"id_": "64b7de43-188b-49be-8a2b-fb1d3cde6b41", "embedding": null, "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f23e7729-edc0-45ba-90c9-377b39803a2c", "node_type": "4", "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "hash": "10b689e89aaceccff2d56f181319717b73611e6c186d2f9eab5951d598288185", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f036aca-07f2-4441-8410-0f0ba836a7f6", "node_type": "1", "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "hash": "f6004b760a01768248e86eed89c5a426d66f917d7877281a86701578c531338e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e7b8a63-62c5-4b17-82e1-432009b18bf8", "node_type": "1", "metadata": {}, "hash": "a59a7763c411954ec82d7ad876e8c03ccadd12c1504af0ee9b7ecdffb3cb7095", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Collections of objects stored across a cluster\n             \uf097 User-controlled partitioning & storage (RAM, disk, \u2026)\n             \uf097 Automatically rebuilt on failure\n\n\n urls = spark.textFile(\u201chdfs://...\u201d)                                     Known to be\n records = urls.map(lambda s: (s, 1))                                  hash-partitioned\n counts = records.reduceByKey(lambda a, b: a + b)\n bigCounts = counts.filter(lambda (url, cnt): cnt > 10)                        Also known\n\n\n                                                       map        reduce      filterInput file\nbigCounts.cache()\n\n\nbigCounts.filter(\n   lambda (k,v): \u201cnews\u201d in k).count()\n\n\nbigCounts.join(otherPartitionedRDD)\n---\nSparkSpark\n\n\n  \uf097 In-Memory Computation\n     \u25e6 For 64-bit computers TB of data in RAM\n     \u25e6 Designed to transform data in-mem and not in disk\n     \u25e6 Supports parallel distributed processing of data\n     \u25e6 100x in memory and 10x on disk then Hadoop\n  \uf097 General programming model\n     \u25e6 Use normal sequential programming\n     \u25e6 No need for maps and reduce operations\n---\nSparkKcy Adianta83s\n Spark: Key Advantages\n\n\n \uf097 Ability for On-disk Data Sorting\n    \u25e6 Tuned for large scale of data sorting on disk\n    \u25e6 The world record of on-disk large scale data sorting\n \uf097 Efficient Use of Cache\n    \u25e6 Mesos which is a distributed system kernel for\n       caching the intermediate dataset\n    \u25e6 Multiple iterations on the cached dataset\n \uf097 In-memory Tuned Library\n    \u25e6 MLlib library for in-memory tuned operations\n \uf097 Faster Launch with Virtual Machine\n---\n              Clustering\n               Clustering\n\n\n                                    E.g. archaeological dig\n\n\n        Grouping data according to\n                 similarity\n\n\nDistance North\n\n\n                                                    Distance East\n---\n                Clustering\n\n\n                                    E.g. archaeological dig\n\n\n        Grouping data according to\n                   similarity\n\n\nDistance North\n\n\n                                                      Distance East\n---\n               Clustering with Spark\n     K-Means: preliminaries\n\n\n           Benefits                        E.g. archaeological dig\n\n\n           \u2022 Popular\n           \u2022 Fast\n           \u2022 Conceptually straightforward\n\n\nDistance North\n\n\n                                                           Distance East\n---\n            Clustering wth Spark\n             Clustering with Spark\n     K-Means: preliminaries\n\n\n          Data: Collection of values\n\n\n           data = lines.map(line=>\n                parseVector(line))\n\n\nFeature 2\n\n\n                                      Feature 1\n---\n              Clustering with Spark\n     K-Means: preliminaries\n\n\n           Dissimilarity:\n           Squared Euclidean distance\n\n\n            dist = p.squaredDist(q)\n\n\nFeature 2\n\n\n                                       Feature 1\n---\n                                         Clustering with Spark\n           K-Means: preliminaries\n\n\n                               K = Number of clusters\n\n\n                                 Data assignments to clusters\n                                  S, S,. . ., SK12\n\n\nFeature 2\n\n\n                                                                Feature 1\n---\n                                        Clustering with Spark\n           K-Means: preliminaries\n\n\n                              K = Number of clusters\n\n\n                                Data assignments to clusters\n                                 S, S,. . ., SK12\n\n\nFeature 2\n\n\n                                                               Feature 1\n---\n                 Clustering with Spark\n      K-Means Algorithm\n\n\n             \u2022 Initialize K cluster centers\n             \u2022 Repeat until convergence:\n                 Assign each data point to\n                 the cluster with the\n                 closest center.\n                 Assign each cluster\n                 center to be the mean of\n                 its cluster\u2019s data points.\n\n\nFeature 2Feature 1\n---\n                 Clustering with Spark\n      K-Means Algorithm\n\n\n             \u2022 Initialize K cluster centers\n             \u2022 Repeat until convergence:\n                 Assign each data point to\n                 the cluster with the\n                 closest center.\n                 Assign each cluster\n                 center to be the mean of\n                 its cluster\u2019s data points.\n\n\nFeature 2Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n            Assign each data point to\n            the cluster with the\n            closest center.\n            Assign each cluster\n            center to be the mean of\n            its cluster\u2019s data points.Feature 2\n                                                 Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n       \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n            Assign each data point to\n            the cluster with the\n            closest center.\n            Assign each cluster\n            center to be the mean of\n            its cluster\u2019s data points.Feature 2\n                                                 Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm", "start_char_idx": 7176, "end_char_idx": 12592, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e7b8a63-62c5-4b17-82e1-432009b18bf8": {"__data__": {"id_": "9e7b8a63-62c5-4b17-82e1-432009b18bf8", "embedding": null, "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f23e7729-edc0-45ba-90c9-377b39803a2c", "node_type": "4", "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "hash": "10b689e89aaceccff2d56f181319717b73611e6c186d2f9eab5951d598288185", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64b7de43-188b-49be-8a2b-fb1d3cde6b41", "node_type": "1", "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "hash": "d359e6176f0c3691146d26e6c747039c957836eea43b6eace4781df914b7b80f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "488fb359-fbff-4370-83c2-0a50709bd166", "node_type": "1", "metadata": {}, "hash": "d0e297383d90aaf3fcd0252f6f159e6a10ec2342b45ae24ce52a758489c7218c", "class_name": "RelatedNodeInfo"}}, "text": "Feature 2Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n            Assign each data point to\n            the cluster with the\n            closest center.\n            Assign each cluster\n            center to be the mean of\n            its cluster\u2019s data points.Feature 2\n                                                 Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n       \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n            Assign each data point to\n            the cluster with the\n            closest center.\n            Assign each cluster\n            center to be the mean of\n            its cluster\u2019s data points.Feature 2\n                                                 Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n       \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n            Assign each data point to\n            the cluster with the\n            closest center.\n            Assign each cluster\n            center to be the mean of\n            its cluster\u2019s data points.Feature 2\n                                                 Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>\n\n\n          (closestPoint(p,centers),p))\n            Assign each cluster\n            center to be the mean of\n            its cluster\u2019s data points.Feature 2\n                                                 Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n       \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>\n\n\n          (closestPoint(p,centers),p))\n           Assign each cluster\n           center to be the mean of\n           its cluster\u2019s data points.Feature 2\n                                                Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n       \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>\n\n\n          (closestPoint(p,centers),p))\n           Assign each cluster\n           center to be the mean of\n           its cluster\u2019s data points.Feature 2\n                                                Feature 1\n---\n                 Clustering with Spark\n      K-Means Algorithm\n\n\n             \u2022 Initialize K cluster centers\n                centers = data.takeSample(\n                    false, K, seed)\n             \u2022 Repeat until convergence:\n\n\n                closest = data.map(p =>\n\n\n                (closestPoint(p,centers),p))\n                pointsGroup =\n                     closest.groupByKey()\n\n\nFeature 2Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>\n\n\n          (closestPoint(p,centers),p))\n          pointsGroup =\n               closest.groupByKey()\n          newCenters = pointsGroup.mapValues(\n               ps => average(ps))Feature 2\n                                               Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n       \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>\n\n\n          (closestPoint(p,centers),p))\n          pointsGroup =\n               closest.groupByKey()\n          newCenters = pointsGroup.mapValues(\n              ps => average(ps))Feature 2\n                                               Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n\n\n           closest = data.map(p =>\n              (closestPoint(p,centers),p))\n           pointsGroup =\n               closest.groupByKey()\n          newCenters = pointsGroup.mapValues(\n               ps => average(ps))Feature 2\n                                               Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n           while (dist(centers,\n                           newCenters) > \u025b)\n           closest = data.map(p =>\n              (closestPoint(p,centers),p))\n           pointsGroup =\n                closest.groupByKey()\n           newCenters =pointsGroup.mapValues(Feature 2ps => average(ps))  Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm", "start_char_idx": 11571, "end_char_idx": 16777, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "488fb359-fbff-4370-83c2-0a50709bd166": {"__data__": {"id_": "488fb359-fbff-4370-83c2-0a50709bd166", "embedding": null, "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f23e7729-edc0-45ba-90c9-377b39803a2c", "node_type": "4", "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "hash": "10b689e89aaceccff2d56f181319717b73611e6c186d2f9eab5951d598288185", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e7b8a63-62c5-4b17-82e1-432009b18bf8", "node_type": "1", "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}, "hash": "626ada3f9bf9bd35ee644afb9afa5c1d529b5e09498442244719eae0c49ab583", "class_name": "RelatedNodeInfo"}}, "text": "\u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n\n\n           closest = data.map(p =>\n              (closestPoint(p,centers),p))\n           pointsGroup =\n               closest.groupByKey()\n          newCenters = pointsGroup.mapValues(\n               ps => average(ps))Feature 2\n                                               Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n           while (dist(centers,\n                           newCenters) > \u025b)\n           closest = data.map(p =>\n              (closestPoint(p,centers),p))\n           pointsGroup =\n                closest.groupByKey()\n           newCenters =pointsGroup.mapValues(Feature 2ps => average(ps))  Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n           while (dist(centers,\n                          newCenters) > \u025b)\n           closest = data.map(p =>\n              (closestPoint(p,centers),p))\n           pointsGroup =\n                closest.groupByKey()\n           newCenters =pointsGroup.mapValues(Feature 2ps => average(ps))  Feature 1\n---\n                 Clustering with Spark\n      K-Means Source\n\n\n              centers = data.takeSample(\n                   false, K, seed)\n               while (d > \u025b)\n               {\n                closest = data.map(p =>\n                    (closestPoint(p,centers),p))\n                pointsGroup =\n                     closest.groupByKey()\n                newCenters =pointsGroup.mapValues(\n                     ps => average(ps))\n                d = distance(centers, newCenters)\nFeature 2centers = newCenters.map(_)\n               }                                    Feature 1\n---\nClustering with Spark\n\n\nEase of use\n \u25aa Interactive shell:\n     - Useful for featurization, pre-processing\n        data\n \u25aa Lines of code for K-Means\n     - Spark ~ 90 lines\n     - Hadoop/Mahout ~ 4 files, > 300 lines\n---\n                       PerformanceIteration time (s)Performance\n274\n\n\n197\n143K-Means                                                                                                                           Logistic Regression\n\n\n            300                                                             Hadoop                                        250                                                   Hadoop157\n                                                                            HadoopBinMem                                                                                        HadoopBinMem121250Spark200Spark\n61W\n            200                                                                                                           150\n            150106100\n87100\n3350                                                                                                                          50\n                    0                                                                                                             0\n                                 25                                      50               100                                           25                                   50                                  100Iteration time (s)\n                                                     Number of machines                                                                                  Number of machines\n                                                                                               [Zaharia et. al, NSDI\u201912]\n\n\n184\n116\n15\n---\nKMeans InMLb\nK-Means in MLlib\n\n\n\uf097 http://spark.apache.org/docs/latest/mllib-\n   clustering.html#k-means\n\uf097 Available for Multiple Languages\n   \u25e6 Scala\n   \u25e6 Java\n   \u25e6 Python\n\n\n                                          6/13/2024  44", "start_char_idx": 15801, "end_char_idx": 19847, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "97380de9-06e8-482d-a94f-41b6e2d7a4b4": {"__data__": {"id_": "97380de9-06e8-482d-a94f-41b6e2d7a4b4", "embedding": null, "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a", "node_type": "4", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "5be01ae84ea337165bbd7e1fda6aab044f6c7946e2a5a1ef4bbe473ab447a502", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5aa2d74-0d00-46e5-a320-b52dbde46d8d", "node_type": "1", "metadata": {}, "hash": "d1c84ebb9b0a2c2b8bb092de33005368b86ca2037e307fee75dff8ab5e53c64b", "class_name": "RelatedNodeInfo"}}, "text": "0EE 542EE 542\n           Lecture 14: Message Passing Interface\n           Internet and Cloud Computing\n\n\n           Young Cho\n           Department of Electrical Engineering\n           University of Southern California\n\n\n           based on the MPI course developed by Rolf Rabenseifner at the High-Performance\n           Computing-Center Stuttgart (HLRS), University of Stuttgart\n                                                                                           1\n---\nParalkel Processing\nParallel Processing\n \uf097 Parallel Hardware Accelerators\n      \u25e6 GPU (CUDA, OpenCL, TensorFlow, OpenAcc)\n      \u25e6 Tensor Processing Unit (TensorFlow)\n      \u25e6 FPGA (TensorFlow?!, OpenAcc?!, custom)\n \uf097 Multicore Processors\n      \u25e6 GPP (OpenMP)\n      \u25e6 GPP+HW accelerators (OpenAcc)\n \uf097 Multicomputers\n      \u25e6 NOW/Clusters (*MPI)\n      \u25e6 Cloud (Hadoop, Spark, MPI?!)\n\n\n                                             6/13/2024 Internetworking and Distributed Systems  2\n---\nMA (\n MPI (Message PPassing Interface)?nterfce)?\n\n\n \uf097       Messages\n    \u25e6       More than just the data\n    \u25e6       Generalized framework for parallel programming\n    \u25e6       Data types and other defined parameters\n \uf097       Active Messages (On top of existing MPI)\n    \u25e6       Carry the actual code or calls to code also along with MPI contents\n    \u25e6       Can be of higher scalability\n \uf097       Standardized message passing library spec. (IEEE)\n    \u25e6       for parallel computers, clusters and heterogeneous networks\n    \u25e6       not a specific product, compiler specification etc.\n    \u25e6       many implementations, MPICH, LAM, OpenMPI, AM, and \u2026\n \uf097       Real Parallel Programming\n    \u25e6       Portable with C/C++ (and Fortran, obsolete)\n    \u25e6       Support many common parallel functions\n    \u25e6       Difficult to develop and notoriously difficult to debug\n\n\n                                                         MPI Course              3\n---\nHistory GMPI\n History of MPI\n\n\n  \uf097 MPI-1 Forum\n     \u25e6 First message-passing interface standard.\n     \u25e6 Sixty people from forty different organizations.\n     \u25e6 Users and vendors represented, from US and Europe.\n     \u25e6 Two-year process of proposals, meetings and review.\n     \u25e6 Message-Passing Interface document produced.\n     \u25e6 MPI 1.0 \u2014         June,1994.\n     \u25e6 MPI 1.1 \u2014         June 12, 1995.\n  \uf097 MPI-2 Forum July 18, 1997\n\n\n                                          MPI Course        4\n---\nGoals and\nGoals and Scope of MPIScopeGfMPI\n\n\n \uf097 Goals\n    \u25e6 To provide a parallel programing interface.\n    \u25e6 To provide source-code portability.\n    \u25e6 To allow efficient implementations.\n \uf097 Result\n    \u25e6 A great deal of functionality for parallel programming\n    \u25e6 Support for heterogeneous parallel architectures\n    \u25e6 MPI-2: additional functions and backward compatible\n\n\n                                         MPI Course           5\n---\nInformatkn about MR\n Information about MPI\n\n\n \uf097    MPI: A Message-Passing Interface Standard (1.1, June 12, 1995)\n \uf097    MPI-2: Extensions to the Message-Passing Interface (July 18,1997)\n \uf097    MPI:The Complete Reference, Marc Snir and William Gropp et al, The\n      MIT Press, 1998 (2-volume set)\n \uf097    Using MPI: Portable Parallel Programming With the Message-\n      Passing Interface and Using MPI-2: Advanced Features of the\n      Message-Passing Interface. William Gropp, Ewing Lusk and Rajeev\n      Thakur, MIT Press, 1999 \u2013 also available in a single volume ISBN\n      026257134X.\n \uf097    Parallel Programming with MPI, Peter S. Pacheco, Morgen Kaufmann\n      Publishers, 1997 - very good introduction.\n \uf097    Parallel Programming with MPI, Neil MacDonald, Elspeth Minty, Joel\n      Malard, Tim Harding, Simon Brown, Mario Antonioletti. Training handbook\n      from EPCC.\n\n\n                                                     MPI Course                6\n---\nExampl ef Complkdon\n Example of Compilation\n\n\n \uf097 Compilation in C\n    \u25e6 mpicc -o prog prog.c\n \uf097 Compilation in C++:\n    \u25e6 mpiCC -o prpg prog.c\n    \u25e6 mpicxx -o prog prog.cpp\n \uf097 Executing program with num processes\n    \u25e6 mprun \u2013n num ./pra\n    \u25e6 mpiexec -n num ./prg\n\n\n                                   MPI Course  7\n---\nThe Message-Passing Programming Paradigm\n\n\n \uf097 Sequential Programming Paradigm", "start_char_idx": 0, "end_char_idx": 4202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5aa2d74-0d00-46e5-a320-b52dbde46d8d": {"__data__": {"id_": "d5aa2d74-0d00-46e5-a320-b52dbde46d8d", "embedding": null, "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a", "node_type": "4", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "5be01ae84ea337165bbd7e1fda6aab044f6c7946e2a5a1ef4bbe473ab447a502", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97380de9-06e8-482d-a94f-41b6e2d7a4b4", "node_type": "1", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "dd69637dd3ad90573f66b9aa41056f2a5c34920e2d05cd01f68a2fbc15200aa7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a33be26-5ea8-4044-ac4f-3a2ca7e5dccb", "node_type": "1", "metadata": {}, "hash": "be84e519de9fdeeeb9016f6a9b407a236f0288734cc3745d621fd8bda51d581e", "class_name": "RelatedNodeInfo"}}, "text": "MPI Course                6\n---\nExampl ef Complkdon\n Example of Compilation\n\n\n \uf097 Compilation in C\n    \u25e6 mpicc -o prog prog.c\n \uf097 Compilation in C++:\n    \u25e6 mpiCC -o prpg prog.c\n    \u25e6 mpicxx -o prog prog.cpp\n \uf097 Executing program with num processes\n    \u25e6 mprun \u2013n num ./pra\n    \u25e6 mpiexec -n num ./prg\n\n\n                                   MPI Course  7\n---\nThe Message-Passing Programming Paradigm\n\n\n \uf097 Sequential Programming Paradigm\n\n\n           data        memory\n                                           A processor may run\n        program         Processor/Process  many processes\n\n\n \uf097 Message Passing Programming Paradigm\n\n\n     data           data            data            data        distributed\n                                                                memory\n\n\n  program        program         program         program        parallel\n                                                                processors\n\n\n               communication network\n\n\n                                             MPI Course                      8\n---\nThe Message-Passing Programming Paradigm\n\n\n  \uf097 A process is a program performing a task on a processor\n  \uf097 Each processor/process in a message passing program runs a\n      instance/copy of a program:\n      \u25e6 written in a conventional sequential language, e.g., C or C++\n      \u25e6 typically a single program operating of multiple dataset\n      \u25e6 the variables of each sub-program have\n          \uf096 the same name\n          \uf096 but different locations (distributed memory) and different data!\n          \uf096 i.e., all variables are local to a process\n      \u25e6 communicate via special send & receive routines (message passing)\n\n\n          data\n\n\n      program\n\n\n                            communication network\n\n\n                                                                 MPI Course   9\n---\nData andWork DlsutrIbuton\nData and Work Distribution\n\n\n \uf097 To communicate together mpi-processes need\n    identifiers: rank = identifying number\n \uf097 all distribution decisions are based on the rank\n    \u25e6 i.e., which process works on which data\n\n\n        myrank=0    myrank=1    myrank=2           myrank=\n                                                   (size-1)\n        data        data        data               data\n\n\n        program    program     program            program\n\n\n                   communication network\n\n\n                                              MPI Course\n---\nMPI Programming Executon\n MPI Programming Execution\n \uf097 Same (sub-)program may run on\n   each processor\n    \u25e6 Single Program, Multiple Data\n    \u25e6 Easier to develop and run\n \uf097 MPI allows also MPMD\n    \u25e6 Multiple Program, Multiple Data\n    \u25e6 Easier to emulate MPMD with SPMD\n    \u25e6 Decision tree based on rank\n\n\n                              MPI Course  11\n---\nEnwubdkn GMFMD\nEmulation of MPMD\n\n\n \uf097 main(int argc, char **argv){if (myrank < .... /* process should run the ocean model */){\n         ocean( /* arguments */ );\n       }else{\n       }weather( /* arguments */ );\n    }\n\n\n \uf097 PROGRAM\n    IF (myrank < ... ) THEN !! process should run the ocean model\n          CALL ocean ( some arguments )\n    ELSE\n          CALL weather ( some arguments )\n    ENDIF\n    END\n\n\n                                               MPI Course                      12\n---\nMessago passing\n Message passing\n\n\n  \uf097 Messages are packets of moving between sub-programs\n  \uf097 Necessary information for the message passing system:\n     \u25e6 sending process              \u2013 receiving process (i.e., the ranks)\n     \u25e6 source location              \u2013 destination location\n     \u25e6 source data type             \u2013 destination data type\n     \u25e6 source data size             \u2013 destination buffer size\n\n\n                                                              data\n\n\n                                                            program\n\n\n                            communication network\n\n\n                                                                           13\n---\nAccess\n Access\n\n\n \uf097 Program must be linked with an MPI library\n \uf097 Program must be started with the MPI startup\n \uf097 A sub-program needs to be connected to a\n    message passing system\n\n\n                                      MPI Course  14\n---\nPolnt0-Point Communication\n                          Point-toRolnt Communkaton\n\n\n \uf097 Simplest form of message passing.\n \uf097 One process sends a message to another.\n \uf097 Different types of point-to-point\n   communication:\n   \u25e6 synchronous send\n   \u25e6 buffered = asynchronous send\n\n\n                               MPI Course            15\n---\nSynctronous Sends\n Synchronous Sends\n\n\n  \uf097 The sender gets an information that the\n    message is received.\n  \uf097 Analogue to the beep or okay-sheet of a fax.\n\n\n                       beep\n\n\n                    ok\n\n\n                                    MPI Course    16\n---\nBufiered =Asyuchronous Sends\nBuffered = Asynchronous Sends\n\n\n\uf097 Only know when the message has left.", "start_char_idx": 3773, "end_char_idx": 8666, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a33be26-5ea8-4044-ac4f-3a2ca7e5dccb": {"__data__": {"id_": "4a33be26-5ea8-4044-ac4f-3a2ca7e5dccb", "embedding": null, "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a", "node_type": "4", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "5be01ae84ea337165bbd7e1fda6aab044f6c7946e2a5a1ef4bbe473ab447a502", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5aa2d74-0d00-46e5-a320-b52dbde46d8d", "node_type": "1", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "68f944600506b4b51b569dcf7b74a3f31e3e7d55c2bb5310b2c2ec35c97dfce0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78d3ab14-5e0d-48c8-982d-d54996ca183e", "node_type": "1", "metadata": {}, "hash": "ab510f0dcd0bd7fc4092fe5eecad0183090563d1a6bc21b010181f2f9143637a", "class_name": "RelatedNodeInfo"}}, "text": "MPI Course  14\n---\nPolnt0-Point Communication\n                          Point-toRolnt Communkaton\n\n\n \uf097 Simplest form of message passing.\n \uf097 One process sends a message to another.\n \uf097 Different types of point-to-point\n   communication:\n   \u25e6 synchronous send\n   \u25e6 buffered = asynchronous send\n\n\n                               MPI Course            15\n---\nSynctronous Sends\n Synchronous Sends\n\n\n  \uf097 The sender gets an information that the\n    message is received.\n  \uf097 Analogue to the beep or okay-sheet of a fax.\n\n\n                       beep\n\n\n                    ok\n\n\n                                    MPI Course    16\n---\nBufiered =Asyuchronous Sends\nBuffered = Asynchronous Sends\n\n\n\uf097 Only know when the message has left.\n\n\n                             MPI Course  17\n---\nBbckdng Operadons\n Blocking Operations\n  \uf097 Some sends/receives may block until\n    another process acts:\n    \u25e6 synchronous send operation blocks until\n      receive is issued;\n    \u25e6 receive operation blocks until message is\n      sent.\n  \uf097 Blocking subroutine returns only when\n    the operation has completed.\n\n\n                                   MPI Course    18\n---\nNon-Blocking Operations\n                       NonBkckdng Operatkons\n \uf097 Non-blocking operations return\n   immediately and allow the sub-program\n   to perform other work.\n\n\n                       beep\n\n\n                    ok\n\n\n                              MPI Course      19\n---\nColkctta Comuunkatkns\n Collective Communications\n\n\n \uf097 Collective communication routines are\n    higher level routines.\n \uf097 Several processes are involved at a time.\n \uf097 May allow optimized internal\n    implementations, e.g., tree based\n    algorithms\n\n\n                                MPI Course    20\n---\nBroadst\nBroadcast\n\n\n \uf097 A one-to-many communication.\n\n\n                               MPI Course  21\n---\nReducton Operadons\nReduction Operations\n\n\n \uf097 Combine data from several processes to\n   produce a single result.\n\n\n             sum=?\n\n\n              200           15\n                    10\n                         300   30\n\n\n                              MPI Course   22\n---\nBrtker}\nBarriers\n\n\n \uf097 Synchronize processes.\n\n\n                                all here?\n\n\n                           MPI Course      23\n---\nMF Functkon Format\n MPI Function Format\n\n\n  \uf097 Include file for C\n     \u25e6 #include <mpi.h>\n  \uf097 Interface in C might look like\n     \u25e6 error = MPI_Xxxxxx(parameter, ...);\n     \u25e6 MPI_...... namespace is reserved for MPI constants and routines\n     \u25e6 i.e. application routines and variable names must NOT begin with\n        MPI_ .\n  \uf097 Example arguments in C\n     \u25e6 Definition standardMPI_Comm_rank( ...., int *rank)\n         MPI_Recv(..., MPI_Status *status)\n     \u25e6 Usagemain...\n         { int myrank;\n           MPI_Status rcv_status;\n           MPI_Comm_rank(..., &myrank);\n           MPI_Recv(..., &rcv_status); }\n\n\n                                                      MPI Course         24\n---\nMPI Programming and Running\n MPI Programming and Running\n\n\n  \uf097 C: int MPI_Init( int *argc, char ***argv)\n        #include <mpi.h>\n        int main(int argc, char **argv)\n        {\n           MPI_Init(&argc, &argv);\n           ....\n     \u25e6 MPI_Init must be the first MPI routine that is called\n     \u25e6 The parallel MPI processes exist at least after MPI_Init\n  \uf097 Start mechanism is implementation dependent\n     \u25e6 Most implementations provide mpirun:\n        mpirun \u2013np number_of_processes ./executable\n        mprun \u2013n number_of_processes ./executable\n     \u25e6 MPI-2 standard defines mpiexec:\n        mpiexec \u2013n number_of_processes ./executable\n\n\n                                               MPI Course        25\n---\nCommunkator MP_COMM_WORLD\n Communicator MPI_COMM_WORLD\n\n\n \uf097 All processes of an MPI program are members of the\n    default communicator MPI_COMM_WORLD.\n \uf097 MPI_COMM_WORLD is a predefined handle in mpi.h\n    and mpif.h.\n \uf097 Each process has its own rank in a communicator:\n    \u25e6 starting with 0\n    \u25e6 ending with (size-1)\n\n\n                                            MPI_COMM_WORLD\n                         0       1         2\n                                 4       3           5\n                                              6\n\n\n                                     MPI Course             26\n---\nHandbes\nHandles", "start_char_idx": 7943, "end_char_idx": 12210, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "78d3ab14-5e0d-48c8-982d-d54996ca183e": {"__data__": {"id_": "78d3ab14-5e0d-48c8-982d-d54996ca183e", "embedding": null, "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a", "node_type": "4", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "5be01ae84ea337165bbd7e1fda6aab044f6c7946e2a5a1ef4bbe473ab447a502", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a33be26-5ea8-4044-ac4f-3a2ca7e5dccb", "node_type": "1", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "d78087d3fcaece9b27fc03f3697fdf729c82d7a1620ed84b61391920b160d4ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c8ee24e-1742-464a-9c19-a8b883f770bb", "node_type": "1", "metadata": {}, "hash": "106ef38b7274e3b36b98e7077c34245f9efad5702dba99303dac9c2c022a625e", "class_name": "RelatedNodeInfo"}}, "text": "MPI Course        25\n---\nCommunkator MP_COMM_WORLD\n Communicator MPI_COMM_WORLD\n\n\n \uf097 All processes of an MPI program are members of the\n    default communicator MPI_COMM_WORLD.\n \uf097 MPI_COMM_WORLD is a predefined handle in mpi.h\n    and mpif.h.\n \uf097 Each process has its own rank in a communicator:\n    \u25e6 starting with 0\n    \u25e6 ending with (size-1)\n\n\n                                            MPI_COMM_WORLD\n                         0       1         2\n                                 4       3           5\n                                              6\n\n\n                                     MPI Course             26\n---\nHandbes\nHandles\n\n\n \uf097 Handles identify MPI objects.\n \uf097 For the programmer, handles are\n    \u25e6 predefined constants in mpi.h or mpif.h\n       \uf096 example: MPI_COMM_WORLD\n       \uf096 predefined values exist only after MPI_Init was\n          called\n    \u25e6 values returned by some MPI routines,to be stored in variables, that are defined as\n       \uf096 in C: special MPI typedefs\n \uf097 Handles refer to internal MPI data structures\n\n\n                                             MPI Course                    27\n---\nRank and Stze\n Rank and Size\n\n\n  \uf097 The rank identifies different processes within a\n     communicator\n  \uf097 The rank is the basis for any work and data distribution.\n     \u25e6 C: int MPI_Comm_rank( MPI_Comm comm, int *rank)\n  \uf097 How many processes are contained within acommunicator?\n     \u25e6 C: int MPI_Comm_size( MPI_Comm comm, int *size)\n\n\n             myrank=0     myrank=1     myrank=2              myrank=(size-1)\n\n\n        CALL MPI_COMM_RANK( MPI_COMM_WORLD, myrank, ierror)\n\n\n                                               MPI Course                     28\n---\nExuns MP\n Exiting MPI\n  \uf097 C: int MPI_Finalize()\n  \uf097 Must be called last by all processes.\n  \uf097 After MPI_Finalize:\n     \u25e6 Further MPI-calls are forbidden\n     \u25e6 Especially re-initialization with MPI_Init is forbidden\n\n\n                                          MPI Course            29\n---\nHelb Wordd\nHello World\n\n\n \uf097 Example hello world by each MPI process.\n     \u25e6 You can compile and run it on a single processor.\n     \u25e6 You can run it on several processors in parallel.\n     \u25e6 Every process knows its rank and the size ofMPI_COMM_WORLD,\n     \u25e6 Only process ranked 0 in MPI_COMM_WORLD prints \u201chello\n       world\u201d.\n                            I am 2 of 4\n                            Hello world\n                            I am 0 of 4\n                            I am 3 of 4\n                            I am 1 of 4\n\n\n \uf097 The sequence of the output non-deterministic?\n\n\n                                                MPI Course          30\n---\nMP Data Tes\n MPI Data Types\n\n\n       MPI Datatype        C datatype\n       MPI_CHAR            signed char\n       MPI_SHORT           signed short int\n       MPI_INT             signed int\n       MPI_LONG            signed long int\n       MPI_UNSIGNED_CHAR   unsigned char\n       MPI_UNSIGNED_SHORT  unsigned short int\n       MPI_UNSIGNED        unsigned int\n       MPI_UNSIGNED_LONG   unsigned long int\n       MPI_FLOAT           float\n       MPI_DOUBLE          double\n       MPI_LONG_DOUBLE     long double\n       MPI_BYTE\n       MPI_PACKED\n                                  MPI Course   31\n---\nMPI Datatype               Fortran datatype\n MPI_INTEGER               INTEGER\n MPI_REAL                  REAL\n MPI_DOUBLE_PRECISION      DOUBLE PRECISION\n MPI_COMPLEX               COMPLEX\n MPI_ LOGICAL              LOGICAL\n MPI_CHARACTER             CHARACTER(1)\n MPI_BYTE\n MPI_PACKED\n\n\n             2345 654  96574 -12        7676\n\n\ncount=5                     INTEGER arr(5)\ndatatype=MPI_INTEGER\n\n\n                                   MPI Course  32\n---\nMPI Deried Data Tpes\n MPI Derived Data Types\n\n\n  static const int blocklen[] = {1, 1, 1, 1};\n  static const MPI_Aint disp[] = {\n       offsetof(struct B, a) + offsetof(struct A, f),\n       offsetof(struct B, a) + offsetof(struct A, p),\n       offsetof(struct B, pp),\n       offsetof(struct B, vp)\n  };\n  static MPI_Datatype type[] = {MPI_INT, MPI_SHORT, MPI_INT,\n  MPI_INT};\n  MPI_Datatype newtype;\n  MPI_Type_create_struct(sizeof(type) / sizeof(*type), blocklen,\n  disp, type, &newtype);\n  MPI_Type_commit(&newtype);\n\n\n                                                 MPI Course       33\n---\n   Rolnt-to-Point Communication\n   Point           Alnt Comunkatkon", "start_char_idx": 11573, "end_char_idx": 15911, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c8ee24e-1742-464a-9c19-a8b883f770bb": {"__data__": {"id_": "6c8ee24e-1742-464a-9c19-a8b883f770bb", "embedding": null, "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a", "node_type": "4", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "5be01ae84ea337165bbd7e1fda6aab044f6c7946e2a5a1ef4bbe473ab447a502", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78d3ab14-5e0d-48c8-982d-d54996ca183e", "node_type": "1", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "d73bf87ef25677e200396d0007462518f12ab061a79efe384bb5e69e1b3d2826", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a579f61-b082-4dd1-abaa-1f392915a1eb", "node_type": "1", "metadata": {}, "hash": "03ccac6f6cf562b2c36906e6f1b09200ca59709f41726232e150bb2f31ebe22c", "class_name": "RelatedNodeInfo"}}, "text": "count=5                     INTEGER arr(5)\ndatatype=MPI_INTEGER\n\n\n                                   MPI Course  32\n---\nMPI Deried Data Tpes\n MPI Derived Data Types\n\n\n  static const int blocklen[] = {1, 1, 1, 1};\n  static const MPI_Aint disp[] = {\n       offsetof(struct B, a) + offsetof(struct A, f),\n       offsetof(struct B, a) + offsetof(struct A, p),\n       offsetof(struct B, pp),\n       offsetof(struct B, vp)\n  };\n  static MPI_Datatype type[] = {MPI_INT, MPI_SHORT, MPI_INT,\n  MPI_INT};\n  MPI_Datatype newtype;\n  MPI_Type_create_struct(sizeof(type) / sizeof(*type), blocklen,\n  disp, type, &newtype);\n  MPI_Type_commit(&newtype);\n\n\n                                                 MPI Course       33\n---\n   Rolnt-to-Point Communication\n   Point           Alnt Comunkatkon\n\n\n    \uf097 Communication between two processes.\n    \uf097 Source process sends message to destination process.\n    \uf097 Communication takes place within a communicator,\n       e.g., MPI_COMM_WORLD.\n    \uf097 Processes are identified by their ranks in the\n       communicator.\n\n\ncommunicator\n                 0     1      2      message\n                          4       3            5destination\n                                source     6\n\n\n                                          MPI Course         34\n---\nSendinga Metsaso\n Sending a Message\n\n\n  \uf097 C: int MPI_Send(void *buf, int count, MPI_Datatype datatype,int dest, int tag, MPI_Comm comm)\n  \uf097 buf is the starting point of the message with count elements,\n      each described with datatype.\n  \uf097 dest is the rank of the destination process within the communicator\n      comm.\n  \uf097 tag is an additional nonnegative integer piggyback information,\n      additionally transferred with the message.\n  \uf097 The tag can be used by the program to distinguish different types of\n      messages.\n\n\n                                                    MPI Course                        35\n---\nReceMng a Meesa8o\n Receiving a Message\n\n\n  \uf097 C: int MPI_Recv(void *buf, int count, MPI_Datatype datatype,int source, int tag, MPI_Comm comm,\n                                MPI_Status *status)\n  \uf097 buf/count/datatype describe the receive buffer.\n  \uf097 Receiving the message sent by process with rank source in comm.\n  \uf097 Envelope information is returned in status.\n  \uf097 Output arguments are printed blue-cursive.\n  \uf097 Only messages with matching tag are received.\n\n\n                                                 MPI Course                        36\n---\nPoint-to-Point CommunicationsPolnt Communkatkns\n\n\n\uf097 Sender must specify a valid destination rank.\n\uf097 Receiver must specify a valid source rank.\n\uf097 The communicator must be the same.\n\uf097 Tags must match.\n\uf097 Message datatypes must match.\n\uf097 Receiver\u2019s buffer must be large enough.\n\n\n                                  MPI Course     37\n---\nWkkrds\n Wildcards\n \uf097 Receiver can wildcard.\n \uf097 To receive from any source            \u2014 source\n   = MPI_ANY_SOURCE\n \uf097 To receive from any tag \u2014 tag =\n   MPI_ANY_TAG\n \uf097 Actual source and tag are returned in the\n   receiver\u2019s status parameter.\n\n\n                                MPI Course         38\n---\nCommuatkon Envelope\n Communication Envelope\n\n\n  \uf097 Envelope information is returned from MPI_RECV in\n     status.\n\n\n  \uf097 C:       status.MPI_SOURCE\n             status.MPI_TAG\n             count via MPI_Get_count()\n\n\n                                                    item-1\n                                                    item-2\n                                                    item-3 \u201ecount\u201c\n            From: source rank                       item-4 elements\n                 tag                                ...\n                                                    item-n\n                  To:\n                  destination rank\n\n\n                                          MPI Course                 39\n---\nCommunkaton Modkes\n Communication Modes\n\n\n \uf097 Send communication modes:\n    \u25e6 synchronous send      \u2192 MPI_SSEND\n    \u25e6 buffered [asynchronous] send    \u2192\n     MPI_BSEND\n    \u25e6 standard send         \u2192 MPI_SEND\n    \u25e6 Ready send            \u2192 MPI_RSEND\n\n\n \uf097 Receiving all modes \u2192 MPI_RECV\n\n\n                              MPI Course  40\n---\nComunkatkn Modos\n Communication Modes                                   \u2014       Deinbns\n                                                               Definitions\n\n\n Sender modes         Definition                                       Notes\n\n\n Synchronous send     Only completes when the receive has\n MPI_SSEND            started\n\n\n Buffered send        Always completes                                 needs application-defined\n MPI_BSEND            (unless an error occurs), irrespective of        buffer to be declared\n                      receiver                                         with\n                                                                       MPI_BUFFER_ATTACH\n\n\n Synchronous          Standard send. Either uses an internal\n MPI_SEND             buffer or buffered\n\n\n Ready send           May be started only if the matching receive      highly dangerous!\n MPI_RSEND            is already posted!", "start_char_idx": 15131, "end_char_idx": 20188, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a579f61-b082-4dd1-abaa-1f392915a1eb": {"__data__": {"id_": "4a579f61-b082-4dd1-abaa-1f392915a1eb", "embedding": null, "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a", "node_type": "4", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "5be01ae84ea337165bbd7e1fda6aab044f6c7946e2a5a1ef4bbe473ab447a502", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c8ee24e-1742-464a-9c19-a8b883f770bb", "node_type": "1", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "ab3187aed1436e8f33f4aebeba3cbe06c322067f8308bb968c0cf94e80106305", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f33e0ebe-cd9b-4af3-88b3-8f7d98651ec8", "node_type": "1", "metadata": {}, "hash": "fbdb1e35862491f78e5e197b64470049c6861e20fc9fec9ae4130cc4dd4fce6a", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Send communication modes:\n    \u25e6 synchronous send      \u2192 MPI_SSEND\n    \u25e6 buffered [asynchronous] send    \u2192\n     MPI_BSEND\n    \u25e6 standard send         \u2192 MPI_SEND\n    \u25e6 Ready send            \u2192 MPI_RSEND\n\n\n \uf097 Receiving all modes \u2192 MPI_RECV\n\n\n                              MPI Course  40\n---\nComunkatkn Modos\n Communication Modes                                   \u2014       Deinbns\n                                                               Definitions\n\n\n Sender modes         Definition                                       Notes\n\n\n Synchronous send     Only completes when the receive has\n MPI_SSEND            started\n\n\n Buffered send        Always completes                                 needs application-defined\n MPI_BSEND            (unless an error occurs), irrespective of        buffer to be declared\n                      receiver                                         with\n                                                                       MPI_BUFFER_ATTACH\n\n\n Synchronous          Standard send. Either uses an internal\n MPI_SEND             buffer or buffered\n\n\n Ready send           May be started only if the matching receive      highly dangerous!\n MPI_RSEND            is already posted!\n\n\n Receive              Completes when a the message (data) has\n MPI_RECV             arrived\n\n\n                                                          MPI Course                             41\n---\nRuka &rt comunkatbn Mod\n Rules for the communication modes\n\n\n \uf097 Standard send (MPI_SEND)\n      \u25e6 minimal transfer time\n      \u25e6 may block due to synchronous mode\n      \u25e6 \u2014> risks with synchronous send\n \uf097 Synchronous send (MPI_SSEND)\n      \u25e6 risk of deadlock\n      \u25e6 risk of serialization\n      \u25e6 risk of waiting \u2014> idle time\n      \u25e6 high latency / best bandwidth\n \uf097 Buffered send (MPI_BSEND)\n      \u25e6 low latency / bad bandwidth\n \uf097 Ready send (MPI_RSEND)\n      \u25e6 use never, except you have a 200% guarantee that Recv is already\n          called in the current version and all future versions of your code\n\n\n                                                    MPI Course                42\n---\nMetsso Order Preservatton\n Message Order Preservation\n\n\n  \uf097 Rule for messages on the same connection,i.e., same communicator, source, and destination rank:\n  \uf097 Messages do not overtake each other.\n  \uf097 This is true even for non-synchronous sends.\n\n\n          0       1       2\n                     4        3                         5\n                                         6\n\n\n  \uf097 If both receives match both messages, then the order is preserved.\n\n\n                                              MPI Course                    43\n---\nFng'Pong\n Ping pong\n\n\n  rank=0                                                                                  rank=1\n  Send (dest=1)\n                                                         (tag=17)\n                                                                                         Recv (source=0)\n                                                                                         Send (dest=0)\n                                                         (tag=23)\n  Recv (source=1)\n\n\n  if (my_rank==0) dest=1 ...)MPI_Send( ...        /* i.e., emulated multiple program */\n  elseMPI_Recv( ... source=1 ...)MPI_Recv( ... source=0 ...)\n        MPI_Send( ... dest=0 ...)\n  fi\n\n\n                                                                                     MPI Course           44\n---\n                                                           dest     = (my_rank+1) % size;\nInitialization:\nEach iteration:1                   my_rank                 source = (my_rank\u20131+size) % size;\n                                       1        2\n   2 3       4    5                snd_buf\n                                3         4                                       Single\n                                   rcv_buf                                        Program !!!\n                                             5\n                                   sum\n\n\n                  my_rank                               my_rank\n                      1                                     1\n            2     snd_buf                          2    snd_buf\n                         4     3                               4\n                  rcv_buf                               rcv_buf           3\n                            5                                      5\n                  sum                                   sum\n\n\n                                                     MPI Course                                45\n---\nColkectta Communkadon\nCollective Communication\n\n\n \uf097 Communications involving a group of\n   processes.\n \uf097 Must be called by all processes in a\n   communicator.\n \uf097 Examples:\n   \u25e6 Barrier synchronization.\n   \u25e6 Broadcast, scatter, gather.\n   \u25e6 Global sum, global maximum, etc.\n\n\n                                 MPI Course  46\n---\nCharcterttkos d Colkctla\nCharacteristics of Collective\nComutkaton\nCommunication\n \uf097 Optimised Communication routines\n   involving a group of processes\n \uf097 Collective action over a communicator, i.e. all\n   processes must call the collective routine.\n \uf097 Synchronization may or may not occur.\n \uf097 All collective operations are blocking.\n \uf097 No tags.\n \uf097 Receive buffers must have exactly the same size\n   as send buffers.\n\n\n                                    MPI Course      47\n---\nBarrker Synchronbatkon\n Barrier Synchronization\n  \uf097 C: int MPI_Barrier(MPI_Comm comm)", "start_char_idx": 18975, "end_char_idx": 24427, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f33e0ebe-cd9b-4af3-88b3-8f7d98651ec8": {"__data__": {"id_": "f33e0ebe-cd9b-4af3-88b3-8f7d98651ec8", "embedding": null, "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a", "node_type": "4", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "5be01ae84ea337165bbd7e1fda6aab044f6c7946e2a5a1ef4bbe473ab447a502", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a579f61-b082-4dd1-abaa-1f392915a1eb", "node_type": "1", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "bfbb5cdfd7e142deae2b8a25ab5aedd1930a5533b42cf6cd9b8be16f1cf3c5ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d38c2f89-4dcf-49a9-a8a0-62bde872bbbe", "node_type": "1", "metadata": {}, "hash": "d56248314c6409798b71d35600617313a0f42228d49cc86e50842b8c4364c7b2", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Communications involving a group of\n   processes.\n \uf097 Must be called by all processes in a\n   communicator.\n \uf097 Examples:\n   \u25e6 Barrier synchronization.\n   \u25e6 Broadcast, scatter, gather.\n   \u25e6 Global sum, global maximum, etc.\n\n\n                                 MPI Course  46\n---\nCharcterttkos d Colkctla\nCharacteristics of Collective\nComutkaton\nCommunication\n \uf097 Optimised Communication routines\n   involving a group of processes\n \uf097 Collective action over a communicator, i.e. all\n   processes must call the collective routine.\n \uf097 Synchronization may or may not occur.\n \uf097 All collective operations are blocking.\n \uf097 No tags.\n \uf097 Receive buffers must have exactly the same size\n   as send buffers.\n\n\n                                    MPI Course      47\n---\nBarrker Synchronbatkon\n Barrier Synchronization\n  \uf097 C: int MPI_Barrier(MPI_Comm comm)\n\n\n  \uf097 Fortran:                MPI_BARRIER(COMM,\n    IERROR)\n                            INTEGER COMM, IERROR\n  \uf097 MPI_Barrier is normally never needed:\n     \u25e6 all synchronization is done automatically by the data\n       communication:\n       \uf096 a process cannot continue before it has the data that it needs.\n     \u25e6 if used for debugging:\uf096 please guarantee, that it is removed in production.\n\n\n                                         MPI Course                  48\n---\n   Broadcast\n\n\n   C:         int MPI_Bcast(void *buf, int count, MPI_Datatype datatype,int root, MPI_Comm comm)\n\n\nbefore                         r e d\n bcast\n\n\n  after       r e d            r e d            r e d            r e d            r e d\n bcast\n                          e.g., root=1\n                                       \u2022 rank of the sending process (i.e., root process)\n                                          \u2022 must be given identically by all processes\n\n\n                                                        MPI Course                            49\n---\n              SatterScatter\n\n\n                \uf097 C: int MPI_Scatter(void *sendbuf, int sendcount, MPI_Datatype sendtype,void *recvbuf, int recvcount, MPI_Datatype recvtype,\n                                    int root, MPI_Comm comm)\n\n\n                                                ABCDE\n                 before\n                scatter\n\n\ne.g., root=1\n                  after                         ABCDE\n                 scatter            A               B              C               D              E\n\n\n                                                                     MPI Course                          50\n---\n              Gather\n               Gather\n\n\n               C:       int MPI_Gather(void *sendbuf, int sendcount, MPI_Datatype sendtype,,void *recvbuf, int recvcount, MPI_Datatype recvtype\n                                           int root, MPI_Comm comm)\n\n\n                before      A                B                C                D                E\n                gather\ne.g., root=1\n\n\n                 after      A                B                C                D                E\n                gather                   A B C D E\n\n\n                                                                 MPI Course                             51\n---\nGkbal Reductlon Operatkns\n  Global Reduction Operations\n\n\n    \uf097 To perform a global reduce operation across all members of a\n          group.\n    \uf097 d0 o d1 o d2 o d3 o \u2026 o ds-2 o ds-1\n           \u25e6 di = data in process rank i\n                               \uf096 single variable, or\n                               \uf096 vector\n           \u25e6 o = associative operation\n           \u25e6 Example:\n                               \uf096 global sum or product\n                               \uf096 global maximum or minimum\n                               \uf096 global user-defined operation\n    \uf097 floating point rounding may depend on usage of associative law:\n           \u25e6 [(d0 o d) o (d2 o d)] o [\u2026 o (ds-2 o ds-1)]1 3\n           \u25e6 ((((((d0 o d1) o d2) o d3) o \u2026 ) o ds-2) o ds-1)\n\n\n                                                                       MPI Course  52\n---\nExampk ef Gkbal Reductn\nExample of Global Reduction\n\n\n \uf097 Global integer sum.\n \uf097 Sum of all inbuf values should be returned in resultbuf.\n \uf097 C: root=0;\n    MPI_Reduce(&inbuf, &resultbuf, 1, MPI_INT,\n            MPI_SUM,root, MPI_COMM_WORLD);\n \uf097 Fortran: root=0\n    MPI_REDUCE(inbuf, resultbuf, 1, MPI_INTEGER,\n            MPI_SUM, root, MPI_COMM_WORLD, IERROR)\n \uf097 The result is only placed in resultbuf at the root process.\n\n\n                                       MPI Course               53\n---\n              Frodeinod Rocrctbn Operetkn Handles\n               Predefined Reduction Operation Handles", "start_char_idx": 23589, "end_char_idx": 28186, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d38c2f89-4dcf-49a9-a8a0-62bde872bbbe": {"__data__": {"id_": "d38c2f89-4dcf-49a9-a8a0-62bde872bbbe", "embedding": null, "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "03bd8073-0224-4c3d-803c-52c7c4f6913a", "node_type": "4", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "5be01ae84ea337165bbd7e1fda6aab044f6c7946e2a5a1ef4bbe473ab447a502", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f33e0ebe-cd9b-4af3-88b3-8f7d98651ec8", "node_type": "1", "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}, "hash": "98c8bb33754c9ac862854c61f4e2ef91d836bb8c5669418810d04c8b82a76b39", "class_name": "RelatedNodeInfo"}}, "text": "MPI Course  52\n---\nExampk ef Gkbal Reductn\nExample of Global Reduction\n\n\n \uf097 Global integer sum.\n \uf097 Sum of all inbuf values should be returned in resultbuf.\n \uf097 C: root=0;\n    MPI_Reduce(&inbuf, &resultbuf, 1, MPI_INT,\n            MPI_SUM,root, MPI_COMM_WORLD);\n \uf097 Fortran: root=0\n    MPI_REDUCE(inbuf, resultbuf, 1, MPI_INTEGER,\n            MPI_SUM, root, MPI_COMM_WORLD, IERROR)\n \uf097 The result is only placed in resultbuf at the root process.\n\n\n                                       MPI Course               53\n---\n              Frodeinod Rocrctbn Operetkn Handles\n               Predefined Reduction Operation Handles\n\n\nPredefined operation handle\nMPI_MAX\nMPI_MIN\nMPI_SUM\nMPI_PROD\nMPI_LAND\nMPI_BAND\nMPI_LOR\nMPI_BOR\nMPI_LXOR\nMPI_BXOR\nMPI_MAXLOC\n\nMPI_MINLOC\n\n\n\nFunction\nMaximum\nMinimum\nSum\nProduct\nLogical AND\nBitwise AND\nLogical OR\nBitwise OR\nLogical exclusive OR\nBitwise exclusive OR\nMaximum and location of the\nmaximum\nMinimum and location of the\nminimumMPI Course                   54\n---\nUserDefined Reduction Operations\n                                UserDeined Redurctn Operatkns-\n\n\n \uf097 Operator handles\u25e6 predefined \u2013 see table above\n     \u25e6 user-defined\n \uf097 User-defined operation \u25fc:\u25e6 associative\n     \u25e6 user-defined function must perform the operation vector_A \u25fc vector_B\n     \u25e6 syntax of the user-defined function \u2192 MPI-1 standard\n \uf097 Registering a user-defined reduction function:\n     \u25e6 C:           MPI_Op_create(MPI_User_function *func, int commute,MPI_Op *op)\n \uf097 COMMUTE tells the MPI library whether FUNC is commutative.\n\n\n                                                 MPI Course                       55\n---\n  Workdng wth &o4ps\n  Working with groups\n\n\n   \uf097 Select processes ranks to create groups\n   \uf097 Associate to these groups new communicators\n   \uf097 Use these new communicators as usual\n   \uf097 MPI_Comm_group(comm, group) returns in group the group\n      associated to the communicator comm\n\n\nOdd_group\n                         0      1        3\n                                  2             5\n                                          4                  Even_group\n\n\n                                              MPI Course                 56\n---\nVrunlTopobsles\n Virtual Topologies\n\n\n \uf097 Convenient process naming.\n \uf097 Simplifies writing of code.\n \uf097 Can allow MPI to optimize\n   communications.\n\n\n                                MPI Course  57", "start_char_idx": 27568, "end_char_idx": 29927, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9437838-f5e1-472c-b0bc-804ba3e9cc4e": {"__data__": {"id_": "f9437838-f5e1-472c-b0bc-804ba3e9cc4e", "embedding": null, "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8077ce0f-cfa7-4809-9b47-e9c97491357f", "node_type": "4", "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}, "hash": "0b629226857f3a284d106259acdfe8be539edcda50dbcc4e59325f5f6e2dd9a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52dfff85-c6bd-489c-a401-00c74d457edd", "node_type": "1", "metadata": {}, "hash": "2af2f709e13f6772d49c4df7837220ebbed227bf0d944987694eac6c7fb71800", "class_name": "RelatedNodeInfo"}}, "text": "0  EE 542\n   EE 542\n   Lecure\n         Lecture 15:Database (n the Cloud5: Database in the Cloud\n    Internet and Cloud Computing\n\n\n    Young Cho\n    Department of Electrical Engineering\n    University of Southern California\n\n\n                                                                 1\n---\nMain Use:Bl Data Processing\nMain Use: Big Data Processing\n\n\n\uf097 Information Abstraction\n   \u25e6 Summarization\n   \u25e6 Semantics Analysis\n   \u25e6 Pattern matching\n   \u25e6 MapReduce\n\uf097 Information Partitioning\n   \u25e6 Data cleansing\n   \u25e6 Indexing and Organization\n   \u25e6 K-means Clustering\n---\nData Storaga and Management\n Data Storage and Management\n\n\n \uf097 Database\n    \u25e6 Organized collection of data\n    \u25e6 Operate large quantities of information\n \uf097 Database Management System (DBMS)\n    \u25e6 Software to Creation and Maintain Database\n    \u25e6 Organze, Store, and Retrieve data\n---\nHistory @f Databaso\n History of Database\n\n\n \uf097 1960's: Hierarchical File-based\n \uf097 1970's: Networked and Relational\n \uf097 1980's: Entity-Relationship\n \uf097 1990's: Object Oriented Server-Clients\n \uf097 2000's: Web-based Server-Clients\n \uf097 Current: Cloud-base with Clients\n---\n  Rehtknal Databaso (RDB)\n  Relational Database (RDB)\n\n\n\uf097 Designed for all purposes\n\uf097 Strong consistancy, concurrency, recovery\n\uf097 Mathematical background\n\uf097 Standard Query language (SQL)      PostgreSQL\n    SQLiteORACLEdb)isam]\n           Microsoft\"         TURBODBmbedued\n          SQLServer              MySQL\n   SQLMicrosoft\"Azure\"  elevate\n---\n   ACID Semantos\n   ACID Semantics\n\n\n \uf097 Atomicity: All or nothing.\n \uf097 Consistency: Consistent state of data and\n   transactions.\n \uf097 Isolation: Transactions are isolated from each other.\n \uf097 Durability: When the transaction is committed,\n   state will be durable.\n\n\nAny data store can achieve Atomicity, Isolation and\nDurability but do you always need consistency? No.\n\n\nBy giving up ACID properties, one can achieve higher\nperformance and scalability.\n---\nSallng Up to Databaso\n Scaling Up the Database\n \uf097 RDBs Do Not Scale\n    \u25e6 Hard to scale horizontally\n    \u25e6 Does not conceptually map to multiple nodes\n \uf097 Expensive\n    \u25e6 Expensive hardware costs\n    \u25e6 Expensive hardware maintenance\n \uf097 Poor Result\n    \u25e6 Low Speed (performance)\n    \u25e6 Low availability\n    \u25e6 Does not tolerate Partitioning\n---\nCunten Emerelng Data Needs\n Current/Emerging Data Needs\n109226442081009Zoio2012\n    Big data       Connectivity  P2P Knowledge\n Concurrency         Diversity    Cloud-Grid\n---\n9\n          Consbstengy\n          Consistency\n\n\n           \uf097 Clients should read the same data.\n           \uf097 Levels of Consistency\n             \u25e6 Strict Consistency \u2013 RDBMS\n             \u25e6 Tunable Consistency \u2013 Cassandra\n             \u25e6 Eventual Consistency \u2013 Amazon Dynamo\n           \uf097 Client perceives atomic operation\n\n\n   13 June 2024\n---\nBASE an ACID Alteriatha\n BASE, an ACID Alternative\n\n\n \uf097 Basically Available\n    \u25e6 Nodes in the a distributed\n    \u25e6 Individual node may go down\n    \u25e6 Whole system still functional with the rest\n \uf097 Soft State\n    \u25e6 System state and data changes over time\n \uf097 Eventual Consistency\n    \u25e6 Given enough time, data will be consistent\n      across the distributed system.\n---\nDiierent Frborttkes\n Different Priorities\n\n\n \uf097 ACID\n    \u25e6 Strong consistency\n    \u25e6 Less availability\n    \u25e6 Pessimistic concurrency\n    \u25e6 Complex\n \uf097 BASE\n    \u25e6 Availability is the most important thing\n    \u25e6 Weaker consistency (Eventual)\n    \u25e6 Best effort\n    \u25e6 Simple and fast\n    \u25e6 Optimistic\n---\nEmergenco of NSQL\nEmergence of NoSQL\n\n\n \uf097 Not only SQL\n    \u25e6 Does not follow all of the SQL requirements\n    \u25e6 However, provides SQL-like interface\n    \u25e6 Scalability through Relaxed models\n \uf097 Removes\n    \u25e6 Overhead of SQL constrained transactions\n    \u25e6 Complexity of SQL query\n    \u25e6 Necessity of up-front schema design\n \uf097 Allows\n    \u25e6 Easy and frequent changes to DB\n    \u25e6 Fast development\n    \u25e6 Higher Scalability\n---\n     Not Good fr Exerythlng\n      Not Good for Everything", "start_char_idx": 0, "end_char_idx": 3914, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52dfff85-c6bd-489c-a401-00c74d457edd": {"__data__": {"id_": "52dfff85-c6bd-489c-a401-00c74d457edd", "embedding": null, "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8077ce0f-cfa7-4809-9b47-e9c97491357f", "node_type": "4", "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}, "hash": "0b629226857f3a284d106259acdfe8be539edcda50dbcc4e59325f5f6e2dd9a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9437838-f5e1-472c-b0bc-804ba3e9cc4e", "node_type": "1", "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}, "hash": "3688a55aa8b3295e6c750cbe36df98434734bc20382cf9ee6bda3e6771c261ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "984e6069-900c-48c1-ab62-1ac0e5af8ae2", "node_type": "1", "metadata": {}, "hash": "3956f37ec41a7e493c13f8ed5c94f1c9b8235bdf5dd1e30b500fb12b695175bc", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Not only SQL\n    \u25e6 Does not follow all of the SQL requirements\n    \u25e6 However, provides SQL-like interface\n    \u25e6 Scalability through Relaxed models\n \uf097 Removes\n    \u25e6 Overhead of SQL constrained transactions\n    \u25e6 Complexity of SQL query\n    \u25e6 Necessity of up-front schema design\n \uf097 Allows\n    \u25e6 Easy and frequent changes to DB\n    \u25e6 Fast development\n    \u25e6 Higher Scalability\n---\n     Not Good fr Exerythlng\n      Not Good for Everything\n\n\n\uf097 Financial Data\n\uf097 Commercial Transactions\n\uf097 Business Critical Data\n     CHASE                                       BBVA Compass                  PNCBANK\n      Bankof AmericacitibankCapitalOneDISC     VER               WELLS FARGO\n     REGIONS'@usbank IL                                                       Citizens Bank\"WSODFQREST\n                          Huntngton                     KeyBank                   Santander\n    SuNTRUST                          CapitalOne                                      First\n                                                                                      Citizens\n                                                                                      Bank\n---\n Sdll Uscful fr Locs\n Still Useful for Lots\n       Google              ebay\n             Zinkedin]\n YAHOO\n                   eTflix    amazon\ntheguardian\n---\n15\n           NaSQL\n            NoSQL\n\n\n             \uf097 NoSQL databases reject:\n               \u25e6 Overhead of ACID transactions\n               \u25e6 \u201cComplexity\u201d of SQL\n               \u25e6 Burden of up-front schema design\n               \u25e6 Declarative query expression\n               \u25e6 Yesterday\u2019s technology\n             \uf097 Programmer responsible for\n               \u25e6 Step-by-step procedural language\n               \u25e6 Navigating access path\n\n\n    13 June 2024\n---\n16\n    NoSQLDatabaso Tes Database Types\n\n\n    NoSQL databases is complicated because\n    there are a variety of types:\n     \uf097 Key-Value Store \u2013 Hash table of keys\n     \uf097 Column Store \u2013 Each storage block\n       contains data from only one column\n     \uf097 Document Store \u2013 stores documents\n       made up of tagged elements\n     \uf097 Graph Databases\n---\n17\n    SQL w NoSQL\n     SQL vs NoSQL\n     \uf097 SQL Databases\n        \u25e6 Predefined Schema\n        \u25e6 Standard definition and interface language\n        \u25e6 Tight consistency\n        \u25e6 Well defined semantics\n     \uf097 NoSQL Database\n        \u25e6 No predefined Schema\n        \u25e6 Per-product definition and interface language\n        \u25e6 Getting an answer quickly is more important\n          than getting a correct answer\n---\n18\n    Examples: Key-Value StoresKeyValua Stores\n\n\n     \uf097 MapReduce\n       \u25e6 Values stored with Keys\n       \u25e6 Fast access to small data values\n     \uf097 Example\n       \u25e6 Project-Voldemort - http://www.project-\n         voldemort.com/ (Linkedin)\n       \u25e6 MemCacheDB - http://memcachedb.org/\n---\n          Exampke: Document Databaso\n           Example: Document Database\n           \uf097 Schema Free\n           \uf097 JSON \u2013 JavaScript Object Notation\n           \uf097 Query Model: JavaScript or custom\n           \uf097 Aggregations: Map/Reduce\n           \uf097 Indexes are done via B-Trees\n           \uf097 Example\n              \u25e6 CouchDB - http://couchdb.apache.org/ (BBC)\n              \u25e6 MongoDB - http://www.mongodb.org/\n               (Foursquare, Shutterfly)\n\n\n13 June 2024                                                19\n---\n20\n            CouchDBJSONTass\n            CouchDB JSON Tags\n             \uf097 \"_id\"\n                \u25e6 GUID \u2013 Global Unique Identifier\n                \u25e6 Passed in or generated by CouchDB\n             \uf097 \"_rev\"\n                \u25e6 Revision number\n                \u25e6 Versioning mechanism\n             \uf097 \"type\", \"author\", \"title\", etc.\n                \u25e6 Arbitrary tags\n                \u25e6 Schema-less\n                \u25e6 Could be validated after the fact by user-written\n                  routine\n\n\n    13 June 2024\n---\nMonoDB\n MongoDB\n\n\n \uf097 Map Reduce with JavaScript - Aggregation\n \uf097 You have indexes\n    \u25e6 B-Trees. Ids are always indexed.\n \uf097 Updates are atomic\n    \u25e6 Low contention locks\n \uf097 Querying mongo done with a document\n \uf097 Repository Pattern\n---\nBxample: Graph Stores\n Example: Graph Stores\n\n\n \uf097 Based on Graph Theory.\n \uf097 Scale vertically, no clustering.\n \uf097 You can use graph algorithms easily.\n---\nExampke: HBase\n Example: HBase", "start_char_idx": 3478, "end_char_idx": 7721, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "984e6069-900c-48c1-ab62-1ac0e5af8ae2": {"__data__": {"id_": "984e6069-900c-48c1-ab62-1ac0e5af8ae2", "embedding": null, "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8077ce0f-cfa7-4809-9b47-e9c97491357f", "node_type": "4", "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}, "hash": "0b629226857f3a284d106259acdfe8be539edcda50dbcc4e59325f5f6e2dd9a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52dfff85-c6bd-489c-a401-00c74d457edd", "node_type": "1", "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}, "hash": "5d40cbddf7448531d904f2e1c2836fcb3da94341c68d7c7add18f74a9cb50e42", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "608e529f-942b-4973-acb9-726529923867", "node_type": "1", "metadata": {}, "hash": "e4e43357a842315a57aa089348aeeae213463c49a7294b64c91e8c8b36f1bbbf", "class_name": "RelatedNodeInfo"}}, "text": "13 June 2024\n---\nMonoDB\n MongoDB\n\n\n \uf097 Map Reduce with JavaScript - Aggregation\n \uf097 You have indexes\n    \u25e6 B-Trees. Ids are always indexed.\n \uf097 Updates are atomic\n    \u25e6 Low contention locks\n \uf097 Querying mongo done with a document\n \uf097 Repository Pattern\n---\nBxample: Graph Stores\n Example: Graph Stores\n\n\n \uf097 Based on Graph Theory.\n \uf097 Scale vertically, no clustering.\n \uf097 You can use graph algorithms easily.\n---\nExampke: HBase\n Example: HBase\n\n\n  \uf097 HDFS provides us with a filesystem consisting of\n     arbitrarily large files that can only be written once and\n     are should be read sequentially, end to end.\n  \uf097 Online transactions want to read and write individual\n     cells in a large table. (e.g. update inventory and price as\n     orders come in.)\n  \uf097 HBase implements online transaction on top of HDFS\n     by using additional storage and memory to organize the\n     tables, and writing them back to HDFS as needed.\n  \uf097 HBase is an open source implementation of the\n     BigTable design published by Google.\n---\nHBasoDat Modl\n HBase Data Model\n\n\n \uf097 A database consists of multiple tables.\n \uf097 Each table consists of multiple rows, sorted by row key.\n \uf097 Each row contains a row key and one or more column\n    families.\n \uf097 Each column family is defined when the table is created.\n \uf097 Column families can contain multiple columns.\n    (family:column)\n \uf097 A cell is uniquely identified by (table,row,family:column).\n \uf097 A cell contains an uninterpreted array of bytes and a\n    timestamp.\n---\n   Data In Tabubr Form\n   Data in Tabular Form\n\n\n            Name                   Home                   Office\nKey         First       Last       Phone     Email        Phone     Email\n101         Florian     Krepsbach 555-1212 florian@       666-1212 fk@phc.com\n                                             wobegon.org\n102         Marilyn     Tollerud   555-1213               666-1213\n\n\n103         Pastor      Inqvist                           555-1214 inqvist@\n                                                                    wels.org\n---\n      Data in Tabular Form\n\n\n     Name                             Home                   Office                Social\nKey  First                  Last      Phone Email            Phone Email           FacebookI\n                                                                                   D\n101  Florian     Garfield   Krepsbac  555-      florian@     666-     fk@phc.co\n                            h         1212      wobegon.org  1212     m\n\n\n102  Marilyn                Tollerud  555-                   666-\n                                      1213                   1213\n\n\n103  Pastor                 Inqvist                          555-     inqvist@\n                                                             1214     wels.org\n            New columns can be                                       Column families cannot\n            added at runtime.                                            be added at runtime.\n---\n        Nested Data Representaton\n         Nested Data Representation\n\n\nTable People ( Name, Home, Office )\n{\n          101: {\n                    Timestamp: T403;\n                    Name: {First=\u201cFlorian\u201d, Middle=\u201cGarfield\u201d, Last=\u201cKrepsbach\u201d},\n                    Home: {Phone=\u201c555-1212\u201d, Email=\u201cflorian@wobegon.org\u201d},\n                    Office: {Phone=\u201c666-1212\u201d, Email=\u201cfk@phc.com\u201d}\n          },\n          102: {\n                    Timestamp: T593;\n                    Name: { First=\u201cMarilyn\u201d, Last=\u201cTollerud\u201d},\n                    Home: { Phone=\u201c555-1213\u201d },\n                    Office: { Phone=\u201c666-1213\u201d }\n          },\n          \u2026\n}\n---\n         Nested Data Representation\n\n\nGET People:101\n          101: {\n                    Timestamp: T403;\n                    Name: {First=\u201cFlorian\u201d, Middle=\u201cGarfield\u201d, Last=\u201cKrepsbach\u201d},\n                    Home: {Phone=\u201c555-1212\u201d, Email=\u201cflorian@wobegon.org\u201d},\n                    Office: {Phone=\u201c666-1212\u201d, Email=\u201cfk@phc.com\u201d}\n          }\n\n\nGET People:101:Name\n          People:101:Name: {First=\u201cFlorian\u201d, Middle=\u201cGarfield\u201d, Last=\u201cKrepsbach\u201d}\n\n\nGET People:101:Name:First\n          People:101:Name:First=\u201cFlorian\u201d\n---\nFundamental Operatkns\nFundamental Operations", "start_char_idx": 7286, "end_char_idx": 11466, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "608e529f-942b-4973-acb9-726529923867": {"__data__": {"id_": "608e529f-942b-4973-acb9-726529923867", "embedding": null, "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8077ce0f-cfa7-4809-9b47-e9c97491357f", "node_type": "4", "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}, "hash": "0b629226857f3a284d106259acdfe8be539edcda50dbcc4e59325f5f6e2dd9a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "984e6069-900c-48c1-ab62-1ac0e5af8ae2", "node_type": "1", "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}, "hash": "5e67cf1b383895da25047613c1f3b5d94c2f17a7d94eff8e59df40ab7d98d796", "class_name": "RelatedNodeInfo"}}, "text": "GET People:101\n          101: {\n                    Timestamp: T403;\n                    Name: {First=\u201cFlorian\u201d, Middle=\u201cGarfield\u201d, Last=\u201cKrepsbach\u201d},\n                    Home: {Phone=\u201c555-1212\u201d, Email=\u201cflorian@wobegon.org\u201d},\n                    Office: {Phone=\u201c666-1212\u201d, Email=\u201cfk@phc.com\u201d}\n          }\n\n\nGET People:101:Name\n          People:101:Name: {First=\u201cFlorian\u201d, Middle=\u201cGarfield\u201d, Last=\u201cKrepsbach\u201d}\n\n\nGET People:101:Name:First\n          People:101:Name:First=\u201cFlorian\u201d\n---\nFundamental Operatkns\nFundamental Operations\n\n\n \uf097 CREATE table, families\n \uf097 PUT table, rowid, family:column, value\n \uf097 PUT table, rowid, whole-row\n \uf097 GET table, rowid\n \uf097 SCAN table       (WITH filters)\n \uf097 DROP table\n---\nRebxedACID Requirements\nRelaxed ACID Requirements\n \uf097 Atomicity - Entire rows are updated\n   atomically or not at all.\n \uf097 Consistency:\n    \u25e6 A GET is guaranteed to return a complete row\n      that existed at some point in the table\u2019s history.\n      (Check the timestamp to be sure!)\n    \u25e6 A SCAN must include all data written prior to\n      the scan, and may include updates since it started.\n \uf097 Isolation: Not guaranteed outside a single\n   row.\n \uf097 Durability: All successful writes have been\n   made durable on disk.", "start_char_idx": 10939, "end_char_idx": 12158, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41aff24e-7bcc-4593-99d4-2180946e1f21": {"__data__": {"id_": "41aff24e-7bcc-4593-99d4-2180946e1f21", "embedding": null, "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948", "node_type": "4", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "5a34d8ebcbc5b82813918343fd2bca5081aece717bcfbb89b31039ab7801d84d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea5f9902-9f04-41cb-9ef8-1732d2317390", "node_type": "1", "metadata": {}, "hash": "c5804b94a3f24cee8065b2915e7aa2c655f5fb024f876481d454627c21499e57", "class_name": "RelatedNodeInfo"}}, "text": "0  EE 542\n   EE 542\n   Lecture\n          Lecture 16:BigData Processing& Powerpoint Animations6: Big Data Processing\n   Internet and Cloud Computing\n\n\n   Young Cho\n   Department of Electrical Engineering\n   University of Southern California\n\n\n                                                                         1\n---\n    Outina\n    Outline\n\n\n\uf097 Massive Streaming Data\n\n\n\uf097 Computer Networks\n\n\n\uf097 Network Security\n\n\n\uf097 Internet Document Analysis\n\n\n\uf097 Research Directions\n\n\n                              2\n---\nMassheAmount 0f Data\n Massive Amount of Data\n      1029\n      1000\n     01010010\n     10010100\n     10000010101001\n\n\n                                                       1000\n                           C                          01010010\n                         0101010'*10110001001         10010100\n                         0100101000101                10000010101\n                         1010010010100                 1001\n                         0010010000010\n                         01010 '10'4010\n                                       1111001001001\n                         0101001001010ei\n                           01010010\n---\n        MasshoAmount & Data\n         Massive Amount of Data\n\n\n\uf097 Image and Signal Processing\n    \u25e6 3-D Sonar Beamforming\n    \u25e6 Automatic Target Recognition\n    \u25e6 Video Stream Compression\n\uf097 Pattern and Syntax Detection\n    \u25e6 Network Intrusion Detection\n    \u25e6 Network Data Extraction\n    \u25e6 Biosequence Parser\n\uf097 Semantic Data Processing\n    \u25e6 Network Data Classification\n    \u25e6 Network Information Clustering\n    \u25e6 Content based Network Router\n\uf097 High Performance Computing\n    \u25e6 High Performance Networks\n    \u25e6 Scalable Distributed Computing\n    \u25e6 Automatic Thermoregulation\n---\nComputer Networks\n Computer Networks\n\n\n\uf097 Challenges\n   \u25e6 High Bandwidth\n   \u25e6 Continuous Streams\n   \u25e6 Insufficient Processing\n\uf097 Current Practice\n   \u25e6 No Monitoring\n   \u25e6 Superficial Monitoring\n   \u25e6 Data Sampling\n   \u25e6 Batch mode Process         Mape\n                              A Map of Internet in June 28, 1999\n---\n Processlng Network Data\n  Processing Network Data\n\n\n\uf097 Traffic Monitor                      data  data\n   \u25e6 Packet Detection and Filtering\n   \u25e6 Packet Classification/Clustering\n   \u25e6 Network Forensics                 code         new code\n\uf097 Processing Node                      data         new data\n   \u25e6 Packet Modifications                    CODE\n   \u25e6 Data Extractions                  data  CODE      new\n   \u25e6 Active Networks                         CODE      data\n\uf097 Packet Router\n   \u25e6 Header Field based Routing              Content\n   \u25e6 Payload Content based Routing     data            data\n---\nSeveral Open Problems\n Several Open Problems\n\n\n \uf097 Network Security\n    \u25e6 Complex Attacks\n    \u25e6 24/7 Attacks from Remote Locations\n    \u25e6 Huge Financial Loss\n \uf097 Internet Data Analysis\n    \u25e6 Terrorism\n    \u25e6 E-commerce\n    \u25e6 Social Network\n---\nGeneral Approach\n General Approach\n\n\n \uf097 Clean Up Meta Data\n \uf097 Abstract Based on Known Model\n \uf097 Pattern Search\n \uf097 Regression \u2013 Noise Filtering\n---\n   Detectng Network Intruskons\n   Detecting Network Intrusions\nMinimal Processing: Scan the address         Secured\n\u2022 No knowledge of the content                Computers\n\n\n  Internet\n                                             6one0\n                                             #terd\n                    2/15/2007       ChoInspection Area  9\n---\n Decp Packet Inspecton\n Deep Packet Inspection       Secured\n                              Computers\n\n\nInternet\n\n\n                         OK\n                                Bour\n                                bud\n                         Inspection Area\n---\nCharacterist dAtnadks\nCharacteristic of Attacks\n\n\n \uf097 Static packet header information\n \uf097 Attacks are embedded in packet payload\n \uf097 Unpredictable location of attack pattern\n \uf097 Solution: Deep Packet Inspection\n\n\n    TCP/IP\n\n\n             Computer Network Packet\n---\n       Decp Packet Inspecton\n        Deep Packet Inspection\n\n\n                                      Header ID\nHeader               Deep Packet          Worm\nPayload                                   Index\n                     Inspection EnginePattern 1\n                                      Pattern 2\n                                      Pattern 3Worm\n\n\n \uf097 Packet Normalization                    Stinb\n \uf097 Static Header Inspection                   Pattem\n \uf097 Dynamic Payload Inspection                  Matcher\n \uf097 Intrusion Detection/Prevention\n---\nDeskn Platorm\nDesign Platform\n \uf097 General Purpose Processors\n   \u25e6 Pro: Flexibility of Software\n   \u25e6 Con: Limited Processing Performance\n \uf097 Application Specific Processors\n   \u25e6 Pro: Higher Performance per Cost\n   \u25e6 Con: Limited Programmability\n \uf097 Hardware Accelerated Devices\n   \u25e6 Leverage Parallel Hardware Designs\n   \u25e6 Programmable Hardware\n \uf097 Cloud Computers?\n---\n         Pattemn Matchlng In FPGA\n         Pattern Matching in FPGA", "start_char_idx": 0, "end_char_idx": 4880, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea5f9902-9f04-41cb-9ef8-1732d2317390": {"__data__": {"id_": "ea5f9902-9f04-41cb-9ef8-1732d2317390", "embedding": null, "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948", "node_type": "4", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "5a34d8ebcbc5b82813918343fd2bca5081aece717bcfbb89b31039ab7801d84d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41aff24e-7bcc-4593-99d4-2180946e1f21", "node_type": "1", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "510489fbbb62a52843a545c764dc8badee1f227c1e07a1dc0a40ea7c4c12fff2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea161f4f-46ad-400c-977e-6a192c20f0e4", "node_type": "1", "metadata": {}, "hash": "742d2cb83177348ba404cc7aa3a807a42ccd937c3996043fd90edad833d842f7", "class_name": "RelatedNodeInfo"}}, "text": "TCP/IP\n\n\n             Computer Network Packet\n---\n       Decp Packet Inspecton\n        Deep Packet Inspection\n\n\n                                      Header ID\nHeader               Deep Packet          Worm\nPayload                                   Index\n                     Inspection EnginePattern 1\n                                      Pattern 2\n                                      Pattern 3Worm\n\n\n \uf097 Packet Normalization                    Stinb\n \uf097 Static Header Inspection                   Pattem\n \uf097 Dynamic Payload Inspection                  Matcher\n \uf097 Intrusion Detection/Prevention\n---\nDeskn Platorm\nDesign Platform\n \uf097 General Purpose Processors\n   \u25e6 Pro: Flexibility of Software\n   \u25e6 Con: Limited Processing Performance\n \uf097 Application Specific Processors\n   \u25e6 Pro: Higher Performance per Cost\n   \u25e6 Con: Limited Programmability\n \uf097 Hardware Accelerated Devices\n   \u25e6 Leverage Parallel Hardware Designs\n   \u25e6 Programmable Hardware\n \uf097 Cloud Computers?\n---\n         Pattemn Matchlng In FPGA\n         Pattern Matching in FPGA\n\n\n           Matching \u201cABC\u201d in serialized string\n\n\nSerial String Input      8-bit pipeline         Serial String Output\n\n\n           C   B    A\n\n\n                         C    B    A10                 Match\n                          10   10      1\n                   \u201cABC\u201d Comparator\n---\n   Sabbl Pattem Matcher\n    Scalable Pattern Matcher\n\n\n          8         B       Three 4-input  A\n          8                 Look-up-tables\n4Byte               A  B                   B  A\nInput     8         B  A   B               A  B  A\n          8         A  B   A  B            B  A  B   A\n\n\n                    B  A   B  A               B  A   B\n                       B   A  B                  B   A\n                           B  A                      B\n                              B\n\n\n             OR\n             Gate               1 bit\n                      Rule for  Register     Rule for\n                      \u201cBABAB\u201d                \u201cABAB\u201d\n---\n         Scalable Pattern Matcher\n\n\n                8          B            A\n      4Byte     8          A  B         B   A\n      Input     8          B  A  B      A   B  A\n                8          A  B  A B    B   A  B A\n\n\nReuse Logic                B  A  B   A      B  A   B\nFor Equivalent                B  A   B         B   A\nSubstrings                       B   A             B\n                                     B\n\n\nNumber of\n4-input LUTs = 110= 84      Rule for       Rule for\n                            \u201cBABAB\u201d        \u201cABAB\u201d\n---\n          Scalable Pattern Matcher\n\n\n                 8          B            A\n      4Byte      8          A   B        B  A\n      Input      8          B   A   B    A  B   A\n                 8DecoderA      B   A B  B  A   B A\n\n\n Reuse Logic                B   A   B\n For Equivalent                 B   A\n Substrings                         B\n   Pre-decode\n   Bytes to One-hot64.5% Reduction\n        In Logic\n\n\nNumber of\n4-input LUTs = 84= 39         Rule for     Rule for\n                              \u201cBABAB\u201d      \u201cABAB\u201d\n---\nNew Infrastrucur INew Mettods\n New Infrastructure/New Methods\n\n\n \uf097 Cloud Computing Platforms?\n \uf097 How Would You Do This?\n \uf097 What Platform Would You Use?\n \uf097 Approach\n    \u25e6 Pre-filtering\n    \u25e6 Parallel Processing \u2013 Data Differentiation\n    \u25e6 Deep Data Analysis \u2013 Final Verdict\n---\nBieData\nBig Data\n\n\n \uf097 Methodology\n    \u25e6 String Pattern Matchers\n    \u25e6 Network Intrusion Detection System\n    \u25e6 Bag of Words based Document Classification\n \uf097 Towards Advanced Data Processing\n    \u25e6 Detecting Syntax and Semantics of data\n    \u25e6 Using grammatical structure to process data\n    \u25e6 Data structure with probabilistic models\n\n\n                  2/15/2007         Cho            19\n---\n          Meta Data Fltering\n           Meta Data Filtering\n\n\n                                       HTML Source Document\n\n\n                      <h2>Company Overview</h2>\n                      <!-- Corporate Fact SheetCorporate Fact Sheet --> <p>Founded by <a href=\n                      \u201c/about/profile.html\u201d>Dr. J. Robert Beyster</a> and a\n                      \u201c/about/profile.html\u201d>\n                      small group of scientists in 1969, SAIC, a Fortune 500\n                      company, now ranks \u2026 and have more than 43,000 <!\u2013 AlsoAlso\n                      update employee number on: saic.com/news/0722.html -->\n                      update employee number on: saic.com/news/0722.html", "start_char_idx": 3848, "end_char_idx": 8267, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea161f4f-46ad-400c-977e-6a192c20f0e4": {"__data__": {"id_": "ea161f4f-46ad-400c-977e-6a192c20f0e4", "embedding": null, "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948", "node_type": "4", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "5a34d8ebcbc5b82813918343fd2bca5081aece717bcfbb89b31039ab7801d84d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea5f9902-9f04-41cb-9ef8-1732d2317390", "node_type": "1", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "df6ed5e92a8654520de9fa692c77a22f0de783c20641b2102e9e26064844b958", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4b63bac-f88e-41b4-a048-af03df99ae64", "node_type": "1", "metadata": {}, "hash": "0439e31d7704cfca69de226ea248cf85036abc676b531dd6c6e70bc72b67b7d3", "class_name": "RelatedNodeInfo"}}, "text": "2/15/2007         Cho            19\n---\n          Meta Data Fltering\n           Meta Data Filtering\n\n\n                                       HTML Source Document\n\n\n                      <h2>Company Overview</h2>\n                      <!-- Corporate Fact SheetCorporate Fact Sheet --> <p>Founded by <a href=\n                      \u201c/about/profile.html\u201d>Dr. J. Robert Beyster</a> and a\n                      \u201c/about/profile.html\u201d>\n                      small group of scientists in 1969, SAIC, a Fortune 500\n                      company, now ranks \u2026 and have more than 43,000 <!\u2013 AlsoAlso\n                      update employee number on: saic.com/news/0722.html -->\n                      update employee number on: saic.com/news/0722.html\n\n\nTAGBOT                employees with offices in over 150 cities. </p>\n   \uf097 String Patterns\n       \u25e6 HTML tags can be detected and marked\n       \u25e6 Marks can be used to filter out the tags\n       \u25e6 Discrete gates, Memory based, Hybrid filter, Bloom filter and etc.\n   \uf097 Detect and Filter out HTML tags\n       \u25e6 <h2>, </h2>, <p>, </p>, <a href=, </a>, <!--, -->\n   \uf097 Some unwanted texts are still not filtered away!\n---\n  Semantk Anakek\n    Semantic Analysis\n\n\n                                                             HTML Source Document\n\n\n                                    hdr2               strg                  hdr2\n                                   <h2>Company Overview</h2>comm                              para          strg         link href\n                                   <!-- Corporate Fact Sheet --> <p>Founded by <a href=quot    strg                      link\n                                   \u201c/about/profile.html\u201d>Dr. J. Robert Beyster</a> and a\n                                   small group of scientists in 1969, SAIC, a Fortune 500strg\n                                   company, now ranks \u2026 and have more than 43,000 <!\u2013 Alsocomm\n                                   update employee number on: saic.com/news/0722.html -->strg                           para\n\n\nTAGBOT                             employees with offices in over 150 cities. </p>\n       Token List\n       (1) hdr2 : \u2018h2\u2019                                             Simple HTML Grammar\n                                                                   (1) Tag_Name \u2192 hdr2 | para | link\n       (2) para : \u2018p\u2019                                              (2) Comment \u2192 \u2018<!-\u2019.comm.\u2018-->\u2019\n       (3) link : \u2018a\u2019                                              (3) Attrib                \u2192 href.quot | \u03b5\n       (4) href : \u2018href=\u2019                                          (4) Tag_Head \u2192 \u2018<\u2019.Tag_Name.Attrib.\u2018>\u2019\n       (5) quot : \u2018\u201d\u2019.alpnum*.\u2018\u201d\u2019                                  (5) Tag_Tail \u2192 \u2018</\u2019.Tag_Name.\u2018>\u2019\n       (6) comm : alpnum*                                          (6) Expr                  \u2192 Comment | strg | \u03b5\n       (7) strg : alpnum*                                          (7) Line                  \u2192 Tag_Head.Line.Tag_Tail\n                                                                                               | Expr.Line.Expr | Expr\n                                                                   (8) Content \u2192 Line.Content\n---\n    Lansase Pareing\n      Language Parsing\n\n\n                     Grammar                                     Tokens\n\n\nSTRING [a-zA-Z0-9-]+             0) <card>\n%%                               1) </card>\ncard:           \"<card>\" routekey name title phone2) <routekey>\n\"</card>\"                        3) </routekey>\nroutekey:       \"<routekey>\" route \"</routekey>\"4) first\nroute:           routefirst | routelast5) last\nroutefirst: \"first\"              6) <name>\nroutelast:      \"last\"           7) </name>\nname:           \"<name>\" nameN \"</name>\"8) <first>\nnameN:           nameFL | nameLF [a-zA-Z0-9-]+9)\nnameFL:          firstFL lastFL10) </first>\nnameLF:          lastLF firstLF11) <last>\nfirstFL:        \"<first>\" STRING \"</first>\"9-]+12) [a-zA-Z0-\nlastFL:         \"<last>\" STRING \"</last>\"13) </last>\nlastLF:         \"<last>\" STRING \"</last>\"14) <title>\nfirstLF:        \"<first>\" STRING \"</first>\"9-]+15) [a-zA-Z0-\ntitle:          \"<title>\" STRING \"</title>\" | \u03b516) </title>\nphone:          \"<phone>\" STRING \"</phone>\" | \u03b517) <phone>\n%%                               18) [a-zA-Z0-9-]+\n                                 19) </phone>\n---\nGrammar                                            Tokanber\n                                                     Tokenizer", "start_char_idx": 7531, "end_char_idx": 11972, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4b63bac-f88e-41b4-a048-af03df99ae64": {"__data__": {"id_": "f4b63bac-f88e-41b4-a048-af03df99ae64", "embedding": null, "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948", "node_type": "4", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "5a34d8ebcbc5b82813918343fd2bca5081aece717bcfbb89b31039ab7801d84d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea161f4f-46ad-400c-977e-6a192c20f0e4", "node_type": "1", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "a96e81f1badd8dd65cfd4d6d77f25a00b96412a05fb21232ff1f7ac26d7f49b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba7036fb-21c0-4676-b107-d651a759e962", "node_type": "1", "metadata": {}, "hash": "9ae2cf9cacd7a7059c48e9d2f99ceb0240e15bf70bf64e16d7b274049347fa7c", "class_name": "RelatedNodeInfo"}}, "text": "Tokens\n         STRING [a-zA-Z0-9-]+a                                                                                             a         a  a        a               a  0) <card>\n         %%                                                                                     b                          b         b  b        b               b  1) </card>\n         Data\n             card:\n                  \"</card>\"8-bit\"<card>\" routekey name title phonecc                                                       c         c  c        c                  2) <routekey>\u2026In3) </routekey>m0routekey:to\"<routekey>\" route \"</routekey>\"4) first\n         route:                                    256-bitroutefirst | routelast                                                                                    5) last\u2026routefirst: \"first\"decoderTimed6) <name>m1\n         routelast:                                                    \"last\"                                                                                       7) </name>\n                                                                                               Segment\"</name>\"\u2026name:\"<name>\" nameN                                 8) <first>\n         nameN:                                                             nameFL | nameLFPattern                                                                  9) [a-zA-Z0-9-]+m2nameFL:Character Grid Array\n         nameLF:                                                            firstFL lastFL\n                                                                            lastLF firstLFMatcher                                                                   10) </first>\u202611) <last>\n         firstFL:                                                      \"<first>\" STRING \"</first>\"                                                                  12) [a-zA-Z0-9-]+m3\n         lastFL:m4[<]\"<last>\" STRING \"</last>\"m1[d]                                                                                                                 13) </last>\u2026lastLF:m3[c]\"<first>\" STRING \"</first>\"\n         firstLF:m2[a]\"<title>\" STRING \"</title>\" | \u03b5\"<last>\" STRING \"</last>\"m0[>]                                                                 \u201c<card>\u201d        14) <title>\n                                                                                                                                                                    15) [a-zA-Z0-9-]+m4\u2026title:m1[r]\"<phone>\" STRING \"</phone>\" | \u03b516) </title>\u2026phone:17) <phone>\n         %%                                                                                                                                                         18) [a-zA-Z0-9-]+\n                                                                                                                                                                    19) </phone>\n                                       Regular Expression Chain                                                                            \u201c</phone>\u201dToken Bits\n---\n          Grammar Parser\n           Grammar Parser\n\n\n                     Grammar                                        Start of Packet\nSTRING [a-zA-Z0-9-]+\n%%                                                               <card>\ncard:           \"<card>\" routekey name title phone\n\"</card>\"        routefirst | routelastFPGA\nroutekey:       \"<routekey>\" route \"</routekey>\"\nroute:                                                                              Data\nroutefirst: \"first\"DataTimed                                  <routekey>\nroutelast:In    \"last\"Segment \"</name>\"       Parsing          Application          Out\nname:           \"<name>\" nameN                                 Specific\nnameN:           nameFL | nameLFPattern       Structure\nnameFL:          firstFL lastFLMatcher                         Module\nnameLF:          lastLF firstLF                               first        last\nfirstFL:        \"<first>\" STRING \"</first>\"\nlastFL:         \"<last>\" STRING \"</last>\"\nlastLF:         \"<last>\" STRING \"</last>\"\nfirstLF:        \"<first>\" STRING \"</first>\"\ntitle:          \"<title>\" STRING \"</title>\" | \u03b5\nphone:          \"<phone>\" STRING \"</phone>\" | \u03b5\n%%                                                            </routekey>\n\n\n                                                         Parsing Structure\n---\nProcesslng Emall\n Processing E-mail", "start_char_idx": 12163, "end_char_idx": 16570, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba7036fb-21c0-4676-b107-d651a759e962": {"__data__": {"id_": "ba7036fb-21c0-4676-b107-d651a759e962", "embedding": null, "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948", "node_type": "4", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "5a34d8ebcbc5b82813918343fd2bca5081aece717bcfbb89b31039ab7801d84d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4b63bac-f88e-41b4-a048-af03df99ae64", "node_type": "1", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "8367cab4d33e0022e5e48c077d3317f14ae3d70100ba233c836ba97812805162", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de78f5c0-08b7-4f83-b5a0-694c5fb473a6", "node_type": "1", "metadata": {}, "hash": "8d2aee51cb3b7f6570967ce36c20bf7ee0973029e1d700cb47846db533d8ea91", "class_name": "RelatedNodeInfo"}}, "text": "Parsing Structure\n---\nProcesslng Emall\n Processing E-mail\n\n\nFrom sender@bang.smtp.server.com Fri Jul 7 13:16:33 2006 -0500                     Remove E-mail Headers\n                                                                                                        Remove E-mail Headers\n                                                                                   Remove E-mail HeadersConvert Text\nReturn-Path: <sender@smtp.server.com>\nX-Original-To: sender@smtp.server.com                                               and HTML Tags\nDelivered-To: sender@smtp.server.com\nReceived: from comp (mail.server.com [128.1.1.100])\nICi0ur/lPb+sx9W0ur26KSDAzLehv+4gxq/GxL/4ID0gx9G8urfEIMCvv6PB1sDnILrPx9G068el\n(\uace0\ub274\uc2a4=\uae40\uc131\ub355 \uae30\uc790) \uc544\ud504\uce74\ub2c8\uc2a4\ud0c4 \ubc14\uadf8\ub78c \uae30\uc9c0 \uc55e\uc5d0\uc11c \ud3ed\ud0c4\ud14c\ub7ec\uc5d0 \uc228\uc9c4\nus4gwve8rrTru+e0wiA3wM8ox/bB9r3DsKMpICK5zLG5wMwguLbEq7/AILnmxNq1qMW4vsa9w77Gby fs.smtp.server.com (Postfix) with SMTP id 1363C36C0A\n\ub2e4\uc0b0 \ubd80\ub300\uace0 \uc724\uc7a5\ud638 \ubcd1\uc7a5\uc758 \ube44\ubcf4\uac00 \uc804\ud574\uc9c0\uba74\uc11c \ud574\uc678\ud30c\ubcd1 \ubd80\ub300\uc758 \uc548\uc804\uc5d0 \ub300\ud55c \uc6b0\ub824\uac00 \ub192\uc544\uc9c0\nKEJEQSkgwLrH4MDHCrW/sOHA2rHdwLsgx6646SA2wNrIuLTjv6EgurmxzcfSILz2IMDWwLsgsM0ifor <sender@smtp.server.com>; Fri, 7 Jul 2006 13:16:33 -0500 (CDT)\n\uace0 \uc788\ub294 \uac00\uc6b4\ub370, \ub2e4\uc0b0\ubd80\ub300 \ubcf5\ubb34\uacbd\ud5d8\uc774\nMessage-ID: <000f01c6a1f1$79ebe1d0$3699fc80@receive.server.com>\nwMy287DtILi7x9+02S4KCsfRIML3vK6067vntMIgwMyzryC/rMfVtLq9ur/NIMD8yK3F68itv6G8\n\uc788\ub294 \uc804\uc5ed\ubcd1\uc774 \uc544\ud504\uce74\ub2c8\uc2a4\ud0c4\uc758 \uadfc\ubb34\uc5ec\uac74\uacfc \uc0c1\ud669\uc744 \ud138\uc5b4\ub1a8\ub2e4.", "start_char_idx": 16513, "end_char_idx": 17780, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de78f5c0-08b7-4f83-b5a0-694c5fb473a6": {"__data__": {"id_": "de78f5c0-08b7-4f83-b5a0-694c5fb473a6", "embedding": null, "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948", "node_type": "4", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "5a34d8ebcbc5b82813918343fd2bca5081aece717bcfbb89b31039ab7801d84d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba7036fb-21c0-4676-b107-d651a759e962", "node_type": "1", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "b2bd4ee6d7c196677aa899f12e1b2150b78c6ad6147273541010a2be1dd33e18", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e56b7086-2d39-4ea6-9571-c5b2d840ccbb", "node_type": "1", "metadata": {}, "hash": "421a9ff90e5cc3941193d5f3416a6cec6664436be08380fe8a08f6e92be47cac", "class_name": "RelatedNodeInfo"}}, "text": "From: \"sender\" <sender@smtp.server.com>\nrSAiucyxucDMIL/suK6/zSCw+MG4x9IgwMe757ChIMDWtMCzxCwgtscgua7BprimILTryK24psXr\n\uc9c0\ub09c 2004\ub144 8\uc6d4\ubd80\ud130 2005\ub144 2\uc6d4 \uc911\uc21c\uae4c\uc9c0 \ub2e4\uc0b0\ubd80\ub300\uc5d0\uc11c \ud1b5\uc5ed\ubcd1\uc73c\ub85c \uadfc\ubb34\ud55c \ucc9c\uc601\ub85d \uc528\ub294\nTo: <sender@smtp.server.com>\nx9ggx64gvPawoSDA1rTAs8SwoSDB37/kx8/B9iC068itwMcKx/y9xMC6IMHfv+THz8H2IL7KtNki\n\u201c\ud658\uacbd\uc801\uc73c\ub85c\ub294 \uac70\uc758\uc6b0\ub9ac\ub098\ub77c \uc0ac\ub78c\uc740 \uc811\ud574\ubcf4\uae30 \ud798\ub4e4 \uc815\ub3c4\ub85c \uc5f4\uc545\ud55c \uacf3\u201d\uc774\ub77c\uba70 \u201c\ubc14\uadf8\ub78c \uace0\uc9c0\ub294\nSubject: An Example of Korean E-mail via Outlook\nuOm8rSAiuLbEq7/AILW/sOHA2rHdIMfYwaYgv6m6zrChILnMsbnAzCC/7Liuv80gsPjBuMfSIMDH\n\ubaa8\ub798\ud22c\uc131\uc774\uc778\ub370, \ubaa8\ub798\uac00 \uc6b0\ub9ac\uac00 \uc0dd\uac01\ud558\ub294 \uac83\ucc98\ub7fc \ud718\ub0a0\ub9ac\ub294 \ubaa8\ub798\uac00 \uc544\ub2c8\ub77c \ub531\ub531\ud558\uace0 \uac74\uc870\ud55c\nDate: Fri, 7 Jul 2006 13:16:32 -0500\nu+ewoSDA1rTAs8Qgv6m6zrimIMbHsKG4p8fPtMIgsM0iwMy287jpvK0gwMywsMDMCri7x9+02S4K(\uace0\ub274\uc2a4=\uae40\uc131\ub355 \uae30\uc790) \uc544\ud504\uce74\ub2c8\uc2a4\ud0c4 \ubc14\uadf8\ub78c \uae30\uc9c0 \uc55e\uc5d0\uc11c \ud3ed\ud0c4\ud14c\ub7ec\uc5d0 \uc228\uc9c4\n\ub2e4\uc0b0 \ubd80\ub300\uace0 \uc724\uc7a5\ud638\n           \ub545\uc774\uace0,\ubaa8\ub798 \ubc14\ub78c \uac19\uc740\uac8c \ud55c \ubc88 \ub4e4\uc5b4\uc624\uba74 \ubc14\ub78c\ub54c\ubb38\uc5d0 \uc5bc\uad74\uc774 \uc544\ud50c \uc815\ub3c4\uc758 \uac15\ud48d\uc774 \uc774\ud2c0\uc758 \ud55c\nMIME-Version: 1.0\ubcd1\uc7a5\uc758 \ube44\ubcf4\uac00 \uc804\ud574\uc9c0\uba74\uc11c \ud574\uc678\ud30c\ubcd1 \ubd80\ub300\uc758 \uc548\uc804\uc5d0 \ub300\ud55c \uc6b0\ub824\uac00 \ub192\uc544\uc9c0\nCirdwcfRvLq3xCAiuLbEq7/AIMDasd0gx6646SA2wNrIuLTjILq5sc0iCgoqvt/IxCEgPGh0dHA6\n\uace0 \uc788\ub294 \uac00\uc6b4\ub370, \ub2e4\uc0b0\ubd80\ub300 \ubcf5\ubb34\uacbd\ud5d8\uc774 \uc0ac\ub78c\u2019\uacfc\uc758 \uc778\ud130\ubdf0\uc5d0\uc11c \u201c(\uc724\ubcd1\uc7a5\uc758 \uc8fd\uc74c\uc774) \uc815\ub9d0 \uc548\n                                                 \ubc88, \ud558\ub8e8\uc758 \ud55c \ubc88 \uc138\uac8c \ubd88\uc5b4\uc624\uace0 \uadf8\ub7ac\uc5c8\ub2e4\u201d\uace0 \ud68c\uc0c1\ud588\ub2e4.\nContent-Type: multipart/alternative;\nLy9rci5yZC55YWhvby5jb20vZ25fbmV3c19zZXRob21lLz9odHRwOi8va3IueWFob28uY29tLz4K\n\ucc9c \uc528\ub294 28\uc77c CBS \u2018\uae40\ud604\uc815\uc758 \uc774\uc288\uc640\uc788\ub294 \uc804\uc5ed\ubcd1\uc774 \uc544\ud504\uce74\ub2c8\uc2a4\ud0c4\uc758 \uadfc\ubb34\uc5ec\uac74\uacfc \uc0c1\ud669\uc744 \ud138\uc5b4\ub1a8\ub2e4.", "start_char_idx": 17781, "end_char_idx": 18935, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e56b7086-2d39-4ea6-9571-c5b2d840ccbb": {"__data__": {"id_": "e56b7086-2d39-4ea6-9571-c5b2d840ccbb", "embedding": null, "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948", "node_type": "4", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "5a34d8ebcbc5b82813918343fd2bca5081aece717bcfbb89b31039ab7801d84d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de78f5c0-08b7-4f83-b5a0-694c5fb473a6", "node_type": "1", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "c157039c19c5b10e20b8294abf7c16a8a0f0afc0513157b37ba2ef57189e56b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39c48f65-8811-455d-bcd0-90a6eb7ed3df", "node_type": "1", "metadata": {}, "hash": "88b66b5559f47fd9f835c2f630122152b06078c1070f45bc8676141d28b6208d", "class_name": "RelatedNodeInfo"}}, "text": "Content-Type: multipart/alternative;\nLy9rci5yZC55YWhvby5jb20vZ25fbmV3c19zZXRob21lLz9odHRwOi8va3IueWFob28uY29tLz4K\n\ucc9c \uc528\ub294 28\uc77c CBS \u2018\uae40\ud604\uc815\uc758 \uc774\uc288\uc640\uc788\ub294 \uc804\uc5ed\ubcd1\uc774 \uc544\ud504\uce74\ub2c8\uc2a4\ud0c4\uc758 \uadfc\ubb34\uc5ec\uac74\uacfc \uc0c1\ud669\uc744 \ud138\uc5b4\ub1a8\ub2e4.\n                                                     boundary=\"----=_NextPart_000_000C_01C6A1C7.9102C700\"\n\uc9c0\ub09c 2004\ub144 8\uc6d4\ubd80\ud130 2005\ub144 2\uc6d4 \uc911\uc21c\uae4c\uc9c0 \ub2e4\uc0b0\ubd80\ub300\uc5d0\uc11c \ud1b5\uc5ed\ubcd1\uc73c\ub85c \uadfc\ubb34\ud55c \ucc9c\uc601\ub85d \uc528\ub294 \uc800\ud76c\n                                                      \ud0c0\uae4c\uc6b4 \uc77c\uc774\uc9c0\ub9cc \uc0ac\uc2e4 \uac00 \uc788\ub358 \uc785\uc7a5\uc5d0\uc11c \ubcf4\uba74 \uadf8 \uc704\ud5d8\uc774 \uadf8 \ub2f9\uc2dc\uc5d0\ub3c4 \uc0c1\ub2f9\ud788 \ub9ce\uc558\uc5c8\uace0, \ud30c\ubcd1\uc744\nX-Priority: 3\n\u201c\uac08 \ub54c\ub3c4 \uc0c1\ub2f9\ubd80\ubd84 \uac01\uc624\ub97c \ud558\uace0 \uac00\ub294 \ubd80\ubd84\uc774\uae30\ub3c4 \ud588\ub2e4\u201d\uba70 \u201c\uc704\ud5d8\uc740 \uacc4\uc18d \uc8fc\uc704\uc5d0 \uc788\uc5c8\ub294\ub370, \uacbd\uc6b0\u201d\n\ubaa8\ub798\ud22c\uc131\uc774\uc778\ub370, \ubaa8\ub798\uac00 \uc6b0\ub9ac\uac00 \uc0dd\uac01\ud558\ub294 \uac83\ucc98\ub7fc \ud718\ub0a0\ub9ac\ub294 \ubaa8\ub798\uac00 \uc544\ub2c8\ub77c \ub531\ub531\ud558\uace0 \uac74\uc870\ud55c\n                                               X-MSMail-Priority: Normal\n\ud1b5\uc81c \ubc16\uc774\uc5b4\uc11c \uad49\uc7a5\ud788 \uc704\ud5d8\ud55c \uacf3\uc774\uc9c0\ub9cc \uc800\ud76c\uac00 \uc5b4\ub5bb\uac8c \ud574\ubcfc\uc218 \uc5c6\ub294, \uadf8\ub0e5 \uac01\uc624\ub9cc \ud558\uace0 \uc0b0\nX-Mailer: Microsoft Outlook Express 6.00.2900.2869\n                                                  \ud658\uacbd\uc801\uc73c\ub85c\ub294 \uac70\uc758\uc6b0\ub9ac\ub098\ub77c \uc0ac\ub78c\uc740 \uc811\ud574\ubcf4\uae30 \ud798\ub4e4 \uc815\ub3c4\ub85c \uc5f4\uc545\ud55c \uacf3\u201d\uc774\ub77c\uba70 \u201c\ubc14\uadf8\ub78c \uace0\uc9c0\ub294\n\ub545\uc774\uace0,\ubaa8\ub798 \ubc14\ub78c \uac19\uc740\uac8c \ud55c\n                \ub77c\uace0 \ub2f9\uc2dc\uc758 \uc2ec\uacbd\uc744 \uace0\ubc31\ud588\ub2e4!\ubc88 \ub4e4\uc5b4\uc624\uba74 \ubc14\ub78c\ub54c\ubb38\uc5d0 \uc5bc\uad74\uc774 \uc544\ud50c \uc815\ub3c4\uc758 \uac15\ud48d\uc774 \uc774\ud2c0\uc758 \ud55c\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2869\n\ubc88, \ud558\ub8e8\uc758 \ud55c \ubc88 \uc138\uac8c \ubd88\uc5b4\uc624\uace0 \uadf8\ub7ac\uc5c8\ub2e4\u201d\uace0 \ud68c\uc0c1\ud588\ub2e4.\n                               X-Antivirus: avast! (VPS 0627-3, 07/07/2006), Outbound message\n\ucc9c \uc528\ub294 28\uc77c CBS \u2018\uae40\ud604\uc815\uc758\n                   X-Antivirus-Status: Clean\uc774\uc288\uc640 \uc0ac\ub78c\u2019\uacfc\uc758 \uc778\ud130\ubdf0\uc5d0\uc11c \u201c(\uc724\ubcd1\uc7a5\uc758 \uc8fd\uc74c\uc774) \uc815\ub9d0 \uc548\n\ud0c0\uae4c\uc6b4 \uc77c\uc774\uc9c0\ub9cc \uc0ac\uc2e4\n            X-Virus-Status: No\uac00 \uc788\ub358 \uc785\uc7a5\uc5d0\uc11c \ubcf4\uba74 \uadf8 \uc704\ud5d8\uc774 \uadf8 \ub2f9\uc2dc\uc5d0\ub3c4 \uc0c1\ub2f9\ud788 \ub9ce\uc558\uc5c8\uace0, \ud30c\ubcd1\uc744\n\uac08 \ub54c\ub3c4 \uc0c1\ub2f9\ubd80\ubd84 \uac01\uc624\ub97c \ud558\uace0 \uac00\ub294 \ubd80\ubd84\uc774\uae30\ub3c4 \ud588\ub2e4\u201d\uba70 \u201c\uc704\ud5d8\uc740 \uacc4\uc18d \uc8fc\uc704\uc5d0 \uc788\uc5c8\ub294\ub370, \uc800\ud76c\n                                                   X-Virus-Checker-Version: clamassassin 1.2.3 with clamdscan / ClamAV 0.88.2/1587/Thu Jul 6 15:55:48 2006\n\ud1b5\uc81c \ubc16\uc774\uc5b4\uc11c \uad49\uc7a5\ud788 \uc704\ud5d8\ud55c \uacf3\uc774\uc9c0\ub9cc \uc800\ud76c\uac00 \uc5b4\ub5bb\uac8c \ud574\ubcfc\uc218 \uc5c6\ub294, \uadf8\ub0e5 \uac01\uc624\ub9cc \ud558\uace0 \uc0b0 \uacbd\uc6b0\u201d\n                                                    X-Spam-Checker-Version: SpamAssassin 3.0.5 (2005-11-28) on arlfs.smtp.server.com\n\ub77c\uace0 \ub2f9\uc2dc\uc758 \uc2ec\uacbd\uc744 \uace0\ubc31\ud588\ub2e4!", "start_char_idx": 18768, "end_char_idx": 20443, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39c48f65-8811-455d-bcd0-90a6eb7ed3df": {"__data__": {"id_": "39c48f65-8811-455d-bcd0-90a6eb7ed3df", "embedding": null, "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948", "node_type": "4", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "5a34d8ebcbc5b82813918343fd2bca5081aece717bcfbb89b31039ab7801d84d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e56b7086-2d39-4ea6-9571-c5b2d840ccbb", "node_type": "1", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "553ad9d60200f9956448cf46f6b45b3d33a13806abe55ebf59f5bb78bd4e00ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8516414-c862-4b71-a683-b43163b9d604", "node_type": "1", "metadata": {}, "hash": "0b7be54de2dc5ba177feca0f1dd5d6f80a579f915f24618e598808f45aa24797", "class_name": "RelatedNodeInfo"}}, "text": "X-Spam-Status: No, score=-4.6 required=6.0 tests=ALL_TRUSTED,AWL,BAYES_00,\n             HTML_40_50,HTML_MESSAGE autolearn=ham version=3.0.5\nX-Original-Status: O\nX-Original-X-UID: 3972\nContent-Length: 5040\nX-Original-X-Keywords:\n------=_NextPart_000_000C_01C6A1C7.9102C700\nContent-Type: text/html;\n             charset=\"utf-8\"\nContent-Transfer-Encoding: quoted-printable\n=EF=BB=BF<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">Extracting and Conversion of E-mail Body\n<HTML><HEAD>\n---\n                  RFC2822\n;                  RFC-2822\n; RFC 2822\n\n\n;\nALPHA = %x41-5A / %x61-7A           ; A-Z / a-z\nBIT = \"0\" / \"1\"\nCHAR = %x01-7F\nCR = %x0D\nCRLF = CR LF\nCTL = %x00-1F / %x7F\nDIGIT = %x30-39\nDQUOTE = %x22\nHEXDIG = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\nHTAB = %x09\nLF = %x0A\nLWSP = *(WSP / CRLF WSP)\nOCTET = %x00-FF\nSP = %x20\nVCHAR = %x21-7E\nWSP = SP / HTAB\nNO-WS-CTL = %d1-8 / %d11 / %d12 / %d14-31 / %d127\ntext = %d1-9 / %d11 / %d12 / %d14-127\nspecials = \"(\" / \")\" / \"<\" / \">\" / \"[\" / \"]\" / \":\" / \";\" / \"@\" / \"\\\" / \",\" / \".\" / DQUOTE\n\n\nquoted-pair = \"\\\" text\n\n\nFWS = [*WSP CRLF] 1*WSP\nctext = NO-WS-CTL / %d33-39 / %d42-91 / %d93-126\nccontent = ctext / quoted-pair / comment\ncomment = \"(\" *([FWS] ccontent) [FWS] \")\"\nCFWS = *([FWS] comment) (([FWS] comment) / FWS)\n\n\natext = ALPHA / DIGIT / \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\" / \"+\" / \"-\" / \"/\" / \"=\" / \"?\" / \"^\" /\n          \"_\" / \"`\" / \"{\" / \"|\" / \"}\" / \"~\"\natom = [CFWS] 1*atext [CFWS]\ndot-atom = [CFWS] dot-atom-text [CFWS]                2/15/2007                           Cho\ndot-atom-text = 1*atext *(\".\" 1*atext)                                                                 26\n---\n      E-mail Packet Modifier\n      E    mall Packet Modlier\n\n\n                                       Control Buffer\n             Pattern        Filter  FPGA\n             Semantics      FSM\nData          DataTimed                                                      Data\nIn            PacketsSegment           Parsing         1ApplicationModified  Out\n                Pattern                Structure         SpecificData\n                                       Packet Buffer   0ModulePackets\n                Matcher\n\n\n                          E-mail\n                          Content Modifier\n---\n  Toctokgy Tranthtkn\n   Technology Translation", "start_char_idx": 20460, "end_char_idx": 22771, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c8516414-c862-4b71-a683-b43163b9d604": {"__data__": {"id_": "c8516414-c862-4b71-a683-b43163b9d604", "embedding": null, "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948", "node_type": "4", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "5a34d8ebcbc5b82813918343fd2bca5081aece717bcfbb89b31039ab7801d84d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39c48f65-8811-455d-bcd0-90a6eb7ed3df", "node_type": "1", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "8916a6f1ea2788a5087636672d1db7edae20ffc970edf0b8e7e0072f29e65b6a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f0ff72e-8ca6-4085-8808-5d2de502a35d", "node_type": "1", "metadata": {}, "hash": "aff2feea15954d0f957b2aa181e0d68deea961e16117bbd4d8768778718bf022", "class_name": "RelatedNodeInfo"}}, "text": "Control Buffer\n             Pattern        Filter  FPGA\n             Semantics      FSM\nData          DataTimed                                                      Data\nIn            PacketsSegment           Parsing         1ApplicationModified  Out\n                Pattern                Structure         SpecificData\n                                       Packet Buffer   0ModulePackets\n                Matcher\n\n\n                          E-mail\n                          Content Modifier\n---\n  Toctokgy Tranthtkn\n   Technology Translation\n\n\n\uf097 Method\n    \u25e6 Define Grammar for Input\n    \u25e6 Example: E-mail\n    \u25e6 Parse the data at Real-time\n    \u25e6 Send clean data to HAIL      1GbE Line Card\n\uf097 ALPS\n    \u25e6 Apply on flow                TCP ProcessorALPS\n    \u25e6 Tokenize data                HAILHAIL           1 GbE Line Card\n    \u25e6 Construct data structure\n    \u25e6 Filter out data                          Backplane\n    \u25e6 10+ Gigabits/second\n---\n Idendiaatkn 0fLansr8es\n  Identification of Languages\n\uf097 HAIL                                  Bonjour!\n                                                Hello!R\n    \u25e6 Above 90% Accuracy with Large\n       Raw Documents                    Data In\n                                               Data In       ID Out\n                                                             ID Out\n    \u25e6 Can ID each packet                Document\n    \u25e6 2.4 Gigabits/second                                   Lang ID\n                                                                   Chinese\n                                                                          English\n                                                                                 French\n\uf097 Platform                           1GbE Line Card\n    \u25e6 Field Programmable Port\n       Extenders                     TCP Processor\n    \u25e6 Modular and Stackable Cards\n    \u25e6 Reconfigurable Devices         HAILHAIL            1 GbE Line Card\n\uf097 Problem\n    \u25e6 Input documents are NOT clean\n    \u25e6 Packets can be small                        Backplane\n    \u25e6 HTML tags and E-mail headers\n    \u25e6 Variety of other attributes\n---\n        Accurasy ImprovementCorrectly Identified DocumentAccuracy Improvement\n\n\n   10,816 email messages per data set in 14 different language documents\n\n\n 100%\n\n\n  90%\n\n\n  80%\n\n\n  70%\n\n\n  60%\n\n\n  50%\n\n\n  40%\n\n\n  30%\n\n\n  20%\n\n\n  10%\n\n\n   0%\n           75-bytes      150-bytes     300-bytes      600-bytes    1200-bytes\nHAIL Alone ALPS+HAIL       Size of Email Message Body\n---\nComputer Networks Research\n Computer Networks Research\n\n\n  \uf097 Data Processing\n     \u25e6 Grammar/Parser based Interpretation\n     \u25e6 Customizable Packet Fields and Actions\n     \u25e6 Hardware Accelerated System Response\n  \uf097 Platform Integration\n     \u25e6 Software based System Management\n     \u25e6 Hardware based Data Processor\n     \u25e6 Automated Hardware Generation\n     \u25e6 Cached bitfiles for Dynamic Reconfiguration\n     \u25e6 Micro/Macro Level Partial Reconfiguration\n  \uf097 100+ Gbps Network Applications\n     \u25e6 Hardware Accelerated Publish/Subscribe Network\n     \u25e6 Reconfigurable Multi-protocol Router\n---\nSummary\n  Summary\n\n\n  \uf097 Accumulation of Data\n      \u25e6 Bioinformatics, Computer Networks, and etc.\n      \u25e6 Massive amount of data\n      \u25e6 Slow streaming data processing\n  \uf097 Computer Networks\n      \u25e6 Detection, Filtering, Modifications, and Routing\n      \u25e6 Parallel Hardware Acceleration\n      \u25e6 Orders of Magnitude Speedup over SW Alone\n  \uf097 Research Direction\n      \u25e6 High Performance and Low Cost HW/SW Solutions\n      \u25e6 Research Infrastructure for Variety of Topics\n      \u25e6 Dynamic Reconfiguration for Future Network Research\n---\n0ne more anlmated slkda\none more animated slide\n---\n  RNA Strucuura\n  RNA Structure\n\n\n   Secondary Structure \u2013 Folded 3-D Shape\n\n\nPrimary Structure \u2013 Sequence of Nucleotides\n\n\n  C      A      A      C      G      U      G\n      Hydrogen\n       Bond\n---\n   RNA Stucuura\n   RNA Structure\n\n\n    Secondary Structure \u2013 Folded 3-D Shape\n\n\n                G     U\n\n\n              C     A\n\n\nC\n---\n         RNA Structure", "start_char_idx": 22228, "end_char_idx": 26232, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f0ff72e-8ca6-4085-8808-5d2de502a35d": {"__data__": {"id_": "3f0ff72e-8ca6-4085-8808-5d2de502a35d", "embedding": null, "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8682f656-9ff8-4a0f-9f52-4e35e170f948", "node_type": "4", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "5a34d8ebcbc5b82813918343fd2bca5081aece717bcfbb89b31039ab7801d84d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8516414-c862-4b71-a683-b43163b9d604", "node_type": "1", "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}, "hash": "9a419b974bd0050361e9a47de1b44878d5dcf07121ef5e49c60effb67a3a3711", "class_name": "RelatedNodeInfo"}}, "text": "Secondary Structure \u2013 Folded 3-D Shape\n\n\nPrimary Structure \u2013 Sequence of Nucleotides\n\n\n  C      A      A      C      G      U      G\n      Hydrogen\n       Bond\n---\n   RNA Stucuura\n   RNA Structure\n\n\n    Secondary Structure \u2013 Folded 3-D Shape\n\n\n                G     U\n\n\n              C     A\n\n\nC\n---\n         RNA Structure\n\n\n          Secondary Structure \u2013 Folded 3-D Shape\n              \u2022 Represent using Context Free Grammar\n              \u2022 Generate Stochastic CFG from Database\n              \u2022 Extend Stochastic CFG to Covariance Model\n                            G    UP0  \u2192 C P0  G(0.92) | C P1 A (0.03) | A L0 C(0.04) | \u2026\n                                  P0\u2192 C P1G\n                                  P1  \u2192 A L0  U(0.84) | A L0 G\n                                  P1\u2192 A L0U\n                                             G\n                                         C                   (0.01) | C P1 U(0.02) | \u2026\n                            C    AL0\u2192 A L1(0.87) | \u2026L0  A C L2 (0.89) | \u2026\u2192 A L1\n                                  L1  \u2192 C L2\n                                            L1\u2192             C      P0      G\n                                  L2  \u2192 G E0 (0.91) | \u2026\n                                  L2\u2192 G E0                  A      P1      U\n                                  E0  \u2192 \u03b5 (1.00)\n                                  E0\u2192 \u03b5\n                                                            A      L1\nStochastic Context-Free Grammars can\n                                    Covariance model allows parsing of\nContext-Free Grammars can                                   C      L2\nrepresent a single RNA sequence\n                               represent a family of RNA sequences\n                                                                  sequences with insertions and deletions\n                                                            G      L3", "start_char_idx": 25910, "end_char_idx": 27769, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cd35f98-e7bd-4371-9858-1467d4ddb805": {"__data__": {"id_": "3cd35f98-e7bd-4371-9858-1467d4ddb805", "embedding": null, "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b37362-526a-4bbf-a4be-1fd483576783", "node_type": "4", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "a700707168cf7575ee3e85aa03abe7514350fd622621088da5e237e875fb7375", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bd7baaf-f1c3-4360-a2cb-3e77acdf4dda", "node_type": "1", "metadata": {}, "hash": "00ffda26a2019adab84ab44c924e9c2264d13370e3c78411c85e9eae22ab540f", "class_name": "RelatedNodeInfo"}}, "text": "0Ee542LecuraI7: Internet of Things\n                                  EE542\n        Lecture 17\n         Internet and Cloud Computing\n\n\n         Young Cho\n         Department of Electrical Engineering\n         University of Southern California\n\n\n                                        6/13/2024  1\n---\nFnal Frokect Dbcusskon\n Final Project Discussion\n\n\n  \uf097 Requirements\n      \u25e6 Ten documents that support the validity and the value of your solution.\n      \u25e6 You must incorporate your custom xDot IIoT\n      \u25e6 You must incorporate AWS backend with Thingsboard IO\n      \u25e6 You must integrate AWS to analyze the data and respond (you may use\n         simple analytics or ML)\n  \uf097 Final Project Proposal Slide Deck\n      \u25e6 Slide 1: Title and Team members\n      \u25e6 Slide 2: Summary of the real-world problem - why IoT is the best\n      \u25e6 Slide 3: How your hardware and software are going to be used\n      \u25e6 Slide 4: Schedule and Who is going to be doing what (as much detail)\n      \u25e6 Slide 5: List of References (at least 3, including websites and conference\n         and journal papers \u2013 need a complete reference \u2013 summary of the\n         evidence)\n\n\n                                             6/13/2024 Internetworking and Distributed Systems2\n---\nCourse Schedub\n Course Schedule\n\n\n  \uf097 Oct 18: Lecture IoT\n  \uf097 Oct 23: Lecture IIoT\n  \uf097 Oct 25: Machine Learning\n  \uf097 Oct 30: Large Language Model\n  \uf097 Nov 1: Power Estimation with ML\n  \uf097 Nov 8: Career Advice Lecture (Mandatory)\n  \uf097 Nov 17: Practice Final Presentation 1\n  \uf097 Nov 19: Practice Final Presentation 2\n  \uf097 Nov 22-26: Thanksgiving Break\n  \uf097 Nov 27: Final Project Progress Presentation 1\n  \uf097 Nov 29: Final Project Progress Presentation 2\n  \uf097 Dec 13: Final Project Demo Video\n\n\n                                                   6/13/2024 Internetworking and Distributed Systems  3\n---\nThoVskon fr Internet ofThines\nThe Vision for Internet of Things\n\n\n \uf097 Push out computers into the real world\n \uf097 Billions of sensors and actuators\n \uf097 Zero configuration\n \uf097 Merging Cyberspace & Physical space\n\n\n                         6/13/2024         4\n---\n      Enerey MonltorineMMant System\n        Energy Monitoring/Mgmt System\n                                         Tenpt0htTempertan F\n                                                       Aotor                            Elevalors\n                                         Light\n                                                                                12  \u20ac,\n1\n1\n   17.00 18.00 19.06 20:00 21:00 22*00 23.00 90: 0801*00 02*0003:00\n                               Timc(GMT)\n \uf097 50 nodes on 4th floor\n \uf097 5 level ad hoc net\n \uf097 30 sec sampling\n \uf097 250K samples to database over 6 weeks\n\n\n                                                                     6/13/2024                     5\n---\n     Structural performance due to multi-directional groundCalch)\n     motions (Glaser & CalTech)\n\n\n                                                         Mote              51                                  Mote infrastructure\n                                                         Layout    1       `4  1\n                                                                                1\n                                                                   3  6        159\n                                                                                  5\n                                                                         1     2\n                                                                        81\n\n\n                                                                                    Comparison of Results\n                                                                                                            W\nWiring for traditional                                                                                                                   Frequency\nstructural instrumentation\n+ truckload of equipment                                                                                           1-914    0.001322 *2: 5.039y2: 0.0035223.125  00022\n                                                                                                                                        markerValue?\n                                                                                    6/13/2024 USC - PTE587                                                              6\n---\nNetwork Aksortthms\nNetwork Algorithms\n \uf097 Adaptive Routing\n \uf097 Network Query Processing\n \uf097 Distributed Data Aggregation\n \uf097 Localization/Time Synchronization\n \uf097 Power Management\n \uf097 Compression\n \uf097 Security\n\n\n                      6/13/2024       7\n---\nNod Requirements\n Node Requirements\n \uf097 Low Power, Low Power, Low Power\u2026\n \uf097 Support Multi-hop Wireless Communication\n \uf097 Self Configuring and Small Physical Size\n \uf097 Programmable Processor\n \uf097 Integrated Sensors\n \uf097 Meets Research Goals\n    \u25e6 Operating system exploration\n    \u25e6 Enables exploration of algorithm space\n    \u25e6 Instrumentation\n    \u25e6 Network architecture exploration\n\n\n                            6/13/2024         8\n---\nSystem Archltecture\n System Architecture", "start_char_idx": 0, "end_char_idx": 5100, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bd7baaf-f1c3-4360-a2cb-3e77acdf4dda": {"__data__": {"id_": "3bd7baaf-f1c3-4360-a2cb-3e77acdf4dda", "embedding": null, "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b37362-526a-4bbf-a4be-1fd483576783", "node_type": "4", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "a700707168cf7575ee3e85aa03abe7514350fd622621088da5e237e875fb7375", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3cd35f98-e7bd-4371-9858-1467d4ddb805", "node_type": "1", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "c3bea122a5336a9190ff84c5c8bb04109d5358d08abceb80a6b611857a96d387", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ecf391a-8e0f-4581-8ef5-132fac130f9e", "node_type": "1", "metadata": {}, "hash": "1fbb0383d64f784c6fbe8ae1e3e3dc19813be9b0714e2cc7790a5e62fc8192b3", "class_name": "RelatedNodeInfo"}}, "text": "6/13/2024       7\n---\nNod Requirements\n Node Requirements\n \uf097 Low Power, Low Power, Low Power\u2026\n \uf097 Support Multi-hop Wireless Communication\n \uf097 Self Configuring and Small Physical Size\n \uf097 Programmable Processor\n \uf097 Integrated Sensors\n \uf097 Meets Research Goals\n    \u25e6 Operating system exploration\n    \u25e6 Enables exploration of algorithm space\n    \u25e6 Instrumentation\n    \u25e6 Network architecture exploration\n\n\n                            6/13/2024         8\n---\nSystem Archltecture\n System Architecture\n\n\n  \uf097 Node Architecture\n     \u25e6 Hardware architecture: how different hardware\n       components interact with each other\n     \u25e6 Software architecture: how software pieces are\n       put together for various functionalities\n  \uf097 Network architecture\n     \u25e6 How nodes interact through different topologies\n     \u25e6 How different protocols coordinate such\n       interaction\n\n\n                               6/13/2024                9\n---\nTho Nodkes\n The Nodes\n\n\n  \uf097 Alternative Names\n       \uf097 Wireless Sensor Network\n       \uf097 Cyber-Physical Systems\n       \uf097 Internet of Everything\n  \uf097 Sensing the Environment\n     \u25e6 Temperature, pressure, flow rate, etc.\n     \u25e6 Calibration\n  \uf097 Intelligent Data Processing\n     \u25e6 Data processing/forming\n     \u25e6 Detect problems locally or with neighbors\n     \u25e6 Proactively report exceptions\n  \uf097 Collaborative Networking\n     \u25e6 Does not require special infrastructure\n     \u25e6 Sensor nodes relay data for other nodes\n\n\n                                         6/13/2024  10\n---\nComposlton ef Node\n Composition of Node\n\n\n  \uf097 Sensor\n     \u25e6 Detect/Measure Physical Phenomenon\n     \u25e6 Variety of Responses\n     \u25e6 Different Types of Sensors\n  \uf097 Network\n     \u25e6 Communications between the Nodes\n     \u25e6 Multiple Wired/Wireless Nodes\n     \u25e6 Data Distribution\n  \uf097 Intelligence\n     \u25e6 General Purpose Processor\n     \u25e6 Application Specific Logic\n     \u25e6 Software\n\n\n                                6/13/2024  11\n---\nTha Focersor\nThe Processor\n\n\n \uf097 Intelligence in the Node\n \uf097 Important Questions\n   \u25e6 What\u2019s inside a microcontroller today?\n   \u25e6 What peripheral support?\n   \u25e6 How do you program one?\n   \u25e6 How much memory?\n   \u25e6 Programming platforms?\n\n\n                              6/13/2024      12\n---\nFigure 1_           The ATmega103(L) Block DiagramPFOPFZ                                      PAO -PA7                                      PCO   PC?\n           VCC\n           GND                             PORTF BUFFERS                             PORTA DRIVER BUFFERS                               PORTC DRIVERS\n          AVCC\n                                ANALOG MUX                    ADC                                     ReCTP8RTA                         DATAAEGISTERPORTC\n                                                                                                                        8-BIT DATA PUS\n         AGND                                                                                                                                                                    XTALI\n          ArEF\n                                                                                                                                             OSCILLATOR\n                                                                                                                                                                                JXALI\n                                              PROGAAM                        STACK                              WATCHDCS                    OSCILLATOR\n                                              CQUNTER                      PoinTER                                 TineR                                                         10sc2\n                                             PROGSHM                         SrAM                             HCUCOUIROL                     TIMInG ANIDCONTROL                 \"TOSC1\n                                                                                                                 REGISTER\n                                                                                                                                                                                RESEC\n                                            INSTRUCTION                    GENERAL                                 TIMERI\n                                              REGISTER                     PURPOSE                              COUNTERS\n                                                                          REGISTERS\n                                            INSTRUCTIONDECODER                                                 WterRuPT\n                                              CCNTROLLINES                                                        EEPAOM\n                                                                            STATUS                            PROGRAMMING\n                                                                           REGISTER                                LOGIC\n                                                                              SPI                                   UART\n                1{            DATA REGISTERORTE          REG.PORTEDATA dia    DATA REGISTERPORTB        REG PORTBDATAdiR;        DAT: AEGISTERPORTD        REG. PORTDDATA DIR_\n                  8\n                                      PORTE DRIVER PUFFERS                           PORTB DRIVER BUFFERS                               FORID DRIVERI BUFFERS                    VCC\n                                                                                                                                                                                 GND\n                                               PEOPE-                                         PBSPB7                                             PDOPD7\n                                                                                                                      6/13/2024                                                         13\n---\nTha Comwurkatbn\n The Communication\n \uf097 Major RF Devices\u25e6 Cordless Phones Digital/Analog\n       \uf096 Single Channel\n    \u25e6 Cellular Phones\n       \uf096 Multi-channel, Base station controlled\n    \u25e6 802.11\n       \uf096 \u201cwireless Ethernet\u201d\n    \u25e6 Bluetooth\n       \uf096 Emerging, low-power frequency hopping", "start_char_idx": 4611, "end_char_idx": 10901, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ecf391a-8e0f-4581-8ef5-132fac130f9e": {"__data__": {"id_": "2ecf391a-8e0f-4581-8ef5-132fac130f9e", "embedding": null, "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b37362-526a-4bbf-a4be-1fd483576783", "node_type": "4", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "a700707168cf7575ee3e85aa03abe7514350fd622621088da5e237e875fb7375", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bd7baaf-f1c3-4360-a2cb-3e77acdf4dda", "node_type": "1", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "e008712855040a5958f2840a74ca60807d8995ab7c2f9658508fed7f60084825", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8bb87013-8e45-4ba4-aabe-4f00de8fce19", "node_type": "1", "metadata": {}, "hash": "c064680495d9d406207c8b1e7dcf3f8bcf8047ebce6d28072d0492cd7822cc9a", "class_name": "RelatedNodeInfo"}}, "text": "6/13/2024            14\n---\nMoblk PhoneAn Ultmata lot\n Mobile Phone: An Ultimate IoT\n               cullan Puncexadt         TrF5IeTranecieva\n         Esweers\n         2                       clckGan\n                 Kerbard Sed\n  cmicud6\n                                                    TCS2SO0 Chipset Solution\n Processor: ARM9, 120Mhz + DSP       Communication: 270.833 kbps RF\n\n\n                                 6/13/2024                                15\n---\nTho Softwara\nThe Software\n\n\n \uf097 TinyOS: Started the Academic Research Boom\n \uf097 OS/Runtime model designed to manage the high\n   levels of concurrency required\n \uf097 Gives up IP, sockets, threads\n \uf097 Uses state-machine based programming\n   concepts to allow for fine grained concurrency\n \uf097 Provides the primitive of low-level message\n   delivery and dispatching as building block for all\n   distributed algorithms\n\n\n                              6/13/2024                16\n---\nErty bT:MICA\n  Early IoT: MICA\n\n\n   \uf097 Atmel ATMEGA103                                  51-Pin I/O Expansion Connector\n                                                      Digital I/O 8 Analog I/O Lines8 Programming\n       \u25e6 4 Mhz 8-bit CPU\n       \u25e6 128KB Instruction Memory\n       \u25e6 4KB RAM                      DS2401 Unique ID    Atmega103 Microcontroller\n       \u25e6 5.5mA active, 1.6mA idle,<1uA powered down\n   \uf097 4 Mbit flash (AT45DB041B)Power ControlTransmission         Hardware                    Coprocessor\n                                                                Accelerators\n       \u25e6 SPI interface                       TR 1000 Radio Transceiver\n       \u25e6 1-4 uj/bit r/w                                                      4Mbit External Flash\n   \uf097 RFM TR1000 radio\n       \u25e6 50 kb/s \u2013 ASK                                   Power Regulation MAX1678 (3V)\n       \u25e6 Communication focused hardware acceleration\n   \uf097 Network programmable\n   \uf097 51-pin expansion connector                                             Anc 01821\n       \u25e6 Analog compare + interrupts                                  100z71276\n   \uf097 GCC based tool/programming chain\n\n\n                                           2xAA form factor         Cost-effective power source\n\n\n                                                  6/13/2024                                            17\n---\nConstralngs\n Constraints\n\n\n  \uf097 After Building Applications\n     \u25e6 System is highly memory constrained\n     \u25e6 Communication bandwidth is limited by CPU\n       overhead at key times.\n     \u25e6 Communication has bursty phases.\n  \uf097 Where did the Energy/Time go?\n     \u25e6 50% of CPU used when searching for packets\n     \u25e6 With 1 packet per second, >90% of energy goes to\n       RX!\n\n\n                                 6/13/2024               18\n---\nTho Most Important Factor\nThe Most Important Factor\n\n\n \uf097 POWER, POWER, POWER\n \uf097 A Decade of Research: 90s-2000\n   \u25e6 Borrowed concepts from Distributed Systems\n   \u25e6 ALL with targeted focus on low power use\n \uf097 Minimize Power for the Same Result?!?\n   \u25e6 Communication: the biggest power consumer\n   \u25e6 Then processor\n   \u25e6 Then peripherals/sensors\n\n\n                          6/13/2024              19\n---\nImportant Servkces In bT\nImportant Services in IoT\n\n\n \uf097 Localization\n \uf097 Data Aggregation\n \uf097 Time Synchronization\n\n\n                        6/13/2024  20\n---\nSensor Network Localhatkn\n Sensor Network Localization\n\n\n\uf097 GPS Localization\n   \u25e6 Use the GPS coordinates\n      \uf096 Additional GPS units\n      \uf096 High Cost in Area and Energy\n      \uf096 Not always available\n\uf097 GPS-less Localization\n   \u25e6 Find Relative Angle\n      \uf096 Where the angular vectors meet\n   \u25e6 Find Distances and estimate coordinates\n      \uf096 Use Radio and/or Ultrasound\n      \uf096 Additional localization algorithm\n      \uf096 Low Cost in Area and Energy\n      \uf096 Available within range\n\n\n      6/13/2024                               21\n---\n                 TDOADistnco Cakubton\n                  TDoA: Distance Calculation\n\n\n Radio Transmitter                                         Time of Arrival ofTime of Arrival     Radio Receiver\n                                                           Ultrasound is \u2026TUof Radio is \u2026 TR\n\n\n                           ~ Distance\n\n\nUltrasound Transmitter                                                                       Ultrasound Receiver\n                                          Speed of Sound\n\n\n                               -               =    Time Difference of Arrival\n\n\n                                                                    6/13/2024                                     22\n---\n      Tlma Synchronbatkn\n      Time Synchronization", "start_char_idx": 10936, "end_char_idx": 15522, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8bb87013-8e45-4ba4-aabe-4f00de8fce19": {"__data__": {"id_": "8bb87013-8e45-4ba4-aabe-4f00de8fce19", "embedding": null, "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b37362-526a-4bbf-a4be-1fd483576783", "node_type": "4", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "a700707168cf7575ee3e85aa03abe7514350fd622621088da5e237e875fb7375", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ecf391a-8e0f-4581-8ef5-132fac130f9e", "node_type": "1", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "abd048fbb7db424d32da7f5ea282791f739aaac4278ed563ad37b6154cf1a66f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c9ae204-649b-4491-bb5c-93a55cbf75b6", "node_type": "1", "metadata": {}, "hash": "b084ff51cf22260abfcc1736d0f3a11fcbcfab3a4fcb47f209ae9751ef822a82", "class_name": "RelatedNodeInfo"}}, "text": "6/13/2024                               21\n---\n                 TDOADistnco Cakubton\n                  TDoA: Distance Calculation\n\n\n Radio Transmitter                                         Time of Arrival ofTime of Arrival     Radio Receiver\n                                                           Ultrasound is \u2026TUof Radio is \u2026 TR\n\n\n                           ~ Distance\n\n\nUltrasound Transmitter                                                                       Ultrasound Receiver\n                                          Speed of Sound\n\n\n                               -               =    Time Difference of Arrival\n\n\n                                                                    6/13/2024                                     22\n---\n      Tlma Synchronbatkn\n      Time Synchronization\n\n\n 0.99\n     1.98\n         2.97\n             3.96\n                 4.95\n                     5.94\n                         6.93\n                             7.92\n                                 8.91\n                                     9.900                10012\n                                                               3\n                                                                4\n                                                                 5\n                                                                  6\n                                                                   7\n                                                                    8\n                                                                     9\n\n\nDrift is highly dependent on the environment (i.e. Temp)\n       Difference in drift can accumulate over Time23\n---\n                                       Tma Synchronbzatkn\n                                         Time Synchronization\n\n\n                                                                                                                                                                              T1\n                     T4                                                                                                                                                                                    T2\n                                                                              9.9                                                       T3\n               14.85\n                    14.85\n                         10.89\n                              11.88\n                                   12.87\n                                        13.86\n                                             14.850.99\n                                                      1.98\n                                                          2.97\n                                                              3.96\n                                                                  4.95\n                                                                      5.94\n                                                                          6.93\n                                                                              7.92\n                                                                                  8.91\n                                                                                      9.900                                                                                                               10\n                                                                                                                                                                                                            11\n                                                                                                                                                                                                              12\n                                                                                                                                                                                                                13\n                                                                                                                                                                                                                  14\n                                                                                                                                                                                                                    1501\n                                                                                                                                                                                                                        2\n                                                                                                                                                                                                                         3\n                                                                                                                                                                                                                          4\n                                                                                                                                                                                                                           5\n                                                                                                                                                                                                                            6\n                                                                                                                                                                                                                             7\n                                                                                                                                                                                                                              8\n                                                                                                                                                                                                                               9\n                                                                                                           9.91114\n                                                                                                           9.91114                                                                             9.9:11:14\n          14.975\n      \uf097 T2 = T1 + Propagation Delay + Timer Offset1\n      \uf097 T4 = T3 + Propagation Delay \u2013 Timer Offset2\n   \u2022\uf097 Propagation Delay \u2248 ( ( T2Propagation Delay \u2248 ( (                                                           11 - 9.9 ) + ( 14.85 - 14 ) ) / 2 = 0.975- T1  ) + ( T4               - T3 ) ) / 2\n   \u2022\uf097 Timer Offset \u2248 ( ( T2Timer Offset \u2248 ( (                                                   11 - 9.9 ) - ( 14.85 -- T3 ) ) / 2- T1          ) - ( T4                   14 ) ) / 2 = 0.1250.125\n\n\n    Not exactly equal due to frequency drift of the clocks during the flight times of messages\n                                    May solve the problem, BUT time synchronizations COST resources!!\nFor resource constrained systems like wireless sensor network, fewer time synch is better.\n\n\n                                                                                                                                                                                          24\n---\nData Aesreaatton\nData Aggregation\n\n\n \uf097 Example:Virtual Gradient based\n    \u25e6 Flow of water from mountain to valley\n    \u25e6 Gradient is setup from network to Sink\n\n\n                             6/13/2024        25\n---\nSummary\n  Summary\n\n\n   \uf097 Key Components\n       \u25e6 Processor\n       \u25e6 Communication\n       \u25e6 Software\n   \uf097 The Main Constraint\n       \u25e6 Low Power Consumption\n       \u25e6 Comm then Processor then Peripheral/Sensor\n   \uf097 Important Services\n       \u25e6 Localization\n       \u25e6 Time Synchronization\n       \u25e6 Data Aggregation", "start_char_idx": 14718, "end_char_idx": 22735, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c9ae204-649b-4491-bb5c-93a55cbf75b6": {"__data__": {"id_": "2c9ae204-649b-4491-bb5c-93a55cbf75b6", "embedding": null, "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b37362-526a-4bbf-a4be-1fd483576783", "node_type": "4", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "a700707168cf7575ee3e85aa03abe7514350fd622621088da5e237e875fb7375", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8bb87013-8e45-4ba4-aabe-4f00de8fce19", "node_type": "1", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "cc0e4ac68a873046ce0cf1a164512563339e78102aaa198fb9ba6214faa1b76a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "af98c95d-1616-4263-93cc-7390f163d9f4", "node_type": "1", "metadata": {}, "hash": "2e0c92b46279ada4187b14c3fc7547d097e83fabcea159d0a6998d523fe32335", "class_name": "RelatedNodeInfo"}}, "text": "Not exactly equal due to frequency drift of the clocks during the flight times of messages\n                                    May solve the problem, BUT time synchronizations COST resources!!\nFor resource constrained systems like wireless sensor network, fewer time synch is better.\n\n\n                                                                                                                                                                                          24\n---\nData Aesreaatton\nData Aggregation\n\n\n \uf097 Example:Virtual Gradient based\n    \u25e6 Flow of water from mountain to valley\n    \u25e6 Gradient is setup from network to Sink\n\n\n                             6/13/2024        25\n---\nSummary\n  Summary\n\n\n   \uf097 Key Components\n       \u25e6 Processor\n       \u25e6 Communication\n       \u25e6 Software\n   \uf097 The Main Constraint\n       \u25e6 Low Power Consumption\n       \u25e6 Comm then Processor then Peripheral/Sensor\n   \uf097 Important Services\n       \u25e6 Localization\n       \u25e6 Time Synchronization\n       \u25e6 Data Aggregation\n\n\n                                                 6/13/2024 Internetworking and Distributed Systems  26\n---\n loT Growth Forecast\n  IoT Growth Forecast\n    ot    ANALYTIC 5                                     August 2018                     Insights that empower you t0 understand loT markets\nGlobal loT Market Forecast\n  Global loT Market in SB\n       1,600                                                                                                1,567\n       1,400\n       1,200\n       1,000                                                   CAGR39%\n         800\n         600\n         400\n         200     110         151\n                2017        2018        2019        2020        2021    2022        2023        2024        2025\nNote: Market defined as total spend of end-users on loT solutions\nSource: loT Analutics Research 2018\n                                                             6/13/2024  Internetworking and Distributed Systems           27\n---\nkb Sklls 2020\n  Job Skills 2020\n                Top 10 most popular tech                        Top 10 emerging tech skills 2020*\n                skills in 2020\"                                 1.   Gatsbyjs (web framework)\n                1:  Python                                      2.   AWS Big Data\n                2.   React (web)                                3.   React Hooks\n                     Angular                                         Microsoft Azure Architecture\n                     Machine learning                           5.   Next js (web framework)\n                5.   Docker                                     6.   Apache Airflow (data processing)\n                6.   Django                                          SwiftUl (Appleapps)\n                7.   CompTIA                                    8.  Pegasystems (digital process\n                8.   Amazon AWS                                      automation)\n                     Deep learning                              9.   ESP3Z (internet of things)\n                10. React Native (mobile)                       10.Quantum computing\n                                                                                Spurc e- Udenn Dala7070\nTop Tech Skills: Web development, quantum computing, and Internet of Things IoT\n\n\n                                                            6/13/2024     Internetworking and Distributed Systems  28\n---\nA Lot efbbs- No SkillsNo Sklbs\nA Lot of Jobs\n\n\n  \uf097 In-Demand Internet of Things (IoT) Skills\n\n\n  \u201cThe Internet of things (IoT) is in the midst of an\n  explosion, as more connected devices proliferate.\n  But there's a problem: not enough talent with the\n  right skills to manage and execute on IoT project.\n  So while IoT is poised to be the next great IT jobs\n  boom, insufficient staffing and lack of expertise is\n  the top-cited barrier for organiz currently looking to\n  implement and benefit from IoT, according to\n  research from Gartner.\u201d\n\n\n                                                    6/13/2024 Internetworking and Distributed Systems  29\n---\nPomerlng Induurbal Sents Equlpment\nPowering Industrial Sensing Equipment\n\n\n \uf097 Specific Field Device\n    \u25e6 Rosemount WirelessTransceivers\n    \u25e6 Continuous Monitoring of\n      Oil Pipes\n    \u25e6 Uses Lithium Battery (10\n      years self-life)\n    \u25e6 Short Life in Practice (1-2\n      years typical)\n \uf097 Our Research Goal\n    \u25e6 Remove the Batteries\n    \u25e6 Increase the System Life\n---\n                      Laboratory Tests\n                      Laboratory Tests\nRosemount Wireless Transmitter           Hot Plate with TEGs and Heatsink\n               Array of Capacitors  StackedPrototype         Rosemount\n                                          Boards          Wireless Gateway\n   31\n---\nPervaeto Thermoekecuk Geleratkn\n Pervasive Thermoelectric Generation\n\n\n   v2.0\n\n\n                          v4.0\n          mh  v2.1\n v1", "start_char_idx": 21733, "end_char_idx": 26620, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "af98c95d-1616-4263-93cc-7390f163d9f4": {"__data__": {"id_": "af98c95d-1616-4263-93cc-7390f163d9f4", "embedding": null, "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b37362-526a-4bbf-a4be-1fd483576783", "node_type": "4", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "a700707168cf7575ee3e85aa03abe7514350fd622621088da5e237e875fb7375", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c9ae204-649b-4491-bb5c-93a55cbf75b6", "node_type": "1", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "00e6ffebb91aa9c28f45fd25ce5ec61a915cd52de2ec45666996b37b8480129c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51a86f2f-fe1c-4e1d-a614-be65eb9202cf", "node_type": "1", "metadata": {}, "hash": "dc8c100cd2d82f20e6cb4a1c326b9cd25fea99c8062c0fdff32270e7d2e67ea6", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Specific Field Device\n    \u25e6 Rosemount WirelessTransceivers\n    \u25e6 Continuous Monitoring of\n      Oil Pipes\n    \u25e6 Uses Lithium Battery (10\n      years self-life)\n    \u25e6 Short Life in Practice (1-2\n      years typical)\n \uf097 Our Research Goal\n    \u25e6 Remove the Batteries\n    \u25e6 Increase the System Life\n---\n                      Laboratory Tests\n                      Laboratory Tests\nRosemount Wireless Transmitter           Hot Plate with TEGs and Heatsink\n               Array of Capacitors  StackedPrototype         Rosemount\n                                          Boards          Wireless Gateway\n   31\n---\nPervaeto Thermoekecuk Geleratkn\n Pervasive Thermoelectric Generation\n\n\n   v2.0\n\n\n                          v4.0\n          mh  v2.1\n v1\n\n\n                     v3.0\n---\n        Fully Integrated Battery Untt\n         Fully Integrated Battery Unit\n                          Lithium Thionyl  @    @\n    0-12V                Chloride Battery\n                                                7.2V\n\n\n                         Power     7.2V   Smart OR    7.2V\n   PowerPucke60Patonts Pendind              Chain\n                        Regulator\n\n\n                          Permasense PTG Unit\n  Perpetua\nPower Puck\n                                                            Permasense\n                                                               Sensor\n---\n       Functbonal Enerey Hbrvestdns\n        Functional Energy Harvesting\n       BatteryyBattery\n\n\nVIDEO: https://drive.google.com/file/d/0ByObcu8z9BbJdDBmLUZqMFI0YWM/view?usp=sharing\n---\n   Pervasive Thermoelectric Generation (PTG)\n\n\n                                                    PTG for Permasense Transceivers\n                                                      Successfully Tested in the Laboratory\n                                                       Higher Efficiency Conditioner Design\n                                                         Integrated Perpetua PowerPuck\n                                                              Integrated Dual Polarity\n                                                           Cono\nPTG for Rosemount Transceivers\n           Successful Field Trials\n         1+ Years Without Failure\n         With or Without Batteries\n        Integrated our TEG design\n          Integrated Dual Polarity\n        Integrated Module Chaining\n\n\n    VIDEO: https://drive.google.com/file/d/0ByObcu8z9BbJdDBmLUZqMFI0YWM/view?usp=sharing\n---\nPTG Summaryy\nPTG Summary\n\n\n \uf097 Powers Industrial Standard Wireless Sensor Nodes\n    \u25e6 6+ Months of Successful Operation in the Field\n    \u25e6 Conditions with Temperature Greater than 115 deg F\n \uf097 Deployed under Temperature Diff of less than 10\n    deg F\n    \u25e6 Tested working at 8 deg F\n    \u25e6 Skin in the mid 90\u2019s and room at 75 degrees F\n    \u25e6 Possible to power wireless computers with sensors\n \uf097 Low Cost - Pervasive Use\n    \u25e6 Less Than $100 per Unit with Estimated Overhead\n    \u25e6 As Compared to $200 Battery\n \uf097 Other Applications?\n---\nFhola basedWSSN\n Phone based WSN\n\n\n         Continuous                 Audio Upload                Efficient power\n            Audio                      using 3G                   optimization\n          Recording\n\n\n Remote Access              Robust            Solar Powered            Cost: ~$250\n\n\n                                        Audio\n                                     Processing\n \uf097 Smartphone \u2013 Various Sensors                         108 ,PMHome    Prople\n \uf097 Flash Ubuntu Touch OS\n \uf097 Reconfigure to use only the essential parts\n---\nSelfSufikckent Wreless Sensors\n Self-Sufficient Wireless Sensors\n---\n                                              Power Management\n                                                   Power Management", "start_char_idx": 25878, "end_char_idx": 29590, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51a86f2f-fe1c-4e1d-a614-be65eb9202cf": {"__data__": {"id_": "51a86f2f-fe1c-4e1d-a614-be65eb9202cf", "embedding": null, "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b37362-526a-4bbf-a4be-1fd483576783", "node_type": "4", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "a700707168cf7575ee3e85aa03abe7514350fd622621088da5e237e875fb7375", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af98c95d-1616-4263-93cc-7390f163d9f4", "node_type": "1", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "2470b9f108254446790bc27b0446120ba140c791d2c72b154a60fb578a8c026e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "abff2f6c-8c27-492f-9fdc-498c7aa78854", "node_type": "1", "metadata": {}, "hash": "43686a5254e49e95e4517578ea1f52d8a3d1cbfe079f5d6e54ce4da9c1108c5c", "class_name": "RelatedNodeInfo"}}, "text": "Continuous                 Audio Upload                Efficient power\n            Audio                      using 3G                   optimization\n          Recording\n\n\n Remote Access              Robust            Solar Powered            Cost: ~$250\n\n\n                                        Audio\n                                     Processing\n \uf097 Smartphone \u2013 Various Sensors                         108 ,PMHome    Prople\n \uf097 Flash Ubuntu Touch OS\n \uf097 Reconfigure to use only the essential parts\n---\nSelfSufikckent Wreless Sensors\n Self-Sufficient Wireless Sensors\n---\n                                              Power Management\n                                                   Power Management\n\n\n   Efficient power optimization                                                                                                                Solar Powered and Robust\n   \u2022             Display is always off                                                                                                         \u2022           Charges up during day\n   \u2022             Battery monitored every half an hour                                                                                          \u2022           Battery big enough to last 7 days\n   \u2022             Data turned on only when uploading and                                                                                                    without sun\n                 remote access                                                                                                                 \u2022           Sturdy case \u2013 Withstands high\n   \u2022             Goes into critical state when battery                                                                                                     temperatures and water-proof\n                 falls below 10%\nWed Aug        24 14;45:03 PDT 2016 Battery capacity is 93\nKed Aug 24 14.45303 PdT 2016 in MORMALmode\nKed Aug 24 15.15.02 PDT 2016 BatteryCapacity is 95came from higher Percentage                                                     Charging UP\nNed Aug 24 15:15.02 PDT 2016 in MORMALmode                                           came from higher Percentage                  charging up\nWed Au 24 15;45804 PDT 2016 Battery capacity i: 109Tromhigner Percentage                                                          charging up\nNed Aug24 16.15.02 PDT 2016patterycapacitycametromhigher Percentoze\nKed Aug\nWed Aug 24 16;15;02 PDT 2016 in MORMAL mode,15:45:84 PDT 2816 in MORMAL mode\n                                                                                     Camc1s 77                                    charging uP\nVed Aug\nLed Aug 24 16:45:03PDT 2816 in MORIAALmode16:45:03 PDT 2016 Batterycapacity i, 75from higher Percentage\nNed Aug 24 17.15.02 PDT 2016 Batterycapacity is 75came                                                                            charging\nKed     AUg 24 17;15.02 PDT 2016 in MORMALmode17.45.62PDT 2816 Battery Capacity is 72camc     from higher Percentage              charging\nKed Aug 2417:45:02PDT 2016 in MORIALmode\nNed Aug                                                                              Canetrom          higher Percentage          charging up\nWed Aug\nWed Aug 24 18;15;02 PdT 2016 in MORMALModc,18;15;02 PDT 2016botterycapacity is 70\nNed Aug 2418.45 .02 PDT 2016 in MORMALmode02 PDT 2816Dattery CapacitycameTromhigher Percentage                                    charging\nKed Aug              18.75            PDT 2016 Batterycopacity is 70came                      from higher Percentage              charging\nWedUE                19;5.02\nVed Aug 2419;15:02 PDT 2816 in MORMAL mode\nLed Aug 24 19.45.02 PDT 28163atterycapacity is 69came                                         {ro\"higher Percentage               charging\nNed Aug 24 19:45.02 PDT 2016 in MORMALmode                                           Canetrom          highe              entage  charging uP\nWed Aug              20;15;02 PDT 2016 Batterycapacity 15 76\nKed Aug 24 28:15:02 PdT 2816 in MORMALmade\nKed Aug 24 20.45.01 PDT 2016 Batterycapacityis 86came from higher Percentage                                                      charging\nNed Aug 24 20:45.01 PDT 2016 in MORMALmode                                           came from higher Percentage                  charging up\nWed Aug 24 21;15;01 PDT 2016 Battery Capacity is 95Tcc\"higherpercentage                                                           charging up\nNed Aug 24 21:15:01 PDT 2816 in MORMAL modecapacity is 95came\n       Aug24 21.45.02 PDT 2016 Battery\n---\nCbud Servers fr Data Storaga\n Cloud Servers for Data Storage", "start_char_idx": 28886, "end_char_idx": 33505, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "abff2f6c-8c27-492f-9fdc-498c7aa78854": {"__data__": {"id_": "abff2f6c-8c27-492f-9fdc-498c7aa78854", "embedding": null, "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8b37362-526a-4bbf-a4be-1fd483576783", "node_type": "4", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "a700707168cf7575ee3e85aa03abe7514350fd622621088da5e237e875fb7375", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51a86f2f-fe1c-4e1d-a614-be65eb9202cf", "node_type": "1", "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}, "hash": "521b376930609aead3c8d8f62e24274f68991584b8de03aba7f5969253fd255e", "class_name": "RelatedNodeInfo"}}, "text": "Continuous Audio Recording                       Audio Upload to Server\n   \u2022 44.1KHz sampling rate                           \u2022 Accessible via web page\n   \u2022 24 hours/7 days                                 \u2022 Every 6 hours\n   \u2022 Audio samples of configurable                   \u2022 Power efficient\n        length using Vorbis tools\n         Index of /testlaudio_files/node_alpha\n              bet    LaclildDxttiplien\n          Eub                                                                  Upload        Node\n\n\n                                                                                     Upload\n                                                Server                                       Node\n\n\n                                                                               Upload\n                                                                                              Node\n---\n                Remote Access\n                  Remote Access\n\u2022  Three step process                                                8s\n    \u2022 SMS to initialize reverse SSH from node                                             ssh_tunnel.sh\n    \u2022 Node SSH to the server                     Server                                    Node\n    \u2022 Server can access node through local port\n\u2022  SMS used as a side channel\n           (747) 237-1075                                Hello from OasysCheclBallc)peicenge\n                                                               Phone Number:\n                                                                 Send Shs\n                                                                 Aucio Filos]\n                                                                  Reroo\n                                                                 Dis corect\n            MSG Type: exec Args: /homel\n            phablet/workspace/ssh_tunnel sh G               Battery Percentage\n            Sep 14 1442\n            MSG: Type: exec Args: /homel\n            phablet/workspace/ssh_close sh\n            Sep 14,1448\n            MSG:Type: exec Args: /homel\n            phablet/workspace/ssh_tunnel sh\n            Sep 29, 16.00\n---\nFleld Deplment\nField Deployment", "start_char_idx": 33512, "end_char_idx": 35682, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23a21220-e420-46ac-8cd8-a39c8b79a12e": {"__data__": {"id_": "23a21220-e420-46ac-8cd8-a39c8b79a12e", "embedding": null, "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "234e5288-0853-46c4-bf94-b1354b27c5a2", "node_type": "4", "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "hash": "fccd156ae4484ad0ab863cd1807c9ad929c6264da092c5afa630135186465c3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b0502971-31e2-4673-a49b-3c847a7f89ea", "node_type": "1", "metadata": {}, "hash": "ad9828f4e3f64e6e68744754b28f655ccfae85539f6f11af04574e5518519810", "class_name": "RelatedNodeInfo"}}, "text": "0Ee542LecuraI8Ibt for Oil Industry\n                                  EE542\n        Lecture 18: IIoTBr OIl Indsty\n        Internet and Cloud Computing\n\n\n        Young Cho\n        Department of Electrical Engineering\n        University of Southern California\n\n\n                                     6/13/2024  1\n---\nNon-invasive Condition Monitoring (SEN)\n                                       NonIatNo Condidon Monttort (SEN)\n    \uf097 The Goal\n        \u25e6 Self Sustaining IIoT in the Real World\n        \u25e6 Use of IIoT to Increase Field Security and Oil Production with\n          Lower Cost\n    \uf097 Potentials\n        \u25e6 Potential for application in various remote location and plant\n          environment in place of batteries used today\n        \u25e6 Cost reasons inhibits IIoT type applications, this technology can\n          drive down the cost of smart field implementation\n        \u25e6 Reducing amount of equipment in the field, as existing wireless\n          systems have very low battery life (many not as advertised) or\n          require expensive solar panels that are conducive to theft\n        \u25e6 Non-invasive Sensor Data analysis for inferential information\n\n\n                                                                             2\n---\n  SENMskon\n   SEN Vision\n\n\n                                     S\n         S                           N\n         N                                                S\n                                                          N\n\n\n\uf097 Low cost sensors \u2013 redundant sensors\n\uf097 \u201cLick and Stick\u201d Sensors \u2013 easy installation\n\uf097 Industrial-standard wireless mesh network \u2013 turnkey operation\n\uf097 Persistent spatial sensing \u2013 new type of long term data\n\uf097 Non-invasive Sensing\n---\n         Target Equlpment\n          Target Equipment\n\n\n\uf097 Industrial Devices\n   \u25e6 Rosemount Wireless Transceivers\n   \u25e6 Permsense Wireless Sensor\n   \u25e6 Continuous Monitoring of Oil Pipes\n   \u25e6 Uses Lithium Battery (10 years self-life)\n   \u25e6 Shorter Life in Practice (1-2 years typical)\n\uf097 Research Goal\n   \u25e6 Efficiently Harvest Ambient Energy\n   \u25e6 Increase the System Life\n---\n        Varlety of Data Loesers\n          Variety of Data Loggers\n         inkaic\n         0\nInstamic                    Voice Recorder      Noise Tutor\n\u2022 4 hours battery           \u2022 6 days recording  \u2022 AC powered\n\u2022 Only 2 GB                 \u2022 16 GB data        \u2022 Hard Drives\n\u2022 Bluetooth                 \u2022 No upload         \u2022 WiFi/3G\n\u2022 $100                      \u2022 $250              \u2022 $2500\n---\nChallenses\n  Challenges\n\n\n   \uf097 IIoT is a new market\n   \uf097 Limited life and performance\n   \uf097 High Cost\n   \uf097 No commercialized/Industrialized self\n       sustaining solutions\n\n\n                                            6/13/2024 Internetworking and Distributed Systems  6\n---\n        Our Intthl Work\n        Our Initial Work\n\n\n                         March 2010, Bakersfield, CA\n\n\n    Thermal Power\n       Harvestor\n\n\n                                                            Wireless Sensor\n\n\n\uf097 Large Battery Powered Monitoring System Ran Out of Power\n\uf097 Wireless Sensor Continued to Run Overnight\n\uf097 Alluding to Pressure using Temperature\n---\n            Fervesho Themoelcuk Goneretkon (PG)\n             Pervasive Thermoelectric Generation (PTG)\n\n\n                                               PTG for Permasense Transceivers\n                                                 Successfully Tested in the Laboratory\n                                                 Higher Efficiency Conditioner Design\n                                                    Integrated Perpetua PowerPuck\n                                                        Integrated Dual Polarity\n                                                     Cono\nPTG for Rosemount Transceivers\n         Successful Field Trials\n        1+ Years Without Failure\n        With or Without Batteries\n       Integrated our TEG design\n         Integrated Dual Polarity\n       Integrated Module Chaining\n---\n        Fully Integrated Battery Untt\n         Fully Integrated Battery Unit\n                          Lithium Thionyl  @    @\n    0-12V                Chloride Battery\n                                                7.2V\n\n\n                         Power     7.2V   Smart OR    7.2V\n   PowerPucke60PotenesPenoino               Chain\n                        Regulator", "start_char_idx": 0, "end_char_idx": 4289, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b0502971-31e2-4673-a49b-3c847a7f89ea": {"__data__": {"id_": "b0502971-31e2-4673-a49b-3c847a7f89ea", "embedding": null, "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "234e5288-0853-46c4-bf94-b1354b27c5a2", "node_type": "4", "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "hash": "fccd156ae4484ad0ab863cd1807c9ad929c6264da092c5afa630135186465c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23a21220-e420-46ac-8cd8-a39c8b79a12e", "node_type": "1", "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "hash": "dc2171b780592eced2ce1d6a3809694a53fabde7b7651a8445e847cf170437fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b9f8d44-4c1c-42fc-866d-81c82bf918d0", "node_type": "1", "metadata": {}, "hash": "a9bf82a25322033337e1b7ce3c97985c33b9f2685145803f3c5fe07ae22b576a", "class_name": "RelatedNodeInfo"}}, "text": "PTG for Permasense Transceivers\n                                                 Successfully Tested in the Laboratory\n                                                 Higher Efficiency Conditioner Design\n                                                    Integrated Perpetua PowerPuck\n                                                        Integrated Dual Polarity\n                                                     Cono\nPTG for Rosemount Transceivers\n         Successful Field Trials\n        1+ Years Without Failure\n        With or Without Batteries\n       Integrated our TEG design\n         Integrated Dual Polarity\n       Integrated Module Chaining\n---\n        Fully Integrated Battery Untt\n         Fully Integrated Battery Unit\n                          Lithium Thionyl  @    @\n    0-12V                Chloride Battery\n                                                7.2V\n\n\n                         Power     7.2V   Smart OR    7.2V\n   PowerPucke60PotenesPenoino               Chain\n                        Regulator\n\n\n                          Permasense PTG Unit\n  Perpetua\nPower Puck\n                                                            Permasense\n                                                               Sensor\n---\nSSlkt in the Field (Feb 2019)\n                             SSIIoTh do Feld (Feb 2019)\n---\nSSlloTIn to Feld\n SSIIoT in the Field\n                      288t8\n---\n                     Data Colkcton\n                      Data Collection\n       ThingsBoard             <  Rule chains             Root Rule Chain (Root)                                                                Ro kwelUsc\n                                                                                                                                                Tenant adtuntstratct\n    HOME                        Search nodee\n    RULE CHAINS                   Filter\n    CUSTOMERS                                                                                                                                      Savc Clicnt Attributes\n    ASSETS                                                                                                                 Post attributes\n                                                                     Inpul        Ectpl   Success\nCo DEVICES                         Efeckrelatlon                                  append           Message Tipe Srtch      Post tclcmctry\n                                                                                                                                                   Savc Nmerane\n    ENTITY VIEWS                   gps georencing Tizer                                                                RPC Requost from Dovice\n    WIDGETS LIBRARY                       type\n    DASHBOARDS                                                                                                                  Other              Log RPC from Device\n    AuditLoGs                                                                                                           RPC Request = Devicc\n                                   doinaionnpe\n                                                                                                                                                      Othcr\n                                   eecpt\n                                                                                                                                                         coucon\n                                                                                                                                                   RPC Call Requcet\n                                  Enrichment\n                                   customer aitributes\n                                   crstomer Oeta >\n                                   originator attributee\n---\n                          Data Colkcton\n                           Data Collection\nRockwell Chevron USC SSlloT                                                                                                        Rockwell SSlloT            Cd    Entities         Realtime last hour\n Static Pressure (Site                Stirling 554 (Site #1) - Upstream and Downstream Pressures                         Stirling 554 (Site #1) - Analog and Digital Differential Pressures\n                                                                                                                            Mm\n                        1C                        07-30       07.40       0730         08.00      08-10       08.20                 07-30        07.10       07-30        08.00                    0B.20\n             155 79                                                                                             lavg\n                                           Downstream Pressure                                         679.97872586           Differential Pressure (Analog)                                17.70467156\n                                           Upstream Pressure                                           699.95927811           Differential Pressure (Digital)                               19,98055225\nStirling 554 (Site#1) =                         Stirling 554 (Site #1) - Humidity                                ANO 501 (Site #2)                             ANO 501 (Site #2) - Humidity\n Temperature                                                   Temperature                                       Temperature                                                   Temperatire\n                 Temperatute\n Static Pressure (Site                ANO 501 (Site #2)      Upstream and Downstream Pressures                            ANO 501 (Site #2)      Analog and Digital Differential Pressures\n #2)                                  740\n                                      730\n                                      720\n                                      710\n                        70                        07.30       07.40       07-0        08.00       08-10       08.20                 07-30        07.40       07-50        08.00       0810         08.20\n             05333                                                                                              avg\n                                           Donstream Pressure                                          702.47794171           Difierentia Pressure (Analog)                                 17.73144515\n                                           Upstream Pressure                                           724.31513728           Differential Pressure (Digital)                               21,.83719557\n---\n         Cell Ftola basedSSlbtFtkrm\n          Cell Phone based SSIIoT Platform\n\n\n        Continuous              Audio Upload             Efficient power\n     Audio Recording            using Cellular             optimization\n\n\n            Remote Access           Robust           Solar Powered", "start_char_idx": 3261, "end_char_idx": 10218, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b9f8d44-4c1c-42fc-866d-81c82bf918d0": {"__data__": {"id_": "0b9f8d44-4c1c-42fc-866d-81c82bf918d0", "embedding": null, "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "234e5288-0853-46c4-bf94-b1354b27c5a2", "node_type": "4", "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "hash": "fccd156ae4484ad0ab863cd1807c9ad929c6264da092c5afa630135186465c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b0502971-31e2-4673-a49b-3c847a7f89ea", "node_type": "1", "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "hash": "ede5ca9754e5b9156ea09c047e5e7eaed04703a801992086b5bb43dfed509025", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d74df54-e397-4220-980a-455c96fe63d7", "node_type": "1", "metadata": {}, "hash": "d72bb8d11d233997125c641e2f6ea35e5a4ef24e419d7d5cc7bfeb94f25af203", "class_name": "RelatedNodeInfo"}}, "text": "Continuous              Audio Upload             Efficient power\n     Audio Recording            using Cellular             optimization\n\n\n            Remote Access           Robust           Solar Powered\n\n\n                           Audio             Cost: ~$250\n                         Processing\n\uf097 Smartphone \u2013 Various Sensors                 9.08 PM   Home       People\n\uf097 Flash Ubuntu Touch OS\n\uf097 Reconfigure to use only the\n   essential parts\n---\n                                               SalfSufficient System\n                                                   Self-Suficlent Syatem\n\n\n   Efficient power optimization                                                                                                                Solar Powered and Robust\n   \u2022             Display is always off                                                                                                         \u2022          Charges up during day\n   \u2022             Battery monitored every half an hour                                                                                          \u2022          Battery big enough to last 2 days\n   \u2022             Data turned on only when uploading and                                                                                                   without sun\n                 remote access                                                                                                                 \u2022          Sturdy case \u2013 Withstands high\n   \u2022             Goes into critical state when battery                                                                                                    temperatures and water-proof\n                 falls below 10%\nWed Aug        24 14;45:03 PDT 2016 Battery capacity is 93\nKed Aug 24 14.45303 PdT 2016 in MORMALmode\nKed Aug 24 15.15.02 PDT 2016 BatteryCapacity is 95came from higher Percentage                                                     Charging UP\nNed Aug 24 15:15.02 PDT 2016 in MORMALmode                                           came from higher Percentage                  charging up\nWed Au 24 15;45804 PDT 2016 Battery capacity i: 109Tromhigner Percentage                                                          charging up\nNed Aug24 16.15.02 PDT 2016patterycapacitycametromhigher Percentoze\nKed Aug\nWed Aug 24 16;15;02 PDT 2016 in MORMAL mode,15:45:84 PDT 2816 in MORMAL mode\n                                                                                     Camc1s 77                                    charging uP\nVed Aug\nLed Aug 24 16:45:03PDT 2816 in MORIAALmode16:45:03 PDT 2016 Batterycapacity i, 75from higher Percentage\nNed Aug 24 17.15.02 PDT 2016 Batterycapacity is 75came                                                                            charging\nKed     AUg 24 17;15.02 PDT 2016 in MORMALmode17.45.62PDT 2816 Battery Capacity is 72camc     from higher Percentage              charging\nKed Aug 2417:45:02PDT 2016 in MORIALmode\nNed Aug                                                                              Canetrom          higher Percentage          charging up\nWed Aug\nWed Aug 24 18;15;02 PdT 2016 in MORMALModc,18;15;02 PDT 2016botterycapacity is 70\nNed Aug 2418.45 .02 PDT 2016 in MORMALmode02 PDT 2816Dattery CapacitycameTromhigher Percentage                                    charging\nKed Aug              18.75            PDT 2016 Batterycopacity is 70came                      from higher Percentage              charging\nWedUE                19;5.02\nVed Aug 2419;15:02 PDT 2816 in MORMAL mode\nLed Aug 24 19.45.02 PDT 28163atterycapacity is 69came                                         {ro\"higher Percentage               charging\nNed Aug 24 19:45.02 PDT 2016 in MORMALmode                                           Canetrom          highe              entage  charging uP\nWed Aug              20;15;02 PDT 2016 Batterycapacity 15 76\nKed Aug 24 28:15:02 PdT 2816 in MORMALmade\nKed Aug 24 20.45.01 PDT 2016 Batterycapacityis 86came from higher Percentage                                                      charging\nNed Aug 24 20:45.01 PDT 2016 in MORMALmode                                           came from higher Percentage                  charging up\nWed Aug 24 21;15;01 PDT 2016 Battery Capacity is 95Tcc\"higherpercentage                                                           charging up\nNed Aug 24 21:15:01 PDT 2816 in MORMAL modecapacity is 95came\n       Aug24 21.45.02 PDT 2016 Battery\n---\nToWorkdng SEN Phtforms\nTwo Working SEN Platforms\n---\nFleld Trbal In Bakersield\nField Trial in Bakersfield\n---\nNexus\nNexus 4 PlatformPlatorm", "start_char_idx": 10013, "end_char_idx": 14596, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8d74df54-e397-4220-980a-455c96fe63d7": {"__data__": {"id_": "8d74df54-e397-4220-980a-455c96fe63d7", "embedding": null, "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "234e5288-0853-46c4-bf94-b1354b27c5a2", "node_type": "4", "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "hash": "fccd156ae4484ad0ab863cd1807c9ad929c6264da092c5afa630135186465c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b9f8d44-4c1c-42fc-866d-81c82bf918d0", "node_type": "1", "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "hash": "08a69f0329ae50e9d37e8984b3c5eb3069c34260cafa50577381af5c64eebb41", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd27d449-14a3-4a52-953e-e587f5f40dab", "node_type": "1", "metadata": {}, "hash": "de640a11f3abf03e33df5b2787d4dc6fc702154983abec5939ea82cbea7193e6", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Functionality\n    \u25e6 Various Built-in Sensors\n    \u25e6 Customizable Ubuntu Touch Linux OS\n    \u25e6 Reconfigure to use only the essential parts\n \uf097 Custom Nexus 4G Phone\n    \u25e6 Customized Linux\n    \u25e6 Lower Clock Frequency\n    \u25e6 Turn off 2 of 4 Cores\n    \u25e6 Record Audio\n    \u25e6 Transmit Data via Cellular Nextwork\n \uf097 Power Consumption: ~ 350mW (May be reduced)\n---\n               Remota Data Colkectkn Server\n                Remote Data Collection Server\n    Continuous Audio Recording                                Audio Upload to Server\n   \u2022    44.1KHz sampling rate                                 \u2022   Accessible via web page\n   \u2022    24 hours/7 days                                       \u2022   Every 6 hours\n   \u2022    Audio samples of configurable                         \u2022   Power efficient\n        length using Vorbis tools\nIndex of /test/audio_files/node_alpha\n            Name           Last modifiedSize Desctiption\n   Parent Directon                                                                 Upload        Node\nd 160914-130720-29137652Lgg 2016-09-14 18.01 1SSK\n:160914-130740-846616714ogg 2016-09-14 18.01 1SSK                                        Upload\nA 160914-130801-47299486Zogg 2016-09-14 18.01 1S7K\n: 160914-130822-162122069ogg 2016-09-14 18.01 1S7K        Server                                 Node\n:160914-130903-3642093560gg 2016-09-1+ 18.01 1SSK\na 160914-130923-93290231L.ogg 2016-09-14 18.02 1SSK\n: 160914-130944-564130780ogg 2016-09-14 18.02 1SSK                                 Upload\n j 160914-131005-06208234Logg 2016-09-14 18.02 1S8K                                              Node\n---\n                  Remoto Access to Naxur\n                    Remote Access to Nexus 4 via Webwwb\n\u2022  Three step process                                                           8s\n     \u2022 SMS to initialize reverse SSH from node                                                        ssh_tunnel.sh\n     \u2022 Node SSH to the server                            Server                                        Node\n     \u2022 Server can access node through local port\n\u2022  SMS used as a side channel\n            (747) 237-1075                                       Hello from OasysCheclBallc)peicenge\n                                                                        Phone Number:\n                                                                          Send Shs\n                                                                          Aucio Filos]\n                                                                           Reroo\n                                                                          Dis corect\n             MSG Type: exec Args: /homel\n             phablet/workspace/ssh_tunnel sh      G                  Battery Percentage\n              Sep 14 1442\n             MSG: Type: exec Args: /homel\n             phablet/workspace/ssh_close sh\n              Sep 14,1448\n             MSG:Type: exec Args: /homel\n             phablet/workspace/ssh_tunnel sh\n              Sep 29, 16.00\n---\n          Access toAudb dat vaWeb\n           Access to Audio data via Web\nHellofromOasys                                        Hello from Oasys\n        Chec: Batten ercentace                                 Chec* BaiteryFencantane\n           PhoneYunher                                            Phone Number:\n               8end Sh:                                              Send SMS\n               ~lJio -                                               Auao Flles]\n                Ratoot                                                Aaoui\n              Diacor nec                                             Dieceanect\n      Connefteg  SystemRradt                                 Battery Percentage    100\n  Hello from Oasys                       Index of /testlaudiofiles/test node\n                                                       Aame             Last uodified Size Description\n                                             Parent Directory\n                                          a 160728-103736-5401480320gg 2016-07-28 11.0123K\n                                          j 160728-103741-394244983ogg 2016-07-28 1.01 163K\n                                          d 160728-103825-440135265L0gg2016-07-28 11.01 246K\n                                          d 160728-103907-5504911ZLogg 2016-07-28 1.01 250K\n                                          j 160728-104736-992789328ogg 2016-07-28 11.01 24SK\n                                          d 160728-104801-5451470240gg 2016-07-28 1.", "start_char_idx": 14600, "end_char_idx": 19101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd27d449-14a3-4a52-953e-e587f5f40dab": {"__data__": {"id_": "cd27d449-14a3-4a52-953e-e587f5f40dab", "embedding": null, "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "234e5288-0853-46c4-bf94-b1354b27c5a2", "node_type": "4", "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "hash": "fccd156ae4484ad0ab863cd1807c9ad929c6264da092c5afa630135186465c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d74df54-e397-4220-980a-455c96fe63d7", "node_type": "1", "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "hash": "43dd9a6d8a8ba2bfddad34fab7a00c942736ab61a6b77fcc03697f46f4fb548b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fbfa5900-d0f0-4faa-b187-3b4753f30d0d", "node_type": "1", "metadata": {}, "hash": "ec49faeb8d074c5e1c20e0197fd1ca1e7427da932d8e3834d0ad47bea7c8db8c", "class_name": "RelatedNodeInfo"}}, "text": "0123K\n                                          j 160728-103741-394244983ogg 2016-07-28 1.01 163K\n                                          d 160728-103825-440135265L0gg2016-07-28 11.01 246K\n                                          d 160728-103907-5504911ZLogg 2016-07-28 1.01 250K\n                                          j 160728-104736-992789328ogg 2016-07-28 11.01 24SK\n                                          d 160728-104801-5451470240gg 2016-07-28 1.0184K\n                                          j 160728-105352-683773779ogg 2016-07-28 1.01 262K\n                                          d 160728-105425-709408733ogg 2016-07-28 11.02 252K\n                                          a160728-105456-337975798ogg 2016-07-28 11.02 254K\n---\nOtherrIMXQ23-OLinuXino-MINI + FONA 3G\n Others: iMX233                        MINI  FONA 3G\n                                                 IMszzgh\n                      518\n                   30u12[6220T0-043\n                        Koo\n---\n1mx33OllmexMinl\n i.mx233 Olimex-Mini\n  \uf097 Embedded Linux\n    \u25e6 Custom drivers installed (audio, I2C, SPI)\n    \u25e6 Compiled and functioning\n  \uf097 Audio\n    \u25e6 Able to play stereo audio\n    \u25e6 Able to record stereo audio using ARECORD\n      into WAV\n    \u25e6 Need to compress audio before transmission\n  \uf097 Communication\n    \u25e6 Driver for 3G UART needs to be written\n    \u25e6 Need to test and evaluate\n---\n                                            backdoor\n       Nokha 81/0 4G Fnona\n       Nokia 8110 4G Phone                       by speeduploop\n\n\n\uf097 Installed Custom OS                         start server\n   \u25e6 (GerdaOS \u2013 derivative of KaiOS)\n   \u25e6 Rooted\n\uf097 Telnet\n   \u25e6 Telnet server installed\n   \u25e6 Successful telnet to phone\u2019s root\n                                 root@Nokia 8110 4G:\n---\n    Nokda 8I /0 AG Power Conuol\n    Nokia 8110 4G Power Control\n\n\n\uf097 Processor Speed\n \u25e6 Root shell to reduce the operating frequency of the processor from 800 MHz\n  down to 200 MHz (minimum functional operating frequency)\n   [t /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur\n     200000\n     root@Nokia 8110 4G:/ # [\n\uf097 Core Activation/Deactivation\n \u25e6 Implemented a method via the root shell to turn off one of the CPU\u2019s cores\n \u25e6 Below are screenshots showing the second core (cpu1) becoming offline\n   [root@Nokia 8110\n    0-1\n   [root@Nokia 8110\n   [root@Nokia            8110\n   [root@Nokia            8110 4G:/sys/devices/system/cpu# cat offline\n---\n       Nokta 8I I0 4G Remota Access\n       Nokia 8110 4G Remote Access\n\n\n\uf097 No Static IP Address for Phone\n   \u25e6 Most phone plans do not give static IP\n   \u25e6 Need a work around to access phone remotely\n   \u25e6 Use of VPN Tunnel will enable this access\n\uf097 Enabling VPN to Phone\n   \u25e6 Successfully initialized a VPN connection between the\n     phone and a remote node\n   \u25e6 Currently searching for a method to disable/bypass a\n     firewall on the phone that is blocking VPN outgoing\n     messages\n---\nInferEnco Wth NonWasha Sensor}\n Inference with Non-invasive Sensors\n\n\n  \uf097 Ambient Conditions\n       \u25e6 Temperature\n       \u25e6 Pressure\n       \u25e6 Light\n       \u25e6 Sound/Vibration\n       \u25e6 Magnetic Fields\n       \u25e6 Complex phenomenon such as video and gas\n           composition, and etc.\n  \uf097 Inferential Information\n       \u25e6 Determine internal conditions with above?\n       \u25e6 Modeling (internal parameters for accuracy and even\n           prediction)\n  \uf097 Big Data\n\n\n                                                    6/13/2024 Internetworking and Distributed Systems  27\n---\nBxampke:Human Ears\n Example: Human Ears", "start_char_idx": 18641, "end_char_idx": 22159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fbfa5900-d0f0-4faa-b187-3b4753f30d0d": {"__data__": {"id_": "fbfa5900-d0f0-4faa-b187-3b4753f30d0d", "embedding": null, "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "234e5288-0853-46c4-bf94-b1354b27c5a2", "node_type": "4", "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "hash": "fccd156ae4484ad0ab863cd1807c9ad929c6264da092c5afa630135186465c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cd27d449-14a3-4a52-953e-e587f5f40dab", "node_type": "1", "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}, "hash": "1dbd708c45aa1c1783695ae5c2e79475c7416772368dd22d14936665e9a39272", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Ambient Conditions\n       \u25e6 Temperature\n       \u25e6 Pressure\n       \u25e6 Light\n       \u25e6 Sound/Vibration\n       \u25e6 Magnetic Fields\n       \u25e6 Complex phenomenon such as video and gas\n           composition, and etc.\n  \uf097 Inferential Information\n       \u25e6 Determine internal conditions with above?\n       \u25e6 Modeling (internal parameters for accuracy and even\n           prediction)\n  \uf097 Big Data\n\n\n                                                    6/13/2024 Internetworking and Distributed Systems  27\n---\nBxampke:Human Ears\n Example: Human Ears\n\n\n  \uf097 Humans are Better than Machines in Audio Processing\n     \u25e6 Locating and Isolating Sounds\n        \uf096 Focus on a single stream of audio to interpret in a noise room\n     \u25e6 Sound Pattern Recognition\n        \uf096 Differentiating subtle differences in voice colors\n  \uf097 Mimicking Human Capability\n     \u25e6 Single audio stream can be processed to give result\n     \u25e6 Improved result can be attained given multiple recordings\n     \u25e6 Localization of the sound is also possible with multiple\n        recordings\n---\nListening Capablllty\n Listening Capability\n---\nListening Capability\n---\nListening Capability\n             11\n---\n          Enhanced Frequency And Time Hybrid Analysis\n          Audio Separation Examples\n\n\nOverlapping Clarinets:                                 Woman and Man:\n\n\nExtracted 1st Clarinet:                               Extracted Woman\u2019s Voice:\nExtracted 2nd Clarinet:                               Extracted Man\u2019s Voice:\n\n\n Human Voice & Noise:                                 Two Men and Music:\n\n\n Extracted Voice:                                      Extracted 1st Voice:\n\n\n Extracted Noise:                                      Extracted 2nd Voice:\n---\n                                   Borchol Seksmk AudbAnahebs\n                                     Borehole Seismic Audio Analysis\n              \uf097 Borehole Seismic Audio Analysis\n                      \u25e6 Key Technology for Discovery\n\n\n                          Drilling rig                                                       Seismic source (Airgun,\n                                                                                             dynamite, vibroseis) and\n                     Logging truck                                                           reference sensor\n                   Wireline cable                                                                     li     Recording time4zo  1400  bwl   1800\n                                                                                      'ZUUU\n                    Telemetry unit                                                    2500                                                            2500\n                                                                                      3000                                                            3000\n                    Well or borehole                                                  3500                                                            3500\nDepth3C receivers                                                                     4000                                                            4000\n                                                                                      4500-                                                           4500\n                                                                                                      1000         1200         1400  1600  1800\n                                                                      (Not to scale)\n\n\n                                                                                                                                                  33\n---\nRecovering Ptraso ofAudk\n Recovering Phase of Audio\n\n\n \uf097 Method\n    \u25e6 Generate Frequency/Amplitude Hybrid Map\n    \u25e6 Use Frequency and Amplitude as Guide\n    \u25e6 Efficiently Search for the Correct Phase\n \uf097 Experiments\n    \u25e6 One Sine of a fixed frequency and a starting\n      phase\n    \u25e6 Two Sine of fixed frequencies and a starting\n      phase\n---\n   Sensor Data wth Nose\n    Sensor Data with Noise\nNoise     Harmonics       The        Noise      HarmonicsSignaThe  Reflected\n                         Signal                                     Signals\n0                                                             l\n60\n50\n0                                   (\n08                                  0\n                                                        72 14  1618\n        Hybrid representation of Sensor 1 (closest to surface)\n                 and Sensor 80 (farthest to surface)\n---\nTakdnga Stnal Apart\n Taking a Signal Apart\n\n\n                            The Main Signal\n\n\n      Sensor 80 Data\n\n\n                        The Rest of the Signal\n---\n  Resuk\n  Result\n\n\n   \uf097 The Baseline Pitch has been Increased to make the Result Audible\n\n\nThe Original Signal           Detected Signal              Leftover Signal", "start_char_idx": 21624, "end_char_idx": 26521, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33b30c47-1ef5-4c52-b943-924fafa09c7a": {"__data__": {"id_": "33b30c47-1ef5-4c52-b943-924fafa09c7a", "embedding": null, "metadata": {"filename": "L19-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2eacdbdc-a947-45a0-8d5a-72261dff8b13", "node_type": "4", "metadata": {"filename": "L19-f23.pdf", "category": "PDF file"}, "hash": "396f9471e791916b9e253fabf58b709091c0d6be24bbad9696eeaeb61d433284", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbc3501c-27cd-435c-9728-1cbe73043cb1", "node_type": "1", "metadata": {}, "hash": "a06db07cf1ac5281dcebbb1492f2d1e8a511f8221aadcab3c2ef07d4369cf3f0", "class_name": "RelatedNodeInfo"}}, "text": "R.10   0\n                                                     0      M\n                                   Young H. Cho, Ph.D.\n                                   University of Southern California\n                                    EE 542\n                                    Lecture 19: Machine Learning\nUSCViterbi\n            School of Engineering                      Universityof Southern California\n                                                                                     1\n---\n                        Final Project Proposal\n\n\n\u2022 Requirement\n     \u2013 xDot + Gateway + Node Red Data collection\n     \u2013 Amazon Web Services + Thingsboard\n     \u2013 Data Analytics/Machine Learning on Data\n     \u2013 Inferential or Model-based Result\n     \u2013 Real world problem that needs solution\n     \u2013 Novel solution\n\u2022 Submissions\n     \u2013 Final Project Proposal: Summary Outline, Oct 25\n     \u2013 Final Project Progress Videos\n     \u2013 Final Project: Final Report, Software Source Package, Slides,\n        Final video Due Dec 13\n\n\n                                                                      2\n---\n                     Final Project Presentation\n\n\n\u2022 Audience\n     \u2013 Investor/Board of Directors/CEO\n     \u2013 Grand parents/People without expertise\n     \u2013 Technology Expert\n\u2022 Composition\n     \u2013 Attention Grab/Relevance/Problem to Investor+People without\n        expertise\n     \u2013 Most important/novel aspect using a detailed example\n     \u2013 Summary of Result showing Supriority\n     \u2013 Summary of what that means: Money? Safety? Good?\n\u2022 Methodology\n     \u2013 Use of Animations and Pictures\n     \u2013 Minimum Words\n     \u2013 Practiced Talk\n\n\n                                                                    3\n---\n           Common Myths of Machine Learning\n\n\n\u2022 Myth#1: Machines can learn autonomously\n\u2022 Reality: Machine learning is carefully\n   architected by a programmer and trained with\n   the necessary training data. Most of the\n   machine learning algorithms require large\n   amounts of structured data that are often\n   manually filtered and fed into the algorithm.\n\n\n                                                  4\n---\n           Common Myths of Machine Learning\n\n\n\u2022 Myth#2: Machines can learn like humans\n\u2022 Reality: If we compare the learning process of a\n   machine with that of a child, it becomes\n   evident that machine learning is still in its\n   infancy. For example, a baby doesn\u2019t need to\n   listen to millions of other humans before it\n   learns how to talk. Machines on the other hand\n   requires guidance and support at each step of\n   learning.\n\n\n                                                    5\n---\n              Common Myths of Machine Learning\n\n\n\u2022 Myth#3: Machine learning can be applied to any task\n\u2022 Reality: Currently, machine learning can only be\n   applied to tasks where large and sufficient number\n   of input data sets exist or can potentially be\n   captured. Most of the successes in AI have come in\n   the applications where companies like Google and\n   Facebook have access to enormous data sets (texts,\n   voices or images) coming from a variety of sources.\n\n\n                                                        6\n---\n                 Traditional Data AnalyticsCurrent ML Approach\n\n\n               Domain                          Data Collection\n             KnowledgeDomainDomain                (Sensors)\n              KnowledgeKnowledgeDomain\n                Knowledge                       Preprocessor\n                                                   (Filters)\n\u2022 MODEL?!?                                         Model\n     \u2013 Physics is too complex                     (Physics)\n     \u2013 Insufficient understanding\n     \u2013 Non-trivial correlation                  Classification\n       between data and model                     (Metrics)\n\n\n                                                                7\n---\n             My Thoughts\n\n\n  Domain\n  Domain                      Data Collection\n                                             Data Collection\nKnowledge\nKnowledgeDomain\n               DomainDomain\n    Domain                       (Sensors)\n                                          (Sensors)\n Knowledge\n          KnowledgeKnowledge\n  KnowledgeDomain\n     Domain\n   Knowledge\n   Knowledge                   Preprocessor\n                                  (Filters)\n\n\n                                   Model\n                                        Model\n                                 (Physics)\n                                          (Physics)\n\n\n                               Classification\n                                 (Metrics)\n\n\n                                                       8\n---\n            Machine Learning Approaches\n\n\n                Unsupervised              Supervised\n                   Learning                Learning\n\n\n  Discrete         Clustering            Classification\n\n\nContinuous      Dimensionality            Regression\n                   Reduction\n\n\n                                                         9\n---\n           Unsupervised Learning Experience\n\n\n\u2022 Goal: Determine Meaning of Internet Document\n   Content then Hierarchically and Dynamically\n   Cluster and Discover New Topics using Hardware\n   Accelerator\n\n\n\u2022 Application: Discovering and Filter Topics of\n   Interest on the Internet in Real-time\n\n\n\u2022 Funded by US Department of Defense 2004-2007\n\n\n                                                   10\n---\n              Processing Raw Documents\n\n\n\u2022 N-Gram Analysis\n    \u2013 Samples taken at every byte offset\n    \u2013 Multiple lengths of n-grams sampled\n\n\n                    FPGAs\n                         FPGAs\n                              FPGAs aar\n                                       FPGAss arare\n                                                   FPGAs arePGAs are\n                                                                    PGAs\n                                                                        PGAs\n                                                                            PGAsGAs\n                                                                                   GAs a\n                                                                                        GAsaAs a\n                                                                                                As ar\n\n\n                                                             11\n---\n                 Language Identification", "start_char_idx": 55, "end_char_idx": 6445, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bbc3501c-27cd-435c-9728-1cbe73043cb1": {"__data__": {"id_": "bbc3501c-27cd-435c-9728-1cbe73043cb1", "embedding": null, "metadata": {"filename": "L19-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2eacdbdc-a947-45a0-8d5a-72261dff8b13", "node_type": "4", "metadata": {"filename": "L19-f23.pdf", "category": "PDF file"}, "hash": "396f9471e791916b9e253fabf58b709091c0d6be24bbad9696eeaeb61d433284", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33b30c47-1ef5-4c52-b943-924fafa09c7a", "node_type": "1", "metadata": {"filename": "L19-f23.pdf", "category": "PDF file"}, "hash": "2d5638e3250253638e00c44e34d3aff281eeca7837495b5f07fefa84fdf710e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06452f58-cb82-41b7-b2b1-543870a4f138", "node_type": "1", "metadata": {}, "hash": "4511fce823ac3ddf63966dcac3d8fa246acdd1a3adec46b0d52791cc6ad1c1d0", "class_name": "RelatedNodeInfo"}}, "text": "Continuous      Dimensionality            Regression\n                   Reduction\n\n\n                                                         9\n---\n           Unsupervised Learning Experience\n\n\n\u2022 Goal: Determine Meaning of Internet Document\n   Content then Hierarchically and Dynamically\n   Cluster and Discover New Topics using Hardware\n   Accelerator\n\n\n\u2022 Application: Discovering and Filter Topics of\n   Interest on the Internet in Real-time\n\n\n\u2022 Funded by US Department of Defense 2004-2007\n\n\n                                                   10\n---\n              Processing Raw Documents\n\n\n\u2022 N-Gram Analysis\n    \u2013 Samples taken at every byte offset\n    \u2013 Multiple lengths of n-grams sampled\n\n\n                    FPGAs\n                         FPGAs\n                              FPGAs aar\n                                       FPGAss arare\n                                                   FPGAs arePGAs are\n                                                                    PGAs\n                                                                        PGAs\n                                                                            PGAsGAs\n                                                                                   GAs a\n                                                                                        GAsaAs a\n                                                                                                As ar\n\n\n                                                             11\n---\n                 Language Identification\n\n\n\u2022 Keep Track of Word Count\n    \u2013 Compare only the relevant languages\n    \u2013 Count subsequent appearance of words\n\u2022 Performance\n    \u2013 Significant reductions for comparisons\n    \u2013 Little or no impact on accuracy\n\n\n                                              12\n---\n                     Hardware Implementation\n\n\n\u2022 Implementation                                    Hello!\n                                                    Bonjour!\ud55c\uad6d\uc5b4\n     \u2013 GVS-1000 Platform\n     \u2013 Stackable FPGA Cards                         Data In\n                                                           Data In     ID Out\n                                                                       ID Out\n                                                    Document          Lang ID\n                                                                             English\n                                                                                    Korean\n                                                                                          French\n\u2022 System Features\u2013 Highly Customizable           1GbE Line Card\n           \u2022 Reconfigurable\n           \u2022 Modular Unit                        TCP Processor\n     \u2013 High Accuracy text docs\u2022 99.8%+ raw FPGA  HAILHAIL           1 GbE Line Card\n     \u2013 Low Latency\u2022 Able to ID single packet                 Backplane\n     \u2013 High Performance\u2022 2.4+ Gigabits/second\n\n\n                                                                                       13\n---\n                           Identifying Document Structure\n\n\n                                                  HTML Source Document\n\n\n                             hdr2         strg            hdr2\n                            <h2>Company Overview</h2>para--> <p>Founded by <a href=\n                            <!-- Corporate Fact Sheet comm                     strg      link href\n                                      quot                            strg               link\n                            \u201c/about/profile.html\u201d>Dr. J. Robert Beyster</a> and a\n                            small group of scientists in 1969, SAIC, a Fortune 500strg\n                            company, now ranks \u2026 and have more than 43,000 <!\u2013 Alsocomm\n                            update employee number on: saic.com/news/0722.html -->strg para\n\n\nTAGBOT                      employees with offices in over 150 cities. </p>\n        Token List                                       Simple Grammar\n        (1) hdr2 : \u2018h2\u2019                                  (1) Tag_Name \u2192 hdr2 | para | link\n        (2) para : \u2018p\u2019                                   (2) Comment \u2192 \u2018<!-\u2019.comm.\u2018-->\u2019\n        (3) link : \u2018a\u2019                                   (3) Attrib            \u2192 href.quot | \u03b5\n        (4) href : \u2018href=\u2019                               (4) Tag_Head \u2192 \u2018<\u2019.Tag_Name.Attrib.\u2018>\u2019\n        (5) quot : \u2018\u201d\u2019.alpnum*.\u2018\u201d\u2019                       (5) Tag_Tail \u2192 \u2018</\u2019.Tag_Name.\u2018>\u2019\n        (6) comm : alpnum*                               (6) Expr              \u2192 Comment | strg | \u03b5\n        (7) strg : alpnum*                               (7) Line              \u2192 Tag_Head.Line.Tag_Tail\n                                                                                 | Expr.Line.Expr | Expr\n                                                         (8) Content \u2192 Line.Content\n\n\n                                                                                                          14\n---\n                Document Classification\n\n\n\u2022  Documents transformed to 4000-wide numerical\n   vectors with 4-bit dynamic range\n\u2022  Document similarity computed based on vector\n   similarity\n                                      Word Mapping Table\n                         H( \"nitroglycerine\"101,203\n               Input =H( \" Ekpnktikos\"Hash of             H(explosive) \"\n               words that      H( \"Nassar\"                        1033\n              may appear     H( \"dynamite\"                   H(rocket)-\n             in a document   H( \"gelamex\"                        2801\n           Range1,048,575 }2*20 _ 1 672,101                        3999\n             {0               H( \"Qassam\"\n                            H( \"irrelevant\"\n                                  1,048,575\n                                                                          15\n---\n                  Application Level Processor", "start_char_idx": 4899, "end_char_idx": 10777, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06452f58-cb82-41b7-b2b1-543870a4f138": {"__data__": {"id_": "06452f58-cb82-41b7-b2b1-543870a4f138", "embedding": null, "metadata": {"filename": "L19-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2eacdbdc-a947-45a0-8d5a-72261dff8b13", "node_type": "4", "metadata": {"filename": "L19-f23.pdf", "category": "PDF file"}, "hash": "396f9471e791916b9e253fabf58b709091c0d6be24bbad9696eeaeb61d433284", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbc3501c-27cd-435c-9728-1cbe73043cb1", "node_type": "1", "metadata": {"filename": "L19-f23.pdf", "category": "PDF file"}, "hash": "fce05bc406b97d66cca4dde26b3382e5f3223ad65e51490520aa4db6e7902f67", "class_name": "RelatedNodeInfo"}}, "text": "14\n---\n                Document Classification\n\n\n\u2022  Documents transformed to 4000-wide numerical\n   vectors with 4-bit dynamic range\n\u2022  Document similarity computed based on vector\n   similarity\n                                      Word Mapping Table\n                         H( \"nitroglycerine\"101,203\n               Input =H( \" Ekpnktikos\"Hash of             H(explosive) \"\n               words that      H( \"Nassar\"                        1033\n              may appear     H( \"dynamite\"                   H(rocket)-\n             in a document   H( \"gelamex\"                        2801\n           Range1,048,575 }2*20 _ 1 672,101                        3999\n             {0               H( \"Qassam\"\n                            H( \"irrelevant\"\n                                  1,048,575\n                                                                          15\n---\n                  Application Level Processor\n\n\n\u2022 Experiments\n     \u2013 Five different email data sets were created\n          \u2022 75-bytes, 150-bytes, 300-bytes, 600-bytes, 1200-bytes\n     \u2013 10,816 email messages per data set\n     \u2013 14 different language documents in each data set\n\n\n                                                     GigE Card\n\n\n              GigE Card                              ALPS\n\n\n              HAILHAIL       GigE Card               HAILHAIL      GigE Card\n\n\n                       Backplane                             Backplane\n\n\n                                                                              16\n---\n                      Hierarchical Clustering\n\n\n\u2022   Document Insertion\n   \u2013    Adds a single document to an existing tree\n   \u2013    Top-down descent, greedy matching\n\u2022   Batch Clustering\n   \u2013    Original top-down (global) hierarchical clustering\n   \u2013    Necessary to avoid getting stuck in local optima\n\u2022   Document Removal\n   1. Dead topics\n        \u2022   Least Recently Used (LRU) caching (or an approximation)\n   2. Over-representation\n        \u2022   Don\u2019t store multiple copies of (nearly) identical documents\n\n\n                                                                         17\n---\n    Concept Drift\n11\n           time\n                   18\n---\n                                 Results\n\n\n\u2022 Algorithms trained and tested on CMU 20-newsgroups\n     \u2013 Standard benchmark (13,000 messages)\n     \u2013 Added \u201cnoise\u201d from talk.origins (11,000 messages)\n     \u2013 Used K=60, flattened hierarchies to be comparable\n\u2022 K-means results\n     \u2013 Vast majority of documents in only two clusters\n     \u2013 Few concepts discovered\n     \u2013 Discovered many meaningful concepts\n     \u2013 However, ~50% of all concepts dominated by noise data\n\u2022 Streaming Hierarchical Partitioning results\n     \u2013 Discovered many meaningful concepts\n     \u2013 Noise data effectively isolated to ~10% of concepts\n\u2022 Discovered Concept Vectors leading to Supervised Learning\n\n\n                                                              19\n---\n                       Lessons Learned\n\n\n\u2022 Need Enough High Quality Data to Train\n    \u2013 It is very difficult to find good data\n    \u2013 Corpus of data needed a lot of manual prefiltering\n\n\n\u2022 Erroneous Data Leads to Poor Result\n    \u2013 Better to have less data than bad data\n\n\n                                                          20", "start_char_idx": 9859, "end_char_idx": 13096, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c606eb7-aee2-4ce0-86e6-80337ac3ec1d": {"__data__": {"id_": "1c606eb7-aee2-4ce0-86e6-80337ac3ec1d", "embedding": null, "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "712fc20a-dac1-4f7f-9cc3-a5f3403ea833", "node_type": "4", "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}, "hash": "881d15fa87e9c0b9b6e092268e986a8a2ac172ce0bb86b8ebff759d60395d488", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d8dbb6b-f2c7-4ae0-8f53-97a769805438", "node_type": "1", "metadata": {}, "hash": "9197e527989fd87e377b80cfa3ca09bb6c0f261a489bfc33264b38450860a245", "class_name": "RelatedNodeInfo"}}, "text": "0   EE 542\n    EE 542\n   Lecture [8Spark on Cloud\n    Lecture 18: Spark on Cloud\n    Internet and Cloud Computing\n\n\n    Young Cho\n    Department of Electrical Engineering\n    University of Southern California\n\n\n                                          Slides from UC Berkeley AMP Lab  1\n---\nMapReduco\nMapReduce\n\n\n \uf097 Programming model for data-intensive\n   computing on commodity clusters\n \uf097 Pioneered by Google\n   \u25e6 Processes 20 PB of data per day\n \uf097 Popularized by Apache Hadoop project\n   \u25e6 Used by Yahoo!, Facebook, Amazon, \u2026\n \uf097 Industry Trending Toward Spark\n   \u25e6 Quickly Being Adopted by Big Data Industry\n---\nVmtatons &MapReduce\n                   Limitations ofMapReduca\n \uf097 MapReduce is great at one-pass computation,\n   but inefficient for multi-pass algorithms\n \uf097 No efficient primitives for data sharing\n    \u25e6 State between steps goes to distributed file system\n    \u25e6 Slow due to replication & disk storage\n    \u25e6 No control of data partitioning across steps\n---\nSpark Procrammlng Mdel\n Spark Programming Model\n\n\n  \uf097 Extends MapReduce with primitives for efficient\n    data sharing\n    \u25e6 \u201cResilient distributed datasets\u201d\n  \uf097 Open source in Apache Incubator\n    \u25e6 Growing community with 100+ contributors\n  \uf097 APIs in Java, Scala & Python\n---\n            Retllkent Dbtibuted Dataseds (RDDS)\n            Resilient Distributed Datasets (RDDs)\n\n\n             \uf097 Collections of objects stored across a cluster\n             \uf097 User-controlled partitioning & storage (RAM, disk, \u2026)\n             \uf097 Automatically rebuilt on failure\n\n\n urls = spark.textFile(\u201chdfs://...\u201d)                                     Known to be\n records = urls.map(lambda s: (s, 1))                                  hash-partitioned\n counts = records.reduceByKey(lambda a, b: a + b)\n bigCounts = counts.filter(lambda (url, cnt): cnt > 10)                        Also known\n\n\n                                                       map        reduce      filterInput file\nbigCounts.cache()\n\n\nbigCounts.filter(\n   lambda (k,v): \u201cnews\u201d in k).count()\n\n\nbigCounts.join(otherPartitionedRDD)\n---\nSparkSpark\n\n\n  \uf097 In-Memory Computation\n     \u25e6 For 64-bit computers TB of data in RAM\n     \u25e6 Designed to transform data in-mem and not in disk\n     \u25e6 Supports parallel distributed processing of data\n     \u25e6 100x in memory and 10x on disk then Hadoop\n  \uf097 General programming model\n     \u25e6 Use normal sequential programming\n     \u25e6 No need for maps and reduce operations\n---\nSparkKcy Adianta83s\n Spark: Key Advantages\n\n\n \uf097 Ability for On-disk Data Sorting\n    \u25e6 Tuned for large scale of data sorting on disk\n    \u25e6 The world record of on-disk large scale data sorting\n \uf097 Efficient Use of Cache\n    \u25e6 Mesos which is a distributed system kernel for\n       caching the intermediate dataset\n    \u25e6 Multiple iterations on the cached dataset\n \uf097 In-memory Tuned Library\n    \u25e6 MLlib library for in-memory tuned operations\n \uf097 Faster Launch with Virtual Machine\n---\n              Clustering\n               Clustering\n\n\n                                    E.g. archaeological dig\n\n\n        Grouping data according to\n                 similarity\n\n\nDistance North\n\n\n                                                    Distance East\n---\n                Clustering\n\n\n                                    E.g. archaeological dig\n\n\n        Grouping data according to\n                   similarity\n\n\nDistance North\n\n\n                                                      Distance East\n---\n             Clustering wth Spark\n              Clustering with Spark\n     K-Means: preliminaries\n\n\n          Benefits                        E.g. archaeological dig\n\n\n          \u2022 Popular\n          \u2022 Fast\n          \u2022 Conceptually straightforward\n\n\nDistance North\n\n\n                                                         Distance East\n---\n            Clustering wth Spark\n             Clustering with Spark\n     K-Means: preliminaries\n\n\n          Data: Collection of values\n\n\n           data = lines.map(line=>\n                parseVector(line))\n\n\nFeature 2\n\n\n                                      Feature 1\n---\n              Clustering with Spark\n     K-Means: preliminaries\n\n\n           Dissimilarity:\n           Squared Euclidean distance\n\n\n            dist = p.squaredDist(q)\n\n\nFeature 2\n\n\n                                       Feature 1\n---\n                                         Clustering with Spark\n           K-Means: preliminaries\n\n\n                               K = Number of clusters\n\n\n                                 Data assignments to clusters\n                                  S, S,. . ., SK12\n\n\nFeature 2\n\n\n                                                                Feature 1\n---\n                                        Clustering with Spark\n           K-Means: preliminaries\n\n\n                              K = Number of clusters\n\n\n                                Data assignments to clusters\n                                 S, S,. . ., SK12\n\n\nFeature 2", "start_char_idx": 0, "end_char_idx": 4905, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d8dbb6b-f2c7-4ae0-8f53-97a769805438": {"__data__": {"id_": "1d8dbb6b-f2c7-4ae0-8f53-97a769805438", "embedding": null, "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "712fc20a-dac1-4f7f-9cc3-a5f3403ea833", "node_type": "4", "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}, "hash": "881d15fa87e9c0b9b6e092268e986a8a2ac172ce0bb86b8ebff759d60395d488", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c606eb7-aee2-4ce0-86e6-80337ac3ec1d", "node_type": "1", "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}, "hash": "5690302de42649e438df69d95657d053d4a2058b6c0770c3a86b2bf5c5a4a635", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "faa4d3f1-c2d1-4f7b-8280-59f2fd1697dd", "node_type": "1", "metadata": {}, "hash": "9e82d42a2c5a023513d3e4aedf4431e4c5bad7dbeab563c2dc2b687372225995", "class_name": "RelatedNodeInfo"}}, "text": "Data: Collection of values\n\n\n           data = lines.map(line=>\n                parseVector(line))\n\n\nFeature 2\n\n\n                                      Feature 1\n---\n              Clustering with Spark\n     K-Means: preliminaries\n\n\n           Dissimilarity:\n           Squared Euclidean distance\n\n\n            dist = p.squaredDist(q)\n\n\nFeature 2\n\n\n                                       Feature 1\n---\n                                         Clustering with Spark\n           K-Means: preliminaries\n\n\n                               K = Number of clusters\n\n\n                                 Data assignments to clusters\n                                  S, S,. . ., SK12\n\n\nFeature 2\n\n\n                                                                Feature 1\n---\n                                        Clustering with Spark\n           K-Means: preliminaries\n\n\n                              K = Number of clusters\n\n\n                                Data assignments to clusters\n                                 S, S,. . ., SK12\n\n\nFeature 2\n\n\n                                                               Feature 1\n---\n                 Clustering with Spark\n      K-Means Algorithm\n\n\n             \u2022 Initialize K cluster centers\n             \u2022 Repeat until convergence:\n                 Assign each data point to\n                 the cluster with the\n                 closest center.\n                 Assign each cluster\n                 center to be the mean of\n                 its cluster\u2019s data points.\n\n\nFeature 2Feature 1\n---\n                 Clustering with Spark\n      K-Means Algorithm\n\n\n             \u2022 Initialize K cluster centers\n             \u2022 Repeat until convergence:\n                 Assign each data point to\n                 the cluster with the\n                 closest center.\n                 Assign each cluster\n                 center to be the mean of\n                 its cluster\u2019s data points.\n\n\nFeature 2Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n            Assign each data point to\n            the cluster with the\n            closest center.\n            Assign each cluster\n            center to be the mean of\n            its cluster\u2019s data points.Feature 2\n                                                 Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n       \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n            Assign each data point to\n            the cluster with the\n            closest center.\n            Assign each cluster\n            center to be the mean of\n            its cluster\u2019s data points.Feature 2\n                                                 Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n       \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n            Assign each data point to\n            the cluster with the\n            closest center.\n            Assign each cluster\n            center to be the mean of\n            its cluster\u2019s data points.Feature 2\n                                                 Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>\n\n\n          (closestPoint(p,centers),p))\n            Assign each cluster\n            center to be the mean of\n            its cluster\u2019s data points.Feature 2\n                                                 Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n       \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>\n\n\n          (closestPoint(p,centers),p))\n           Assign each cluster\n           center to be the mean of\n           its cluster\u2019s data points.Feature 2\n                                                Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n       \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>\n\n\n          (closestPoint(p,centers),p))\n           Assign each cluster\n           center to be the mean of\n           its cluster\u2019s data points.Feature 2\n                                                Feature 1\n---\n                 Clustering with Spark\n      K-Means Algorithm\n\n\n             \u2022 Initialize K cluster centers\n                centers = data.takeSample(\n                    false, K, seed)\n             \u2022 Repeat until convergence:\n\n\n                closest = data.map(p =>\n\n\n                (closestPoint(p,centers),p))\n                pointsGroup =\n                     closest.groupByKey()\n\n\nFeature 2Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>", "start_char_idx": 3870, "end_char_idx": 9223, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "faa4d3f1-c2d1-4f7b-8280-59f2fd1697dd": {"__data__": {"id_": "faa4d3f1-c2d1-4f7b-8280-59f2fd1697dd", "embedding": null, "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "712fc20a-dac1-4f7f-9cc3-a5f3403ea833", "node_type": "4", "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}, "hash": "881d15fa87e9c0b9b6e092268e986a8a2ac172ce0bb86b8ebff759d60395d488", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d8dbb6b-f2c7-4ae0-8f53-97a769805438", "node_type": "1", "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}, "hash": "35db45fd98fe2cf571f26f1de7f7b8a2f5f2ab9a4a1eb358bc0407857f7b1b31", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b6e1463-8ec8-46ce-9f9d-381d3685f973", "node_type": "1", "metadata": {}, "hash": "00f4d04b6480fabdfbb320738e69d0aa21af4909f92efeb8f1bbb0fa120b74fa", "class_name": "RelatedNodeInfo"}}, "text": "\u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>\n\n\n          (closestPoint(p,centers),p))\n           Assign each cluster\n           center to be the mean of\n           its cluster\u2019s data points.Feature 2\n                                                Feature 1\n---\n                 Clustering with Spark\n      K-Means Algorithm\n\n\n             \u2022 Initialize K cluster centers\n                centers = data.takeSample(\n                    false, K, seed)\n             \u2022 Repeat until convergence:\n\n\n                closest = data.map(p =>\n\n\n                (closestPoint(p,centers),p))\n                pointsGroup =\n                     closest.groupByKey()\n\n\nFeature 2Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>\n\n\n          (closestPoint(p,centers),p))\n          pointsGroup =\n               closest.groupByKey()\n          newCenters = pointsGroup.mapValues(\n               ps => average(ps))Feature 2\n                                               Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n       \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n       \u2022 Repeat until convergence:\n\n\n          closest = data.map(p =>\n\n\n          (closestPoint(p,centers),p))\n          pointsGroup =\n               closest.groupByKey()\n          newCenters = pointsGroup.mapValues(\n              ps => average(ps))Feature 2\n                                               Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n\n\n           closest = data.map(p =>\n              (closestPoint(p,centers),p))\n           pointsGroup =\n               closest.groupByKey()\n          newCenters = pointsGroup.mapValues(\n               ps => average(ps))Feature 2\n                                               Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n           while (dist(centers,\n                           newCenters) > \u025b)\n           closest = data.map(p =>\n              (closestPoint(p,centers),p))\n           pointsGroup =\n                closest.groupByKey()\n           newCenters =pointsGroup.mapValues(Feature 2ps => average(ps))  Feature 1\n---\n           Clustering with Spark\nK-Means Algorithm\n\n\n        \u2022 Initialize K cluster centers\n          centers = data.takeSample(\n               false, K, seed)\n        \u2022 Repeat until convergence:\n           while (dist(centers,\n                          newCenters) > \u025b)\n           closest = data.map(p =>\n              (closestPoint(p,centers),p))\n           pointsGroup =\n                closest.groupByKey()\n           newCenters =pointsGroup.mapValues(Feature 2ps => average(ps))  Feature 1\n---\n                 Clustering with Spark\n      K-Means Source\n\n\n              centers = data.takeSample(\n                   false, K, seed)\n               while (d > \u025b)\n               {\n                closest = data.map(p =>\n                    (closestPoint(p,centers),p))\n                pointsGroup =\n                     closest.groupByKey()\n                newCenters =pointsGroup.mapValues(\n                     ps => average(ps))\n                d = distance(centers, newCenters)\nFeature 2centers = newCenters.map(_)\n               }                                    Feature 1\n---\nClustering with Spark\n\n\nEase of use\n \u25aa Interactive shell:\n     - Useful for featurization, pre-processing\n        data\n \u25aa Lines of code for K-Means\n     - Spark ~ 90 lines\n     - Hadoop/Mahout ~ 4 files, > 300 lines\n---\n                       PerformanceIteration time (s)Performance\n274\n\n\n197\n143K-Means                                                                                                                           Logistic Regression\n\n\n            300                                                             Hadoop                                        250                                                   Hadoop157\n                                                                            HadoopBinMem                                                                                        HadoopBinMem121250Spark200Spark\n61W\n            200                                                                                                           150\n            150106100\n87100\n3350                                                                                                                          50\n                    0                                                                                                             0\n                                 25                                      50               100                                           25                                   50                                  100Iteration time (s)\n                                                     Number of machines                                                                                  Number of machines\n                                                                                               [Zaharia et. al, NSDI\u201912]\n\n\n184\n116\n15\n---\nKMeans InMLb\n K-Means in MLlib", "start_char_idx": 8190, "end_char_idx": 13863, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b6e1463-8ec8-46ce-9f9d-381d3685f973": {"__data__": {"id_": "7b6e1463-8ec8-46ce-9f9d-381d3685f973", "embedding": null, "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "712fc20a-dac1-4f7f-9cc3-a5f3403ea833", "node_type": "4", "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}, "hash": "881d15fa87e9c0b9b6e092268e986a8a2ac172ce0bb86b8ebff759d60395d488", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "faa4d3f1-c2d1-4f7b-8280-59f2fd1697dd", "node_type": "1", "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}, "hash": "a5648a14ae5e8e77dae4cbbafa5352fff57d040f906cbb9c5c61388af2361d31", "class_name": "RelatedNodeInfo"}}, "text": "197\n143K-Means                                                                                                                           Logistic Regression\n\n\n            300                                                             Hadoop                                        250                                                   Hadoop157\n                                                                            HadoopBinMem                                                                                        HadoopBinMem121250Spark200Spark\n61W\n            200                                                                                                           150\n            150106100\n87100\n3350                                                                                                                          50\n                    0                                                                                                             0\n                                 25                                      50               100                                           25                                   50                                  100Iteration time (s)\n                                                     Number of machines                                                                                  Number of machines\n                                                                                               [Zaharia et. al, NSDI\u201912]\n\n\n184\n116\n15\n---\nKMeans InMLb\n K-Means in MLlib\n\n\n \uf097 http://spark.apache.org/docs/latest/mllib-\n    clustering.html#k-means\n \uf097 Available for Multiple Languages\n    \u25e6 Scala\n    \u25e6 Java\n    \u25e6 Python\n\n\n                                       Internetworking and Dist.326/13/2024\n                                       Systems", "start_char_idx": 12320, "end_char_idx": 14136, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b44051d-9bee-410d-abce-d2811ba2d47b": {"__data__": {"id_": "8b44051d-9bee-410d-abce-d2811ba2d47b", "embedding": null, "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448", "node_type": "4", "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "hash": "b1574fc512c00baf31bf2ce6510975a20a4e0fae2b39073309c41f7f673919c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70ab97c8-206b-41e7-acb8-c0ed1368db4c", "node_type": "1", "metadata": {}, "hash": "2e37dac678568d708e9e56db074bd38763c87e1db27dc05300c2049d4d558ea8", "class_name": "RelatedNodeInfo"}}, "text": "R.10   0\n                                                     0      M\n                                   Young H. Cho, Ph.D.\n                                   University of Southern California\n                                    EE 542\n                                    Lecture 20: Machine Learning 2\nUSCViterbi\n            School of Engineering                      Universityof Southern California\n                                                                                     1\n---\n                 Traditional Data AnalyticsCurrent ML Approach\n\n\n               Domain                          Data Collection\n             KnowledgeDomainDomain                (Sensors)\n              KnowledgeKnowledgeDomain\n                Knowledge                       Preprocessor\n                                                   (Filters)\n\u2022 MODEL?!?                                         Model\n     \u2013 Physics is too complex                     (Physics)\n     \u2013 Insufficient understanding\n     \u2013 Non-trivial correlation                  Classification\n       between data and model                     (Metrics)\n\n\n                                                                2\n---\n             My Thoughts\n\n\n  Domain\n  Domain                      Data Collection\n                                             Data Collection\nKnowledge\nKnowledgeDomain\n               DomainDomain\n    Domain                       (Sensors)\n                                          (Sensors)\n Knowledge\n          KnowledgeKnowledge\n  KnowledgeDomain\n     Domain\n   Knowledge\n   Knowledge                   Preprocessor\n                                  (Filters)\n\n\n                                   Model\n                                        Model\n                                 (Physics)\n                                          (Physics)\n\n\n                               Classification\n                                 (Metrics)\n\n\n                                                       3\n---\n            Machine Learning Approaches\n\n\n                Unsupervised              Supervised\n                   Learning                Learning\n\n\n  Discrete         Clustering            Classification\n\n\nContinuous      Dimensionality            Regression\n                   Reduction\n\n\n                                                         4\n---\n               Automobile Application\n                   Bluetooth\n4v\n  Ow\n                                           13374                                \"09\n   Wi-Fi\n    \u2022 Data is collected from car's OBD2 portB\n                          \u2022 The app receives the data over Bluetooth and creates\n                            chunks of it.\n                          \u2022 The app sends these chunks to the server periodically.\n                                   E                    \u2022 The server receives the data in the form of\n                                                        \u2022 It is then preprocessed and converted to CSV.\n                                                                                                       binary files.\n                                                        \u2022 The csv is then used for machine learning.", "start_char_idx": 55, "end_char_idx": 3243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70ab97c8-206b-41e7-acb8-c0ed1368db4c": {"__data__": {"id_": "70ab97c8-206b-41e7-acb8-c0ed1368db4c", "embedding": null, "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448", "node_type": "4", "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "hash": "b1574fc512c00baf31bf2ce6510975a20a4e0fae2b39073309c41f7f673919c3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b44051d-9bee-410d-abce-d2811ba2d47b", "node_type": "1", "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "hash": "b8305923a98b57a40605d9dcf6463cba683c74ae2524e0a162c919235c65fe85", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "554a751c-c4fb-4e1a-8873-248ce1a4ec0b", "node_type": "1", "metadata": {}, "hash": "95d9b15a33034e4868b944ce0250052d714f602da291e77c28c6f268ff055b5c", "class_name": "RelatedNodeInfo"}}, "text": "Model\n                                        Model\n                                 (Physics)\n                                          (Physics)\n\n\n                               Classification\n                                 (Metrics)\n\n\n                                                       3\n---\n            Machine Learning Approaches\n\n\n                Unsupervised              Supervised\n                   Learning                Learning\n\n\n  Discrete         Clustering            Classification\n\n\nContinuous      Dimensionality            Regression\n                   Reduction\n\n\n                                                         4\n---\n               Automobile Application\n                   Bluetooth\n4v\n  Ow\n                                           13374                                \"09\n   Wi-Fi\n    \u2022 Data is collected from car's OBD2 portB\n                          \u2022 The app receives the data over Bluetooth and creates\n                            chunks of it.\n                          \u2022 The app sends these chunks to the server periodically.\n                                   E                    \u2022 The server receives the data in the form of\n                                                        \u2022 It is then preprocessed and converted to CSV.\n                                                                                                       binary files.\n                                                        \u2022 The csv is then used for machine learning.\n\n\n                                                                                                          5\n---\n                                                        Collection and Transfer\n                                29     5.55 AM                                       3%    5.55 AM                                   2%    5.54 AM                            5.53 AM\n  1                      W271n St                           Settings                                Silicon Ribbon                                  Choose a Device\n         8\n                         9ih St        '28th 9      Upload only on Wifi                                                                              VEEPEAK\n                                                     Will uploadlogsonly when you are connected t0                                                   8C:DE:52.C4.C2:7B\n                                          w3oth $    Wifi                                                                                             8C DE.52.C4.C2.7B\n                                                    File Upload Interval                                                                             Echo Dot-V93\n                                                     20 Seconds                                                                                      40.B4:CD:D8:A6:EE\n                                           '3Znd St                                                     Connecting_                                   40.B4 CD D8.A6.EE\n                    w 34th S:                        30 Seconds\n              8        UniQersityafferson Blvd                                                                     Connecting to 00.04.3E:           OBDLink LX\n                                                       minute                                                       9E.D3.9F                         00.04.3E:9E:D3.9F\n'36th >              of      uthern'\n                       California                    2 minutes                                                                                        00. 04.3E.9E.D3 9F\n                                                     5 minutes                                                                                       OBDII\n                                                                                                                                                     OO:1D:A5:02:18.55\n                                                     10 minutes                                                                                       O0:1DA5.02.18.55\n                   USC Marshall\n                School of Business                                                                                                                   Shashwat's MacBook Air\n           Exposlilon Blvd                                                                                                                           FO:79.60.26.D5:7B\n  00g\n                                                                                                                                                                             6\n---\n                                                                                              Cloud Storage\nOBDII Graph\n    ea75159160354682bb59ab8651694dfb1520111622902_1520111624685.log.zip                                                                                                                                                    Show Graph\nClick here to download selected file\n                                                                                                                                                   On Board Diagnostics\n             150l\n                                                                                                                                                                                                                                                                                                             KN\n                             21.14.30                     21.15.00                    21.15.30                    21.16.00                    21.16.J0                   21.17.00                     217.30                      Z1-18 00                    21.18.J0                    21.19,00                21.19.30                21.20 00\n                                                                                                                                                                                   Timestamp\n                  02S1        WR: Voltage [V]                                Relative throttleposition [%]                                            Accelerator pedal position                                                       0251 WR: Equivalence Ratio                                                cngine        RPM (rpm]\n                  AccelemalorBrdalposilon                                                                                                                   voltage [V]Catalvst Temperalure Bank                                   sensor            rcl                                      Engine\n                  Calalust                mneratuneBank                          Sensor 2 [\"C]                             Contromodule                                                                                                         codesclearedVehicle speed (km/h]                                            [L/h]\n                                                                              Kseconasi                                                     Inroltle aciudlor                                                Leveninpwi\n                  Fuel RailPressure (diesel                                   qasoline direct inject) [KPa (qauge)l                                                     Barometric pressure Iipa (Absolutel\n                  Distance            traveled with malfunction Indlcator Iamp (MIL) on (Km]                                                                          Amblent alr temperature ('Ci                                                Engine oil temperature (CiEngine coolant temperature [\"CI\n                 Calculatedenolne 1010\n                                      MAF air flow      Igrams                                 Distangmanifold absolute pressure (kPa (absolute)lSnce codes Cearec                                                 run with MIL oniminutes\n                                                                                        Lnta\n        Success\nClick here t0 download normalized cSv file\n                                                                                                                                                                                                                                                                                                                                                    7\n---\n                       Manually Classifying Data", "start_char_idx": 1745, "end_char_idx": 10315, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "554a751c-c4fb-4e1a-8873-248ce1a4ec0b": {"__data__": {"id_": "554a751c-c4fb-4e1a-8873-248ce1a4ec0b", "embedding": null, "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448", "node_type": "4", "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "hash": "b1574fc512c00baf31bf2ce6510975a20a4e0fae2b39073309c41f7f673919c3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70ab97c8-206b-41e7-acb8-c0ed1368db4c", "node_type": "1", "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "hash": "a311fd49699db28f5d7ed78bcfe1f822df7b8a2f8aae109a734f2fbda6d5aee8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d0b54a4-3ee3-4a15-8d4e-0cdffa09b74b", "node_type": "1", "metadata": {}, "hash": "afe89e834f45e94ee3053b320c23eb704a3ffc7fc1a9b21e690d4e8251b88497", "class_name": "RelatedNodeInfo"}}, "text": "Nothing on           AC on          Windows Down\n\n\n                                                       02S1_WR:_Voltage\n                      Intake_manifold_absolute_press\u20261.5                  Relative_throttle_position\n                        Calculated_engine_load                1                  Accelerator_pedal_position_E\n            Engine_coolant_temperature                      0.5                        O2S1_WR:_Equivalence_Ratio\n             Time_run_with_MIL_on                             0                             Engine_RPM\n                                                           -0.5\nDistance_traveled_since_codes_\u2026                              -1                                Accelerator_pedal_position_D\n                                                           -1.5\n        Engine_oil_temperature                               -2                                  Fuel_injection_timing\n                                                           -2.5\n\n\n      Ambient_air_temperature                                                                   Catalyst_Temperature_Bank_1,_\u2026\n\n\n Distance_traveled_with_malfunc\u2026                                                              Catalyst_Temperature_Bank_1,_\u2026\n\n\n                   Barometric_pressure                                                    Control_module_voltage\n           Fuel_Rail_Pressure_(diesel,_or_g\u2026                                        no_of_warm-\u2026\n                                      Vehicle_speedFuel_Level_Input   Commanded_throttle_actuatorRun_time_since_engine_start\n\n\n                                                                                                                                8\n---\n                     Supervised ML\n\n\n       A/C OFF/Window UP 1                A/C ON/Window DOWN\n       A/C OFF/Window UP 2             A/C OFF/Window DOWN run 1\n                                 ~Lchin\n                                 30                                       ~LChia\n                                                                         3\n~Lcia          3u        ~Lca                                     ~Lcin\n                                                                              9\n---\n                         Lessons Learned\n\n\n\u2022 Careful Data Collection/Handling\n    \u2013 Repeatable Experiments\n    \u2013 Minimal Differences (Date/Time/Temperature)\n    \u2013 Experiment One Parameter at a Time\n\n\n\u2022 Results are Still Difficult to Interpret\n    \u2013 Data Spread Range without Explanation\n    \u2013 Opportunity to Hypothesize/Test Resulting\n       Model/Weights\n\n\n                                                   10\n---\n                     Oilfield Applications\n\n\n\u2022 Oilfield Production Pipeline\n\u2022 Industrial Internet of Things\n\u2022 Sensors Placed at the Pipelines\n\u2022 Can We Use ML on the Data to Predict Failures?\n\u2022 Can We Use ML on the Data to Optimize Production?\n\n\n                                                     11\n---\n    Supervised Learning Example\n\n\n                  Normal Operation\n        Failed Operation\n\n\nDataset for One of the Sensors for Gas Compressor Valve  12\n---\n                     Time Series Shapelet\n\n\n\u2022 Portion of Timed Sequence of Sensor Data (A Shape)\n\u2022 Training: Given training dataset for the sensor, search\n   and extract a window of fixed sequence of data\n   (shapelet) that differentiate failed operation to normal\n   operation\n\u2022 Classifier: Function that quantifies the similarity\n   between the shapelet and a sequence of test data\n   enclosed in the moving window of the same size\n\u2022 Modification: Shapelet was modified based on the\n   observed data sequence to increase effectiveness\n\n\n                                                             13\n---\n10ResultAccuracy\n Shapelet Size\n\n\n         14\n---\n                          Lessons Learned\n\n\n\u2022 Traditional Classifiers were NOT useful\n     \u2013 This is a common method used in industry\n     \u2013 Sometimes they work, but cannot determine why\n     \u2013 Limits for the classifiers are not the absolute\n\n\n\u2022 Need Application Specific Classifiers\n     \u2013 Data abstraction may be modified to use classifiers\n     \u2013 May be better to come up with a new classifier\n\n\n                                                            15\n---\n                            Power Problem in Chips\n\n\nYield (%)\n\n\n                        Even yield is now largely affected by power\n\n\n                                                Defect Categories\n\n\n                                  Lithagraphy Based                                    Mostly\n                                                                                   POWER/HEAT\n                                                                                 Related Failures\n\n\n           350nm (\u201895)    250nm (\u201898)   180nm(\u201999)    130nm (\u201801)    90nm (\u201804)      2018 ?    Near Future\n\n\n                                     Parts of the chip run too HOT\n                            even though nothing is wrong structurally!\n\n\n                                                                                                            16\n---\n                             Power Problem in Chips\n\n\n         130nm Pentium III                   90nm Nvidia G80            22nm Processors\n             April 2001                      November 2006                    Today!\n          XX     XXXXXXXX                        XX     X XXXX\n        XXXXX     XXXX                         XX    X  XXXX\n           X              X  XX           X X\n                                            X    X X         XXXX\n\n\nXX       X    X    XXXXXXXX\n\nX     XX X   X       X\n      X      X\n   X     X\n              X      X\n        X  XX\n                 X\n\n\nXX XX\n    X  XX     XXX X    XXX X\n           XXXXX           X\n  X X XX               XX  X\n       X   XXX\n  X X  X        XX     XX\n    X    X X\n           X X  X   X", "start_char_idx": 10360, "end_char_idx": 16218, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d0b54a4-3ee3-4a15-8d4e-0cdffa09b74b": {"__data__": {"id_": "1d0b54a4-3ee3-4a15-8d4e-0cdffa09b74b", "embedding": null, "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448", "node_type": "4", "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "hash": "b1574fc512c00baf31bf2ce6510975a20a4e0fae2b39073309c41f7f673919c3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "554a751c-c4fb-4e1a-8873-248ce1a4ec0b", "node_type": "1", "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "hash": "b0f5db713e694cf92aa5eabd93bc942ef3658534924f58da16def3fcbb6960ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3322de2f-417e-47e2-8517-00c18cc145ee", "node_type": "1", "metadata": {}, "hash": "bc3692bd8f2bb48a09480f7b1552514d9cf5915f1ba1dbe77a77a0ca5b6456ea", "class_name": "RelatedNodeInfo"}}, "text": "16\n---\n                             Power Problem in Chips\n\n\n         130nm Pentium III                   90nm Nvidia G80            22nm Processors\n             April 2001                      November 2006                    Today!\n          XX     XXXXXXXX                        XX     X XXXX\n        XXXXX     XXXX                         XX    X  XXXX\n           X              X  XX           X X\n                                            X    X X         XXXX\n\n\nXX       X    X    XXXXXXXX\n\nX     XX X   X       X\n      X      X\n   X     X\n              X      X\n        X  XX\n                 X\n\n\nXX XX\n    X  XX     XXX X    XXX X\n           XXXXX           X\n  X X XX               XX  X\n       X   XXX\n  X X  X        XX     XX\n    X    X X\n           X X  X   X\n\n\n\n\n     ~25% non-determinism                ~50% non-determinism      > 75% non-determinism?!?\n     ~$300B per Year Industry\n\n\nXXXXXX17XXXXXXXXXXXXX X\n---\n                                 Our Test: Nvidia GTX1070\n                                                 Disable        Disable         Disable   Disable\n                                                 3 bad          3 good           bad     4 good\n                                                 cores          cores           cores     cores\n                                                                                                X39\n                                                          4,6590.04      4,6590.04               4,6590+04\n                                                          40-B3          42 05                   40.86\n                                                         X24            X29                     X39\n                                                          4,3340+04      4,384e.04               4.38-0+04\n                                                          40.88          42.02\n                                                         X248010-04     X293.8010-04            7393.8010+04\n                                                          41,03                                  4077\nTotal power consumption for 3 best cores is the same as 2 worst cores\n                                                                                                              18\n---\n Field Programmable Gate Arrays\n\n\n4                                Measurement Experiments\n                                 \u2022 Experiment Circuit\n                                       \u2022 Regular structure\n                                       \u2022 200MHz design\n                                       \u2022 Entire FPGA mapped\n                                 \u2022 Xilinx Spartan 3E\n                                       \u2022 90nm CMOS technology\n                                       \u2022 3-5% power variation on the same IC\n                                       \u2022 ~14% average power variations across\n                                           two different ICs\n                                 \u2022 Xilinx Spartan 6\n                                       \u2022 45nm CMOS technology\n                                       \u2022 ~9% power variation across the same IC\n                                 \u2022 7 Series and beyond\n                                       \u2022 < 45nm CMOS technology\n                                       \u2022 Higher variations expected\n\n\n                                                                                 19\n---\n      On-line Power Monitoring\n\n\n         Digital                Power     Console (optional)\n         Sensors            Management\n                                 Unit\n\n\n                                        \u2022 Enable Monitoring\n\n\n                                        \u2022 Instant Readings\n\n\n                                        \u2022 Real-time Dynamic\n                                            Management\nInternal layout of a Microprocessor\n\n\n                                                              20\n---\n                      On-line Power Monitoring\n\n\n\u2022  Hardware Instrumentation\n    \u2013 External total chip power sensor (a low-cost ADC at power source)\n    \u2013 Digital logic based probes within chip\n    \u2013 Negligible chip overhead and resilient to noise\n    \u2013 Can leverage existing digital instrumentations\n    \u2013 100% scalable to all future technology node\n\u2022  Purely Software Instrumentation (Alternative to HW)\n    \u2013 Software only solution can be used in place of hardware probes\n    \u2013 2-5% software overhead dependent on program structure\n\u2022  Software Analytics\n    \u2013 Big Data created in real-time through digital monitoring\n    \u2013 Machine learning applied to the Big Data to extract chip-specific parameter\n    \u2013 Built-in self-calibration and real-time measurements\n    \u2013 Measurements at any granularity (down to per cycle)\n    \u2013 Determine sub-component level dynamic power and leakage\n    \u2013 Predict dynamic power and leakage for tasks/operations\n\n\n                                                                                   21\n---\n                     Working Prototypes\n\n\n    Internet Protocol Router prototype            OpenRISC based SoC prototype\n\n\n\u2022 Combinational Logic to SoC Design on FPGAs\n\u2022 On chip as well as on board Power Measurements\n\u2022 3 Patents held through USC\n\n\n                                                                                22\n---\n                                             Comparison\n\n\n   Measurement    Deviation           Method of              No. of        Sampling   Workload      Target Power\n    Technology    from ADC          Measurement            Channels          Rate    Dependent    Monitoring Level\n\n\n    Direct ADC         -               Dedicated                6            4KS/s        No         Board level\n   Measurement                     Current Sensors\n\n\n  Runtime Power     12.5%        Power Model Table             22           1K S/s       Yes         Architectural\n    Monitoring    (Average)            Look Up                                                       components", "start_char_idx": 15442, "end_char_idx": 21405, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3322de2f-417e-47e2-8517-00c18cc145ee": {"__data__": {"id_": "3322de2f-417e-47e2-8517-00c18cc145ee", "embedding": null, "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448", "node_type": "4", "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "hash": "b1574fc512c00baf31bf2ce6510975a20a4e0fae2b39073309c41f7f673919c3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d0b54a4-3ee3-4a15-8d4e-0cdffa09b74b", "node_type": "1", "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "hash": "def6ce59f01463879b03049db6a445f13d84ae6fc640b1f32cb41f57d68781de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0481488-d503-4e5b-8fcc-27e206a6e5cf", "node_type": "1", "metadata": {}, "hash": "f1a762dbe8c75c20799b726f71f68241c7163ccc23ffc7a78acf563eed28dc73", "class_name": "RelatedNodeInfo"}}, "text": "21\n---\n                     Working Prototypes\n\n\n    Internet Protocol Router prototype            OpenRISC based SoC prototype\n\n\n\u2022 Combinational Logic to SoC Design on FPGAs\n\u2022 On chip as well as on board Power Measurements\n\u2022 3 Patents held through USC\n\n\n                                                                                22\n---\n                                             Comparison\n\n\n   Measurement    Deviation           Method of              No. of        Sampling   Workload      Target Power\n    Technology    from ADC          Measurement            Channels          Rate    Dependent    Monitoring Level\n\n\n    Direct ADC         -               Dedicated                6            4KS/s        No         Board level\n   Measurement                     Current Sensors\n\n\n  Runtime Power     12.5%        Power Model Table             22           1K S/s       Yes         Architectural\n    Monitoring    (Average)            Look Up                                                       components\n\n\nModeling w/Event     10%         Power Model Event             12             NA         Yes         Architectural\n      Counters    (Average)            Counters                                                      components\n\n\n    USC OASYS       1.25 %             Weighted                                                 Board, Architectural,\n     RESEARCH       (Max)               Power                  350         250 KS/s       No       and Sub-circuit\n                                    Measurements\n\n\n                           Comparison between type of power estimation techniques\n\n\n                                                                                                                       23\n---\n                                             Comparison\n\n\n     Measurement             Method of Measurement                     No. of   Sampling                Overhead\n       Technology                                                     Channels     Rate\n\n\n   Altera PowerPlay   Estimated power through simulation                  4          -     USB, software based simulation\n\n\n     Xilinx XPower    Estimated power through simulation                  14         -     USB, software based simulation\n\n\n  Performance-driven    Estimated Power derived through                    -         -              Inaccurate due to\n       Clustering                    simulation                                                manufacturing variations\n\n\n      Intel Itanium      Model based power estimation                    120     125kS/s     Counters, Voltage regulators,PLL and freqcontrollers.\n\n\n AMD On-chip power       Model based power estimation                     95         -       Counters, Voltage regulators,\n       estimation                                                                               PLL and freq controllers.\n\n\nUSC OASYS RESEARCH           Weighted Counter Values                     350     250 KS/s            Digital Sensors\n\n\n                             Comparison between other implementations\n\n\n                                                                                                                                  24\n---\n                           Lessons Learned\n\n\n\u2022 Power Consumption is going to be (IF NOT ALREADY) the\n    Biggest Problem for Cloud Computing and Data Center\n     \u2013 Fine-grained monitoring with management is necessary\n     \u2013 Big wins in chip yield and life, precise health monitoring, energy\n        savings, and highest performance\n\n\n\u2022 Machine Learning can be very powerful if the\n    fundamental models can be integrated into the algorithm\n     \u2013 Top-down training should be combined with bottom-up data\n        representation and fundamental model\n\n\n                                                                           25\n---\n                                           Summary\n\n\n\u2022  Quality of Training Data Set\n     \u2013 Emphasis of abstraction (retain the most relevant features)\n     \u2013 Correct data labels\n     \u2013 Filter out wrong/bad data from training set\n     \u2013 Small set of high quality training is better than large set of bad training data\n     \u2013 Manual prefiltering by human can drastically improve performance\n\u2022  Custom Data Representation and Classifiers\n     \u2013 Classifier that best fits the domain\n     \u2013 Data context based modification\n     \u2013 Default set of classifiers may never produce effective results\n     \u2013 Application/Domain specific model integration may yield the best result\n\u2022  Cloud Computing and Sensing Platform\n     \u2013 Major problems with power, heat, and growing concerns for security\n     \u2013 Need for fine-grained in-situ power and heat monitoring\n     \u2013 Need for intelligent management\n\n\n                                                                                         26\n---\n                                               Current: Medical Research\n\n\n\u2022 Predicting Cancer based on Biomarkers\n                                                              Distribution of Most Frequently Mutated Genes\n                       12\n                       10\n            ]\n            {\n                        TP53TTN                                              FLG                               DSTFAT3FAT4\n                                    MUC16CSMD3SYNE1LRPIBPIKBCAPCLOMUC4DNAHSXIRP2RYRZ     USHZAOBSCNZFHX4CSMDI\n                                                                                                                            27\n---\n                            Research Challenges", "start_char_idx": 20383, "end_char_idx": 25934, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0481488-d503-4e5b-8fcc-27e206a6e5cf": {"__data__": {"id_": "f0481488-d503-4e5b-8fcc-27e206a6e5cf", "embedding": null, "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448", "node_type": "4", "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "hash": "b1574fc512c00baf31bf2ce6510975a20a4e0fae2b39073309c41f7f673919c3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3322de2f-417e-47e2-8517-00c18cc145ee", "node_type": "1", "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}, "hash": "b5ba957442bc92a03ec5f53ed1084e11679cfc744019fbb96526d5fb7cd94375", "class_name": "RelatedNodeInfo"}}, "text": "26\n---\n                                               Current: Medical Research\n\n\n\u2022 Predicting Cancer based on Biomarkers\n                                                              Distribution of Most Frequently Mutated Genes\n                       12\n                       10\n            ]\n            {\n                        TP53TTN                                              FLG                               DSTFAT3FAT4\n                                    MUC16CSMD3SYNE1LRPIBPIKBCAPCLOMUC4DNAHSXIRP2RYRZ     USHZAOBSCNZFHX4CSMDI\n                                                                                                                            27\n---\n                            Research Challenges\n\n\n\u2022 High Complexity Data\n\u2022 High Complexity Data\u2013 Traditional methods may have limited usefulness\n      \u2013 Should still evaluate their effectiveness\n      \u2013 A method of reducing complexity or isolating parameters\n      \u2013 Hierarchically cluster data to potentially isolate parameters\n      \u2013 Recursively correlate and remove largest parameter to amplify smaller\n\u2022 Data Quality and Quantity\n                           \u2022 Data Quality and Quantity\u2013 Collect sufficient data from the healthy population for training\n                                                                                                                        \u2013 Possibly integrate data before and after cancer\n      \u2013 A method of differentiating good versus bad data\n                                                        \u2013 Select training data from cluster that test data belongs\n      \u2013 Collecting large amount of data to match the problem\n                                                            \u2013 Integrate additional body sensor and contextual data for each person\n\u2022 Application-specific Knowledge\n                                \u2022 Application-specific Knowledge\u2013 Integration of evidence supported findings and/or models\n                                                                                                                          \u2013 Select biological models and integrate in prediction function\n\u2022 Platform Related Research\n                           \u2022 Platform Related Research\u2013 Power/Heat problems in both High-Performance and Mobile Systems\n                                                                                                                       \u2013 Minimally invasive fine-power/heat monitor and smart management\n      \u2013 Security problems with Cloud computing and Mobile Systems\n                                                                 \u2013 Non-invasive security monitor with signature (refer IoT presentation)\n\n\n                                                                                                 28", "start_char_idx": 25213, "end_char_idx": 27956, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19263495-8486-4c44-9e99-397fd6a599c6": {"__data__": {"id_": "19263495-8486-4c44-9e99-397fd6a599c6", "embedding": null, "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630", "node_type": "4", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "59fdc49d4c0fa8c58cc7e2b5db45862993b6e685ecb03773835d7b7f24608516", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "900c8a5c-35fa-4203-a5c2-39f3fb1b86aa", "node_type": "1", "metadata": {}, "hash": "eb1114414c3d9cb82f18116f88b732654e63f358ec21430741e1bc11422c36b2", "class_name": "RelatedNodeInfo"}}, "text": "EE542\n           Internet and Cloud Computing\n     Lecture 21 \u2013 Estimating Power with ML\n\n\n                           Young Cho\n             Department of Electrical Engineering\n               University of Southern California\nUSXC Viterbl\n                                                   1\n---\n     Final Project Progress Demos\n\n\n\u2022 Due Every Mondays 11:59 PM in Nov\n\u2022 Must Demonstrate Working System\n\u2022 Incremental Functions Added with\n  Corresponding Results\n\u2022 System Must Work Every Demo\n\u2022 Every Team Member Must Contribute in\n  Describing the Demo\n\n\n6/13/2024                 Network Processor  2\n---\n    Final Project Progress Presentations\n\n\n\u2022 November 18\n     \u2013 Submit Practice Presentation Slides\n\u2022 November 20\n     \u2013 Go over the Practice Presentations\n\u2022 November 25\n     \u2013 Submit Final Project Progress Presentation Slides\n\u2022 November 27, 29\n     \u2013 Final Project Progress Presentationth\n     \u2013 7 teams on 27th and 6 teams on 29\n     \u2013 Mandatory Attendance\n\u2022 December 13\n     \u2013 Final Project Demo Presentation Video\n\n\n6/13/2024                           Network Processor     3\n---\n                            The History\n10024,900\n            oRelhlememande\n            acedepcdjth                                LOGIC DENSITY\n 102 p0@    Opaw Wpqw\n            @Mucunei\n                                                       PERFORMANCE/POWER\n   100@\n     103                                                POWER\n\n\n                                                       PROCESSOR CORES\n       1985         72e0             21   2905  2ork0\n                            Source: ITRS\n---\n                             The Problem\n                                                1000\nVoltage scaling as an effective weapon\nagainst power reaching its limits !              100\n  \u2022 CMOS at 45 & 22 nm nodes run at 1.2V.\n                                                                                 Tox (A)\nIncreased power per unit area                     10                             Vt (V)\n                                                                                 Vdd (V)\n \u2022 Thermal Hot spots\n \u2022 Inefficient Cooling systems\n                                           1.2 V\nOther Alternative is, Supply voltage\ngating                                           0.1\n \u2022 Gains diminished by inaccuracies in              0.61          0\n   measurements                                         Gate Length; Lgate (um)\n\n\n                                                          Source: Intel & IBM\n---\n                                                 Current Solutions\n\n\nCurrent in-situ methods not efficient, cost-effective or                             Coarse-grain\nscalable                                                                             management\n     \u2013 Mostly analog or mixed signal (high power, area, cost, and poor                   TODAY\n         scalability)                                                                                                             user demano\n     \u2013 MIT\u2019s on-chip method yields up to 60% power savings, but comes\n         at a huge silicon area cost                                                   Fine-grain\n     \u2013 No or Minimal Accounting of PVT Variations                                    managementFUTURE\n     \u2013 Result: Less accurate and worse with increasing PVT variations\n\n\n                                                                                      Reference : V.De , \u201cFine grain Power management\u201d, Forum talk, ISSCC 2013\n                                                                                                                4-cre CIec #ith Lariation\n                                                                                                            Temperature variations\n                                                                        PVT variations                       due to packaging\n---\nGTX 1070 \u2013 15 Core GPU\n                              X24                 4 29                      X 39\n                              Y:4.859u + 04         4-0594                    4-0590+04\n                                40.43               47 05                     40,86\n                              X24                 X28                       X38\n                                4.3840+04            -3840+04                 4-3840+04\n                              2: 40.88            2: 42.02                  2: 40.84\n                              X24\n                              Y:3.8010+04                                   X;39\n                                                    3-80/0+04                 380/0+04\n                              2: 41                 41.9                      40.77\n                   Enable 12          Enable 12                Enable 11\n                  best cores         worst cores               worst cores\n---\n                          Our Work\n\n\n\u2013 Combine Direct measurements and fundamental\n    theory of estimation\n\u2013 Online linear solver to partition power\n\u2013 Regressively extract the best model for the device by\n    accurate model collapsing per chip basis.\n---\n                                                    Background\n                    REF\n                                                                                          1\n                                                                                          1\n                                                        DOWN\n                                                                                             8.00            0.05           0.10           0.15\n                                                                                                                 UWIMHz Gate\n                                                                                             CoIparison with ero-delay power areaSiIlulabion results.\n                                                                     \ud835\udc43\ud835\udc51\ud835\udc66\ud835\udc5b = \u03b1 . Act", "start_char_idx": 29, "end_char_idx": 5997, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "900c8a5c-35fa-4203-a5c2-39f3fb1b86aa": {"__data__": {"id_": "900c8a5c-35fa-4203-a5c2-39f3fb1b86aa", "embedding": null, "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630", "node_type": "4", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "59fdc49d4c0fa8c58cc7e2b5db45862993b6e685ecb03773835d7b7f24608516", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19263495-8486-4c44-9e99-397fd6a599c6", "node_type": "1", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "2ae040f666765e7144172829e11e16cdab694f526762ac94f088f899d6e14913", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab3f1dd9-2909-4126-8b78-453c7740cc63", "node_type": "1", "metadata": {}, "hash": "9a9851462c5ea77e4be05faa2abf8dcd87867be53228d111cd26248af605d060", "class_name": "RelatedNodeInfo"}}, "text": "\u2013 Combine Direct measurements and fundamental\n    theory of estimation\n\u2013 Online linear solver to partition power\n\u2013 Regressively extract the best model for the device by\n    accurate model collapsing per chip basis.\n---\n                                                    Background\n                    REF\n                                                                                          1\n                                                                                          1\n                                                        DOWN\n                                                                                             8.00            0.05           0.10           0.15\n                                                                                                                 UWIMHz Gate\n                                                                                             CoIparison with ero-delay power areaSiIlulabion results.\n                                                                     \ud835\udc43\ud835\udc51\ud835\udc66\ud835\udc5b = \u03b1 . Act\n\n\nReferences\n\u2022    M. Nemani and F. Najm, \u201cToward a high-level power estimation capability,\u201d IEEE Trans. Computer-Aided\n     Design, vol. 15, no. 6, pp. 588\u2013598, 1996.\n\u2022    P. E. Landman, J. M. Rabaey, \u201d Architectural Power Analysis: The Dual Bit Type Method,\u201c IEEE Transactions on\n     VLSI ,Vol 4 pp. 173-187 , June 1995.\n---\n                                                                          Theory\n\n\nComponent C consisting of n wires . Each wire driving a capacitive load of Ci\nSignal Transitions at each line is represented as \ud835\udc61\ud835\udc5f\ud835\udc56 and Supply voltage as \ud835\udc49\ud835\udc37\ud835\udc37\n  \ud835\udc43\ud835\udc5b\ud835\udc5c\ud835\udc5a = \u03c3\ud835\udc56\ud835\udc5b=1           \ud835\udc61\ud835\udc5f\ud835\udc56 . \ud835\udc50\ud835\udc56. \ud835\udc49\ud835\udc37\ud835\udc372    =\u03c3\ud835\udc56\ud835\udc5b=1       \ud835\udc61\ud835\udc5f\ud835\udc56 . \ud835\udc4a\ud835\udc56  \ud835\udf3a = 0 , \ud835\udc3c\ud835\udc51\ud835\udc52\ud835\udc4e\ud835\udc59Conditions\n                        \ud835\udc77\ud835\udc8f\ud835\udc90\ud835\udc8e \u2212 \ud835\udc77\ud835\udc86\ud835\udc94\ud835\udc95 = \ud835\udf3a                                       \ud835\udf3a \u2260 0 , \ud835\udc48\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc5f \ud835\udc43\ud835\udc49\ud835\udc47 \ud835\udc63\ud835\udc4e\ud835\udc5f\ud835\udc56\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b\ud835\udc60\n                                                                                       \ud835\udc4e\ud835\udc5b\ud835\udc51 \ud835\udc5a\ud835\udc52\ud835\udc4e\ud835\udc60\ud835\udc62\ud835\udc5f\ud835\udc52\ud835\udc5a\ud835\udc52\ud835\udc5b\ud835\udc61 \ud835\udc5b\ud835\udc5c\ud835\udc56\ud835\udc60\ud835\udc52\n\n\n                                                                                                           \ud835\udc5a\n 1                        2                           n -1                      n       \ud835\udc43\ud835\udc52\ud835\udc60\ud835\udc61,1 = \u0dcd            \ud835\udc61\ud835\udc5f\ud835\udc59 . \ud835\udc4a\ud835\udc59\n                                                                                                          \ud835\udc59=1\n                                                                                                            \ud835\udc5d\n                                                                                        \ud835\udc43\ud835\udc52\ud835\udc60\ud835\udc61,2 = \u0dcd             \ud835\udc61\ud835\udc5f\ud835\udc5e . \ud835\udc4a\ud835\udc5e\n                                                                                                          \ud835\udc5e=1\n\n\n                                                                                              \ud835\udc64\u210e\ud835\udc52\ud835\udc5f\ud835\udc52, \ud835\udc5b > \ud835\udc5a > \ud835\udc5d\n                                                                                        \ud835\udc77\ud835\udc8f\ud835\udc90\ud835\udc8e \u2212 \ud835\udc77\ud835\udc86\ud835\udc94\ud835\udc95,\ud835\udfcf = \ud835\udf3a\ud835\udfcf\n\n\n                                                                                        \ud835\udc77\ud835\udc8f\ud835\udc90\ud835\udc8e \u2212 \ud835\udc77\ud835\udc86\ud835\udc94\ud835\udc95,\ud835\udfd0 = \ud835\udf3a\ud835\udfd0\nm                                                                              mn                    \ud835\udf3a\ud835\udfd0     \u2265 \ud835\udf3a\ud835\udfcf\n\n\n                                                                                                                                        10\n---\n           Evaluating logic cuts to extract desired\n                                                          instrumentation point\n\n\n                                                                                  \ud835\udc43\ud835\udc5b\ud835\udc5c\ud835\udc5a = \u03c3\ud835\udc56\ud835\udc5b=1                                                               \ud835\udc61\ud835\udc5f\ud835\udc56 . \ud835\udc4a\ud835\udc56 , Where n = all lines in C\u2026\u2026\u20261\ud835\udc43\ud835\udc52\ud835\udc60\ud835\udc61,1 = \u03c3\ud835\udc5d=\ud835\udc5a(\ud835\udc61\ud835\udc5f\ud835\udc5d . \ud835\udc4a\ud835\udc5d), Where m = inputs of C.\n\n\n                                                       2                             \ud835\udc43\ud835\udc5b\ud835\udc5c\ud835\udc5a \u2212 \ud835\udc43\ud835\udc52\ud835\udc60\ud835\udc61,1 = \ud835\udf001\n                                                       3                           \ud835\udc56\ud835\udc53 max(\ud835\udf001) > E ,", "start_char_idx": 4944, "end_char_idx": 8722, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab3f1dd9-2909-4126-8b78-453c7740cc63": {"__data__": {"id_": "ab3f1dd9-2909-4126-8b78-453c7740cc63", "embedding": null, "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630", "node_type": "4", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "59fdc49d4c0fa8c58cc7e2b5db45862993b6e685ecb03773835d7b7f24608516", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "900c8a5c-35fa-4203-a5c2-39f3fb1b86aa", "node_type": "1", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "d1800ee84feb447aa0f6bd2f1783cbe0a228031159a45448d11411a9fef9f0f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b628913-e7e9-422b-9a82-af14bd2da3f1", "node_type": "1", "metadata": {}, "hash": "c11254edbc2938452fd3cc93bad520a6c76e7536001f6bd499bcb4e2c1943282", "class_name": "RelatedNodeInfo"}}, "text": "10\n---\n           Evaluating logic cuts to extract desired\n                                                          instrumentation point\n\n\n                                                                                  \ud835\udc43\ud835\udc5b\ud835\udc5c\ud835\udc5a = \u03c3\ud835\udc56\ud835\udc5b=1                                                               \ud835\udc61\ud835\udc5f\ud835\udc56 . \ud835\udc4a\ud835\udc56 , Where n = all lines in C\u2026\u2026\u20261\ud835\udc43\ud835\udc52\ud835\udc60\ud835\udc61,1 = \u03c3\ud835\udc5d=\ud835\udc5a(\ud835\udc61\ud835\udc5f\ud835\udc5d . \ud835\udc4a\ud835\udc5d), Where m = inputs of C.\n\n\n                                                       2                             \ud835\udc43\ud835\udc5b\ud835\udc5c\ud835\udc5a \u2212 \ud835\udc43\ud835\udc52\ud835\udc60\ud835\udc61,1 = \ud835\udf001\n                                                       3                           \ud835\udc56\ud835\udc53 max(\ud835\udf001) > E ,\n\n\n                                                       4                          \ud835\udc53(\ud835\udc65) = \u222a\ud835\udc58=1\ud835\udc49\ud835\udc58,\ud835\udc57                                                                                Such that f(\ud835\udc49\ud835\udc58) = f(\ud835\udc49\ud835\udc58+1) \u2200 \ud835\udc58 + 1 \u2264 \ud835\udc57\n\n\n                                                       5                         \ud835\udc43\ud835\udc52\ud835\udc60\ud835\udc61,2 = \u03c3\ud835\udc5d=\ud835\udc4e(\ud835\udc61\ud835\udc5f\ud835\udc5d . \ud835\udc4a\ud835\udc5d), Where a = inputs of cuts.\nError (%)\n\n\n                                                       6                            \ud835\udc43\ud835\udc5b\ud835\udc5c\ud835\udc5a \u2212 \ud835\udc43\ud835\udc52\ud835\udc60\ud835\udc61,2 = \ud835\udf002\n\n\n                                                       7\n                                                                                            4\n                                                       8                                    3\n                                                                                            2\n                                                                                            1\n\n\n                                                     16                                             0                   \ud835\udc5a                8\ud835\udc5b(\ud835\udc5a + 8) (\ud835\udc5a + 7) (\ud835\udc5a + 6) (\ud835\udc5a + 5) (\ud835\udc5a + 4) (\ud835\udc5a + 3) (\ud835\udc5a + 2) \ud835\udc5b (\ud835\udc5a + 1)\n                                                                                                                                                                   \ud835\udc5b\n                                                                                                                                                                   7                         \ud835\udc5b\n                                                                                                                                                                                             6                      \ud835\udc5b5                       \ud835\udc5b\n                                                                                                                                                                                                                                              4                        \ud835\udc5b\n                                                                                                                                                                                                                                                                       3   \ud835\udc5b2\n\n\n                                                                                                                                                          Number of points of observation\n---\n                      Using Online Solver for Weights\n\n\nCounter values                   Power Values            Residue                W1               W2                                           W3                         W4                              W5           W6  W7  WS\n28 1 0 3 1 1 2 26 1                             0.3063            0  0.000463369    0.000203485                                   0.000208883                           3.94E-05 0.000166 0.000171 5.54E-05 0.000883\n3 0 1 3 1 0 2 3 1                               0.0717            0  0.000924628    0.000317377                                    0.00023828                          0.000078 0.00023 0.00028 7.93E-05 0.001344\n3 0 0 2 0 0 2 3 1                               0.0078            0  0.000917426      0.00031614                                  0.000237881                           7.74E-05 0.00023 0.00028 7.91E-05 0.00135\n                                                                     0.000921373    0.000317757                                    0.00023748                           7.78E-05 0.00023 0.000279 7.94E-05 0.001346\n5 1 0 5 1 1 2 5 1                               0.1025            0  0.000957923    0.000330416                                   0.000240154                           8.08E-05 0.000234 0.000291 8.16E-05 0.001396\n5 0 1 5 1 0 2 5 1                               0.0933            0  0.000957177    0.000330682                                   0.000240756                           8.07E-05 0.000234 0.000291 8.15E-05 0.001397\n5 0 0 4 0 0 2 5 1                               0.0039            0  0.", "start_char_idx": 8132, "end_char_idx": 12776, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b628913-e7e9-422b-9a82-af14bd2da3f1": {"__data__": {"id_": "8b628913-e7e9-422b-9a82-af14bd2da3f1", "embedding": null, "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630", "node_type": "4", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "59fdc49d4c0fa8c58cc7e2b5db45862993b6e685ecb03773835d7b7f24608516", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab3f1dd9-2909-4126-8b78-453c7740cc63", "node_type": "1", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "d8283ac2ac012326576aed90f3e241131c184967710a2d711495b63c6b62a369", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3ffaef0-2c5e-486c-87e8-933565d322b2", "node_type": "1", "metadata": {}, "hash": "237623e45361df097b81e5b5b78164788765d6eaae2a8b99230eb1ab52a37c42", "class_name": "RelatedNodeInfo"}}, "text": "94E-05 0.001346\n5 1 0 5 1 1 2 5 1                               0.1025            0  0.000957923    0.000330416                                   0.000240154                           8.08E-05 0.000234 0.000291 8.16E-05 0.001396\n5 0 1 5 1 0 2 5 1                               0.0933            0  0.000957177    0.000330682                                   0.000240756                           8.07E-05 0.000234 0.000291 8.15E-05 0.001397\n5 0 0 4 0 0 2 5 1                               0.0039            0  0.000964848      0.00033605                                  0.000241628                           8.14E-05 0.000237 0.000295 8.24E-05 0.001415\n7 1 0 7 1 1 2 7 1                               0.1265            0  0.000963136    0.000335876                                   0.000242144                           8.13E-05 0.000237 0.000295 8.22E-05 0.001417\n7 0 1 7 1 0 2 7 1                               0.1429            0  0.001044859      0.00037248                                       2.51E-04                         8.83E-05 0.000253 3.24E-04 8.69E-05 0.001543\n                                                0.0973               0.001045028    0.000372572                                        2.51E-04                         8.83E-05 0.000253 3.24E-04 8.69E-05 0.001543\n7 0 0 6 0 0 2 7 1                                       8.05E-07     0.001044964    0.000372552                                        2.51E-04                         8.83E-05 0.000253 3.24E-04 8.69E-05 0.001543\n9 1 0 9 1 1 2 9 1                               0.1409  9.01E-07     0.001045086    0.000372471                                        2.51E-04                         8.83E-05 0.000253 3.24E-04 8.69E-05 0.001543\n9 0 1 9 1 0 2 9 1                               0.1453  9.02E-07     0.001045088    0.000372474                                        2.51E-04                         8.83E-05 0.000253 3.24E-04 8.69E-05 0.001543\n9 0 0 8 0 0 2 9 1                               0.0179  9.02E-07\n11 1 0 11 1 1 2 11 1                            0.1747  9.16E-07                                                        k                                                                k\n10 0 1 10 1 0 2 10 1                            0.0012  9.18E-07                     Ptotal,t = \u0dcd                                 (a. Pdyn(I)) + PSt(\u0dcdIi) + Residueii\n11 0 0 11 0 0 2 11 1                            0.1695  9.23E-07                                                     i=1                                                              i=1\n13 1 0 13 1 1 2 13 1                            0.2305  9.24E-07\n                                                0.2165                                                                             n\n13 0 1 13 1 0 2 13 1                                    9.78E-07\n12 0 0 12 0 0 2 12 1                            0.0039  9.", "start_char_idx": 12263, "end_char_idx": 15121, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3ffaef0-2c5e-486c-87e8-933565d322b2": {"__data__": {"id_": "a3ffaef0-2c5e-486c-87e8-933565d322b2", "embedding": null, "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630", "node_type": "4", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "59fdc49d4c0fa8c58cc7e2b5db45862993b6e685ecb03773835d7b7f24608516", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b628913-e7e9-422b-9a82-af14bd2da3f1", "node_type": "1", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "82b2a24a80a5281b9399212caae584d0f87a32f18793652d195a6f73b2322c43", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5213508-5190-40e5-8400-a3a5a67fd091", "node_type": "1", "metadata": {}, "hash": "0a24a9e50a7003210233149495a08ba43aaaa32867b59167db3475fcd86352b4", "class_name": "RelatedNodeInfo"}}, "text": "0012  9.18E-07                     Ptotal,t = \u0dcd                                 (a. Pdyn(I)) + PSt(\u0dcdIi) + Residueii\n11 0 0 11 0 0 2 11 1                            0.1695  9.23E-07                                                     i=1                                                              i=1\n13 1 0 13 1 1 2 13 1                            0.2305  9.24E-07\n                                                0.2165                                                                             n\n13 0 1 13 1 0 2 13 1                                    9.78E-07\n12 0 0 12 0 0 2 12 1                            0.0039  9.88E-07                                 PTotal = (\u0dcdWa) + (1 \u2217 \ud835\udc4a) + Residuej                  j                     \ud835\udc46\n                                                                                                                                j=1\n15 1 0 15 1 1 2 15 1                            0.2233  9.08E-07\n15 0 0 15 0 1 2 15 1                            0.2683  9.18E-07                            Generalized Recursive information form of\n16 0 0 17 1 0 2 16 1                            0.2347    9.8E-07                           estimation,\n                                                                                             Z k + 1 = H k + 1 . W + V(k + 1)\n---\n                    Initial Results\n       Error Vs OverheadckttC880                  Error Vs Overhead  ckt2S298\n                                          120  20   30   40   5060        70       100\n               Overhead (%)}                              Overhead (%)\n       Error Vs Overheadckt3C432                  Error Vs Overhead ckt4 - C1908\n1\n   20    40                    100   120  140  20              50         70      100\n               Overhead (%)                               Overhead (%)\n---\n    Reduction of methodology to practice\n\n\n\u2022 NetFPGA : Open source hardware with                         barcodi\n     all the networking appliances built in.                           IRTE\"KE\n\u2022 The goal was to identify the power\n     used by different subcomponents of\n     the board. Eg: Eth Phy , SRAM, DDR\n                                   Digital system\n                                   with counters\n                    External ADC  synchronization  Observed\n                       power                        Counter\n                    measurement                    valueslo)\n                                     Power\n                                    Weights(w)\n                                   W;    power\n                                                                                14\n---\n           Initial Hardware Results\n                                                                                                             Measured Total Power\n                                                                                                             Calculated Total Power\n                                                                                                             MAC Qs (41\n                  L15000                                                                                     SRAM\n                                                                                                             Gpat arb\n                                                                                                                     FPGA\n                                                                                                             OPL\n                    10OO                                                                                     CPU Qs (4)\n                                                                                                             Remove Pkt\n                                                                                                             Checksum\n                     5000\n                                                                                                             Pkt gen\n                                                                                                             OPL-fifos\n                                                                                                             DOR\n                                                              Time (Milisecs]\n                  4.50E-02                                                                     ADCI\n                  4.OOE-02                                                                     ADC2\n               13.50E-023.OOE-02\n                  2.506-02                                                                     ADC+noise\n                  2.00E-02\n                  1,501-02\n               21.00E-025.00E-03\n                   OOE+OO\n                                                                  106   121  136  151  166  181   196   211\n                                                           Number of Iterations\n6/13/2024          Maximum deviation less than 3% from ADC                                                                           15\n---\n  Reduce Overhead without losing accuracy\n\n\nProblem : How do I reduce the instrumentation\noverhead and yet maintain accuracy ?\nSolution :\n\u2022 What is the proxy for activity within CPU ?\n   Answer : Instructions\n\u2022 Can I use these instructions to measure power\n  accurately ?\n---\nAccounting Activity of SoC\n\n\n                        Too Much Area !!!S          S\n          Processor                            Slave 1S              POWER MEASUREMENT\n   IF STAGEID STAGEEX STAGEWB STAGE                  S\n       S   S S                     SSlave 1SSlave 2S S   S   POWER MEASUREMENT\n       ProcessorS S                  S S\n\n\n     Instruction Profiler with                       S\n     Instruction Counters (S)S\n        Slave 2S S                 SSlave nSSlave nS S   S\n          S S                         S S", "start_char_idx": 14498, "end_char_idx": 20415, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5213508-5190-40e5-8400-a3a5a67fd091": {"__data__": {"id_": "e5213508-5190-40e5-8400-a3a5a67fd091", "embedding": null, "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630", "node_type": "4", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "59fdc49d4c0fa8c58cc7e2b5db45862993b6e685ecb03773835d7b7f24608516", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a3ffaef0-2c5e-486c-87e8-933565d322b2", "node_type": "1", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "2b5a3fb96b809c021979f0e0d2b7ed7009b8b76833e4a24c3b2c31513d04f930", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63f7e750-731a-46d6-9d09-3aa560890ace", "node_type": "1", "metadata": {}, "hash": "2aae5934b40e3684ead9bfc3eea2184ca5eee6b468907a17ab1f46ec741d7666", "class_name": "RelatedNodeInfo"}}, "text": "Problem : How do I reduce the instrumentation\noverhead and yet maintain accuracy ?\nSolution :\n\u2022 What is the proxy for activity within CPU ?\n   Answer : Instructions\n\u2022 Can I use these instructions to measure power\n  accurately ?\n---\nAccounting Activity of SoC\n\n\n                        Too Much Area !!!S          S\n          Processor                            Slave 1S              POWER MEASUREMENT\n   IF STAGEID STAGEEX STAGEWB STAGE                  S\n       S   S S                     SSlave 1SSlave 2S S   S   POWER MEASUREMENT\n       ProcessorS S                  S S\n\n\n     Instruction Profiler with                       S\n     Instruction Counters (S)S\n        Slave 2S S                 SSlave nSSlave nS S   S\n          S S                         S S\n\n\n     Summarizing the Activity as temporal and spatial activitySummarizing The spatial activity\n---\nOnline Estimation of Energy Per Instruction\n                                                       of a processor\n\n\n\u2022 Weights represent contribution of instructions to\n       power.\n                                Instruction Fetch      Instruction DecodeRegister FetchExecute            Memory Access     Write Back\n                                                                                    Address Calc.\n                                         IF                      ID                       EX                    MEM             WB\n                                                                                                                Next PC\n                                            {                Next SEQ PC              Next SEQ PC\n                                                           RSI\n                                                           RS2                                 Branch\n                                                                 Register                Zero?taken\n                                                                   File\n                              PC         Memory      6                                                 0                 1\n                                                                  Sign   Imm                  ALU\n                                                                 Extend                                         Memory\n                                                                                                                            WB Data\n---\n                   Integrating Peripheral Sensors of an SoC\n                                                              into Instruction profiler\n CAlke  olaentibownload: OpenRiSC orpsocv2 sw driverslethmac includelethmac h   Notepad+\n    Edit  Deji           Cncodino  Lanqane    Rettnos  Marro         pluain                    cypeder\n       B              B1 <          01            G %3                                       De:                                                   \u2022  Peripherals are\n                                                                                                       ichort                  Buffer lenjeh\n                                                                                                                               Buffer Stacus\n  ethmac h    int C\n128                                          CETE_RX_BD_INvSINB                                        Lint                                           accessed by load or\n129                                          CETH_RX_B)_PRIBBLE\n130                                          CETH_RX_BD_ICOLONG                                                                                       stores to a pre-defined\n131                                          CETH_RX_BD_SHORT\n                                             CETR_RX_BD_CRCERR                                  dafine    BASE_ACD   Etio_BASZ\n                                             CETR_RX_aD_LATECCL)                                                                                      memory address.\n                                                                                                                            EtE_BISE_ACZ\n           KODER Regiacer                                                                      Adcfine Ceth_Pd_base          (ETH_Pase_ACD Ox+oo)\n        #define CETH VODERRXEN               Oxododooo1      Receive Enable                            CETATotiI                                   \u2022  The hardware Profiler\n137     #define CETH_\"CDERTXEN               Ox00o00002      Tranamit Enable                                                 oxooo\n138     #define CETH_\"CDER_TCPRE             Oxo0o0o0o4      No Pzeamble\n139\n140     #define CETH_\"CDERBRO\n        #define CETH_\"CDERIAY                Oxoooooooe\n                                             Oxoooooo1o      Reject Broldcest\n                                                             UzeIndividual Hazh                                                                       matches these\n141     #defineCETH_VODERPRO                 Oxo0o0o0zo       Frcniacucu3   (receive all)                                                             instructions and\n142     #defineCETH_\"ODERIFG                 Oxo0000040      Kin_  IFC nct requized\n143     #define CETH_\"CDER_ICOPBCK           0*00o0o080      Locp Back\n144     #define CEtI ~CDER ICBCKCI           Oxooooo1oo      No Beckoff                                                                               addresses to account\n145     #define CETH ~CDEREXDEREL            Oxo0ooozoo       Exce33 Defer\n146     #define CETH VODERFULLD              Oxo0o0o40o       FullDuplex\n147     #dezineCETH_YCDERRST                 Oxoooooeoo      Reset KAC                                Spi Dooelcijer        didn'I JiveCOrC           for the peripherals.", "start_char_idx": 19650, "end_char_idx": 25467, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63f7e750-731a-46d6-9d09-3aa560890ace": {"__data__": {"id_": "63f7e750-731a-46d6-9d09-3aa560890ace", "embedding": null, "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630", "node_type": "4", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "59fdc49d4c0fa8c58cc7e2b5db45862993b6e685ecb03773835d7b7f24608516", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5213508-5190-40e5-8400-a3a5a67fd091", "node_type": "1", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "5046decb0438665fffff94dc93a39891c1afcc4ba52e0eca63aea06dff831a2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b355759-ef09-40ee-a262-48f4ee68bdc3", "node_type": "1", "metadata": {}, "hash": "ec236bf804ec7554fe219ac96833a41adb5205c29bec38d5e30f388812b7f28f", "class_name": "RelatedNodeInfo"}}, "text": "148     #define CETH_\"CDER_DLYCRCEN          Oxooooiooo      DelayedCRC Enable\n149     #define CETH_\"CDERCRCEI              Oxoooozooo       CRC Enable\n150     #define CETH_\"CDER_HUGEI             Oxo0o040oo      Huge Enable                         Iefines\n151     #define CETH_ VODER_PAD              Oxooooeooo       FadEnable                        #defile ScaXY_BASE\n152     #define CETH_\"ODERRECSMALL           Oxo0o1oooo      ReceiveSmall                      #defile GPIO         \"1910odoc -\n153                                                                                            ndefine WarTO_BASE  CIsoooog= =\n154     #define CETE INT IXBRegiscerIncerrupe\n155                                          Oxoooooooi      Tranamit Buffer IRQ                    Wario_BAUD_RXTE415200\n156     #define CETH INT IXE                 Oxodo0o0o2       Trananit Error IRQ\n157     #define CETR_INT_RXE                 Ox00o00004       Receive Frame IRQ                ndefine5300 BASE\n158     #define CETH_INT_RXE                 Oxoooooooe       Receive Erzoz IRQ                ndefine IzC_o_BASE\n159     #define CETH_INT_BuSY                Oxooooooio       Zus] IRQ                               IJC - IRO\n        #define CETH_INT_IXC                 Oxoooooozo      Tranamic ConcrolFrareIRQ          ndefine   BASE      CIalooog= =\n161     #define CETHINT_RXC                  Oxo0000040      Received CcntrclFraneIRQ          #define IZC_\"_IRO\n                                                                                               ndefine ETE?_BASE\n            Intezzupt Mask Register */\n        #define CETI InI MAS% Ir3            Oxoooooooi      Irensmit Buffer IRQ Kesk                  Kicicca=\n105     #define CETi INT MSk TXE             Oxo0oooooz       Tranamic ErrorIRQ Mazk                                    C1lz\n        #define CETHINT VASK RXF             Oxodo0o0o4                                        ndefineETE KicicCAZ\n                                                             ReceiveFrame IRQ Kaak\n        #define CETRINT_VASK_RXE             Oxoooooooe      Receive Error IRQ Kask            ndefinendefineETE Kicicca=\n168     #define CETR_Int_MAsk_busy           Oxooooooio      BusyIRQ Mask\n        #define CETH_INT_MASK_IXC            Oxoooooozo       Irengmit ControlTraceIRQ Mask      OR1zoo       Iezicd Cefine\n170     #define CETH_INT_MASK_RXC            Oxo0o0o040      Received ConcrolFrare IRQ Maak    ndefinTICS FER SEC\n---\n                                         Initial Results on EPI\n      2.50702.50%                                                                                           nkrnix\n      200702.00%\n   21.50%5070\n    110070\n       1.00%                                        Peripheral Sensorsprofiler\n                                                    EPI -with InstructinDedicated\n      0.5070\n                                                    EP-with InstructinEPI - Dhrystone;profiler with Peripherals\n       0.50%\n      0.0072\n       0.00% 10    20    30    40   50    60   70   80    90   100   110\n                                  Time (microseconds)                       100\n                                       Time (Milli Seconds)                                                                             Dois\n                                                                                                  1.2\n\u2022     Using the partitioning tool , we\n      needed 150% additional hardware.                                                         10.80.6                                       Measured Energy oithe Scc\n      We now have reduced it to less                                                           90.4                                          CakulatedEnergy Values\n      than 1% of the total SoC                                                                    0.2\n                                                                                                                                          100   110  120   130\n                                                                                                                    Time(Microseconds)\n---\n                 Drawbacks of EPI\n\n\n\u2022 Instruction is conceptual and are not mapped\n   into physical component.\n    \u2013 Hard to use it to assist thermal management\n---\n     Accurate Sub-circuit Physical level power\n          measurement in Processors/SoC\n\n\nProblem : How do I measure physical level sub-\ncomponent power accurately without instrumenting\nadditional counters?\nSolution :\n\u2022 We explored the possibility by looking into\n   processor itself\n\u2022 By doing three levels of manual mapping and we\n   were able to map 80 instructions to 55\n   components.\n---\n Energy Per Component of a Processor", "start_char_idx": 25468, "end_char_idx": 30238, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b355759-ef09-40ee-a262-48f4ee68bdc3": {"__data__": {"id_": "4b355759-ef09-40ee-a262-48f4ee68bdc3", "embedding": null, "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630", "node_type": "4", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "59fdc49d4c0fa8c58cc7e2b5db45862993b6e685ecb03773835d7b7f24608516", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63f7e750-731a-46d6-9d09-3aa560890ace", "node_type": "1", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "f7e0e9dc793612fdad0ce6434d3fd106b7692a9c379e857361adb764e282a566", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "499909b2-8106-4ec3-9bac-185afe1ad8ae", "node_type": "1", "metadata": {}, "hash": "c59a84812ca741a9f37d5b44c92a7f99d32216052d09626cbd3c488e8276a40d", "class_name": "RelatedNodeInfo"}}, "text": "10.80.6                                       Measured Energy oithe Scc\n      We now have reduced it to less                                                           90.4                                          CakulatedEnergy Values\n      than 1% of the total SoC                                                                    0.2\n                                                                                                                                          100   110  120   130\n                                                                                                                    Time(Microseconds)\n---\n                 Drawbacks of EPI\n\n\n\u2022 Instruction is conceptual and are not mapped\n   into physical component.\n    \u2013 Hard to use it to assist thermal management\n---\n     Accurate Sub-circuit Physical level power\n          measurement in Processors/SoC\n\n\nProblem : How do I measure physical level sub-\ncomponent power accurately without instrumenting\nadditional counters?\nSolution :\n\u2022 We explored the possibility by looking into\n   processor itself\n\u2022 By doing three levels of manual mapping and we\n   were able to map 80 instructions to 55\n   components.\n---\n Energy Per Component of a Processor\n\n\n\u2022 Perform analysis on processor instruction execution paths.\n     \u2013 Find the number of components at the lowest granularity that gives\n       same accuracy.\n---\n                              EPC results\n                                                                     EPI\n     2.5096                                                          EPC\n      -00%\n     1.50%6\n   11.00%\n      .509\n     0.00%6\n                                               Time (Milli Seconds\n\u2022 Reduced 80 instruction counters to 55 Component counters\n\u2022 Replaced 70 dedicated peripheral counters with 12 counters in the\n     instruction profiler\n---\n           Comparison of EPI and EPC\n\n\n                                                                                Add Instrn (10)\n\n\n                                                                                          EPC : 10 ALU , 5\n                                                                                           Memory , 10\n                                                                                          In_A_Mux , 0\n                                                                                            In_B_Mux\n\n\n                                                                                  Conditional\n                                                                                   jump (5)\n\n\n                                                                                         EPC : 10 ALU , 10\n                                                                                        In-A-MUX ,10 In-B-\n                                                                                         Mux, 5 Memory\n\n\n\u2022 EPI Produces an average weights associated with switching at the mux and memory.\n\u2022 EPC accounts for these switching \u2013 hence more accurate\n---\n               Drawbacks of EPC\n\n\n\u2022 It is we difficult to extract different layers of\n  components for EPC for a very complex\n  design.\n\u2022 Instruction overlaps not considered.\n---\n        Improving Accuracy of estimation\n            without increasing overhead\n\n\nProblem : How do I improve the accuracy with the same\noverhead?\n\u2022 How do I account for various execution overlaps ?\n    Ans : Implicit enumeration of shared components\n\u2022 Can I still use instruction counts to measure power\n   accurately ?\n---\nAutomated Energy per component \u2013 The concept\n\n\n  Instrns.          Indep. ComponentsIndep.       SharedShared Components\n\n\n                     \ud835\udc3c1 , \ud835\udc3c2, \ud835\udc3c3 \u2026 \u2026 \u2026 \u2026 \u2026 \ud835\udc3c\ud835\udc5b      \ud835\udc3c1 , \ud835\udc3c2, \ud835\udc3c3 \u2026 \u2026 \u2026 \u2026 \u2026 \ud835\udc3c\ud835\udc5b\n     \ud835\udc3c1                            I1 2 3II       I1 2I      Peripherals      \u2026..\n      1                                +             +           +            +        Increment counters such that ,\n                                                                                       Independent counters =\n     \ud835\udc3c12                                                                              Instruction Count and\n                                        +            +           +            +        Shared components =\n     \ud835\udc3c13                                                                              Increment every time\n                                                                                       associated instruction appears\n      :                                +             +           +            +\n     \ud835\udc3c1\ud835\udc5b", "start_char_idx": 29008, "end_char_idx": 33615, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "499909b2-8106-4ec3-9bac-185afe1ad8ae": {"__data__": {"id_": "499909b2-8106-4ec3-9bac-185afe1ad8ae", "embedding": null, "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630", "node_type": "4", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "59fdc49d4c0fa8c58cc7e2b5db45862993b6e685ecb03773835d7b7f24608516", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b355759-ef09-40ee-a262-48f4ee68bdc3", "node_type": "1", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "ec8811364307697b21c906adf1bbfef49ed5713a2dff07f3e241a147fcf7d75d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed74601e-61bf-45d6-a97e-daf04b66c606", "node_type": "1", "metadata": {}, "hash": "8b0e7596ecfc0100e7521ee8d9ee5dbca207b64a87295df0b614e0b8eb45ae58", "class_name": "RelatedNodeInfo"}}, "text": "Instrns.          Indep. ComponentsIndep.       SharedShared Components\n\n\n                     \ud835\udc3c1 , \ud835\udc3c2, \ud835\udc3c3 \u2026 \u2026 \u2026 \u2026 \u2026 \ud835\udc3c\ud835\udc5b      \ud835\udc3c1 , \ud835\udc3c2, \ud835\udc3c3 \u2026 \u2026 \u2026 \u2026 \u2026 \ud835\udc3c\ud835\udc5b\n     \ud835\udc3c1                            I1 2 3II       I1 2I      Peripherals      \u2026..\n      1                                +             +           +            +        Increment counters such that ,\n                                                                                       Independent counters =\n     \ud835\udc3c12                                                                              Instruction Count and\n                                        +            +           +            +        Shared components =\n     \ud835\udc3c13                                                                              Increment every time\n                                                                                       associated instruction appears\n      :                                +             +           +            +\n     \ud835\udc3c1\ud835\udc5b\n\n\n      :\n     \ud835\udc3c\ud835\udc5b\ud835\udc5b\n---\n           Automated Energy per component\n   Digital system with external                                                                     \ud835\udc5b \ud835\udc5b+1\npower/current measurement scheme                                                  \ud835\udc5b                    2                      \ud835\udc5a\n    For n  instructions; Create n                                       \ud835\udc43 = \u0dcd\ud835\udc4e\ud835\udc56\ud835\udc64\ud835\udc56 +               \u0dcd        \ud835\udc4e\ud835\udc57\ud835\udc64\ud835\udc57 + \u0dcd\ud835\udc4e\ud835\udc58\ud835\udc64\ud835\udc58 + \ud835\udc43\ud835\udc60\ud835\udc61\ud835\udc4e\ud835\udc61\ud835\udc56\ud835\udc50 + \ud835\udc45\n   columns that indicate unique                                                  \ud835\udc56=1                  \ud835\udc57=1                   \ud835\udc58=1\n     componentsand     (n+l)\n       columns that indicate\n          dependencies                                           We initially assume that , \u2203 \ud835\udc36\ud835\udc67 , \ud835\udc60\ud835\udc62\ud835\udc50\u210e \ud835\udc61\u210e\ud835\udc4e\ud835\udc61 , \ud835\udc36\ud835\udc67 \u2208 \ud835\udc3c\ud835\udc65 \u2229 \ud835\udc3c\ud835\udc66\n    Incrementunique columns\n   associated t0 instructions and\n specific columns in dependency                                                                                               = 0 , \ud835\udc36\ud835\udc67 does not exist (W = 0)\n      Extract power weights                                                                                                   = \ud835\udc43\ud835\udc52\ud835\udc60\ud835\udc61,\ud835\udc36\ud835\udc63, \ud835\udc56\ud835\udc53 \ud835\udc36\ud835\udc67 \ud835\udc56\ud835\udc60 \ud835\udc52\ud835\udc5e\ud835\udc62\ud835\udc4e\ud835\udc59\ud835\udc59\ud835\udc66\n   associated with each column                                             \ud835\udc43\ud835\udc52\ud835\udc60\ud835\udc61,\ud835\udc361 = \u0dcd(\ud835\udc61\ud835\udc5f\ud835\udc5d . \ud835\udc4a\ud835\udc5d)\n                                                                                             \ud835\udc5d=\ud835\udc62                                              \ud835\udc60\u210e\ud835\udc4e\ud835\udc5f\ud835\udc52\ud835\udc51 \ud835\udc4f\ud835\udc52\ud835\udc61\ud835\udc64\ud835\udc52\ud835\udc52\ud835\udc5b\n                                                                                                                    {                      \ud835\udc5a\ud835\udc62\ud835\udc59\ud835\udc61\ud835\udc56\ud835\udc5d\ud835\udc59\ud835\udc52 \ud835\udc56\ud835\udc5b\ud835\udc60\ud835\udc61\ud835\udc5f\ud835\udc62\ud835\udc50\ud835\udc61\ud835\udc56\ud835\udc5c\ud835\udc5b\ud835\udc60\n          Are the weights                          Is the\n           zero Orequal                         measurement                                                                   Unique\n          (appx) between                         accuracy as                 Stop\n           one Or more                            desired\n            columns\n                                           Undo previous merging\n  Merge the columns iftheyare\n   equal. Eliminate columns if                                                               The weights are means to perform\n         weights are zero.                                                                   implicit enumeration of component\n                                                                                             sharing.\n---\n                                       AEPC Results\n                                                                                            EPI\n                2.5096                                                                      EPC\n                2.00%                                                                      AEPC\n                1.50%\n              11.00%\n                0.50%\n                 .00%\n                                                         Time (Milli Seconds\nWe compare the weights of components from EPC than those of AEPC.\n(based on the sharing information in AEPC).\nFor ALU and register file , the difference between power estimated by AEPC and EPC < 0.5%\n---\nComparison of simulator and hardware results\n\n\n                         4.5\n                                                     45nm HW measurement\n                           4                         65nm SPICE Model simMaximum Deviation (%)180nm SPICE Model sim\n                         3.5\n\n\n                           3\n\n\n                         2.5\n\n\n                           2\n                         1.5                       ~1%\n\n\n                           1\n\n\n                         0.5\n                           00 10 20 30 40 50 60 70 80 90 100\n\n\n                                      Instrumentation Overhead (%)", "start_char_idx": 32627, "end_char_idx": 37294, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed74601e-61bf-45d6-a97e-daf04b66c606": {"__data__": {"id_": "ed74601e-61bf-45d6-a97e-daf04b66c606", "embedding": null, "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "170b749c-dcbe-45ec-a84d-27bbe8ce0630", "node_type": "4", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "59fdc49d4c0fa8c58cc7e2b5db45862993b6e685ecb03773835d7b7f24608516", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "499909b2-8106-4ec3-9bac-185afe1ad8ae", "node_type": "1", "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}, "hash": "8921a4d4889e72e1cf56971364bd63a76d77d2de22f1edb5a5a8467b44408100", "class_name": "RelatedNodeInfo"}}, "text": "4.5\n                                                     45nm HW measurement\n                           4                         65nm SPICE Model simMaximum Deviation (%)180nm SPICE Model sim\n                         3.5\n\n\n                           3\n\n\n                         2.5\n\n\n                           2\n                         1.5                       ~1%\n\n\n                           1\n\n\n                         0.5\n                           00 10 20 30 40 50 60 70 80 90 100\n\n\n                                      Instrumentation Overhead (%)\n\n\n   6/13/2024                                                                                    31\n---\n                Accelerated Accurate Simulator\n Circuit   Number        Comm: SPICE (ref)              Comi;Accelerated. SPICE                           Our method\n            of Gates    Simulation     Memory       Simulation      Memory      Accuracy      Simulation     Memory       Accuracy\n                         Time (s)        (MB)         Time (s)        (VB           0/0        Time (s)        (MB            0/0\n  C432        163        20412.69       927.24        2886.72        274.93      99.971          24.59          7.90       99.999\n  S298        240        23790.45       1082.26       3364.45        320.42      99.971          30.07          8.20       99.999\n  C880        383        14760.83       670.90        2087.52        199.81      99.971          11.82          6.07       99.999\n C1908       2092        172808.22      7904.09      24439.01       2326.92      98.150         286.46         32.00       99.999\nMicroctr:    50000      310320.00      14000.00      43887.00        4000.00     98.003         9092.40        49.00       99.999\n           Results 0n Simulation of Various benchmark circuits With Comm. SPICE. Accl: SPICE and 0u1' method\n                277 x over reference for the same accuracySpeedup in                                                 Comparison\n Accuracy                                                                                           COmT.using        of Weights\n     0/0)              Raw Convergence                      Convergence with seed value            Accl. Sim for     from Comm:\n                                                                                                     training        SPICE and\n                                                                                                                     Accl. SPICE\n              Comm: SPICE             Accl: Sim          Comm: SPICE             Accl. Sim\n  99.999    Samples      Time     Samples     Time     Samples      Time    Samples      Time     Raw     Seeded     Same Values\n                        (Iins)                (mins)               (Iins)               (Iins)\n              19055     953.50     19070      121.19      66        3.12       102       0.59     7.88x    5.9x\n   99.7        4120     210.00      4157      30.35       63        3.10        89       0.53     6.921    5.851    Same Values\n    98        2230      122.00      2283      18.01       55        3.02                 0.47     6.77x    6.431    Same Values\n    97        1775       69.00      1810      1451        43        156         57       0.38     4.76x    4.0x     Same Values\n                      Results On rate 0f convergence With Comm: SPICE. Accl: SPICE and 0uI' method\n---\n                                       Summary                              Works at any\nGoal : To develop an accurate                                               componentlevelScalable to\n                                                                 Negligible             any number\nmethod to measure the power                                        Area                    of\n                                                                                        components\nconsumption of components on-\nchip which is fine-grained, and                             Negligible        Unique          Accurate\n                                                             Power           Algorithm\nlow overhead.\nMethod : By observing a summary of internal circuit\nactivity along with our online solver and extract the best\nmodel for the device by accurate model collapsing\n\n\nResult : A Power measurement system that is :\n\u2022 Accurate\n\u2022 Fine granularity\n\u2022 Low overhead", "start_char_idx": 36733, "end_char_idx": 41109, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8eb6bec1-1e5d-4436-94ac-95a04f0ab48a": {"__data__": {"id_": "8eb6bec1-1e5d-4436-94ac-95a04f0ab48a", "embedding": null, "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6", "node_type": "4", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "92e14512f6cf48e7fcd98cef21b13ea233ed0156dcd882f61d03d88876893cc1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9236bc97-213e-463d-a8a4-402cf818ea54", "node_type": "1", "metadata": {}, "hash": "f7321a48566cfbaa9ea10acf00e92582eeabdeb059c88b7aaadb98e4ab01daab", "class_name": "RelatedNodeInfo"}}, "text": "Lecture 22: Large Language Model Part 1EE542\n                      Internet and Cloud Computer\n\n\n                                 Young Cho\n                  Department of Electrical Engineering\n                     University of Southern California\n\n\n                                       1              Based on LLM Slides from Steve Seitz with permission\n---\nFinal Project Progress Demos\n\n\n+ Due Every Mondays 11:59 PM in Nov\n+ Must Demonstrate Working System\n+ Incremental Functions Added with Corresponding Results\n+ System Must Work Every Demo\n+ Every Team Member Must Contribute in Describing the Demo\n\n\n                                           2\n---\nFinal Project Progress Presentations\n\n\n+ November 6, 8, 13+ Large Language Model and Word Embeddings\n+ November 15+ Final Regular Lecture (Mandatory Attendance)\n+ November 18, 20+ Submit Practice Presentation Slides (Blackboard on Nov 18 at 11:59PM)\n   + Go over the Practice Presentations (Mandatory Attendance)\n+ November 25, 27, 29+ Submit Final Project Progress Presentation Slides (Blackboard on Nov 25 at\n      11:59PM)\n   + Final Project Progress Presentation (Mandatory Attendance)\n   + 7 teams on 27th and 6 teams on 29th\n+ December 13+ Final Project Demo Presentation Video\n\n\n                                                   3\n---\nQ W EE RR T Y U I O P\n  A S D0 F G H J K LK\n\u21e7    2 X C V B N M\n     Z                    \u232b\n\n\n123 \u263a\ufe0e       space     return\n---\n t\n\n\nQ W E R T Y U I O P\n\n\n  A S D F G H J K L\n\n\n \u21e7    Z X C V B N M      \u232b\n\n\n123 \u263a\ufe0e         space  return\n---\n t\n\n\n    that         the   there\n\n\nQ W E R T Y U I O P\n\n\n  A S D F G H J K L\n\n\n \u21e7    Z X C V B N M          \u232b\n\n\n123 \u263a\ufe0e          space    return\n---\n t y\n\n\nQ W E R T Y U I O P\n\n\n  A S D F G H J K L\n\n\n \u21e7    Z X C V B N M      \u232b\n\n\n123 \u263a\ufe0e         space  return\n---\n t y                          tye\n                              type\n                              tycoon\nQ W E R T Y U I O P           typhoon\n  A S D F G H J K L           tympanic\n      Z X C V B N M      \u232b    typography\n\u21e7\n\n\n123 \u263a\ufe0e         space  return\n---\n        tye\n  1800tye2019       English (2019)   Case-Insensitive    Smoothing\n0.0000900%\n0.0000800%\n0.0000700%   1806\n0.0000600%\n0.0000500%\n0.0000400%\n0.0000300%\n0.0000200%                                                                                                         1 in 20,000,000\n0.0000100%                                                                                                                  0.0000052%tye\n0.Ooooooo%1800           1820       1840           1860          1880    1900           1920           1940  1960      1980           2000\n                                                                       (click on line/label for focus)                                      2019\n   Search in Google Books\n---\n t y                             0.0000052224%  tye\n\n\n                                 0.0148257168%  type\n\n\n                                0.0000374782%   tycoon\nQ W E R T Y U I O P             0.0000396270%   typhoon\n  A S D F G H J K L             0.0000606981%   tympanic\n\n\n                                0.0000397285%   typography\n\u21e7     Z X C V B N M         \u232b\n\n\n123 \u263a\ufe0e           space  return\n---\n t y                             0.0148257168%  type\n\n\n                                0.0000606981%   tympanic\n\n\n                                0.0000397285%   typography\nQ W E R T Y U I O P             0.0000396270%   typhoon\n  A S D F G H J K L             0.0000374782%   tycoon\n\n\n                                 0.0000052224%  tye\n\u21e7     Z X C V B N M         \u232b", "start_char_idx": 0, "end_char_idx": 3583, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9236bc97-213e-463d-a8a4-402cf818ea54": {"__data__": {"id_": "9236bc97-213e-463d-a8a4-402cf818ea54", "embedding": null, "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6", "node_type": "4", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "92e14512f6cf48e7fcd98cef21b13ea233ed0156dcd882f61d03d88876893cc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8eb6bec1-1e5d-4436-94ac-95a04f0ab48a", "node_type": "1", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "2279e7a215c69f533d07c338d83e674d9a9116265e6dd5093afcb56b844ec6c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f52eb13c-f694-45d1-b028-13fb23a73c4a", "node_type": "1", "metadata": {}, "hash": "343a7b25205ed698a77a132fe365fad1b94b46164aa3de6bff6563e523f811de", "class_name": "RelatedNodeInfo"}}, "text": "0.0000397285%   typography\n\u21e7     Z X C V B N M         \u232b\n\n\n123 \u263a\ufe0e           space  return\n---\n t y                             0.0148257168%  type\n\n\n                                0.0000606981%   tympanic\n\n\n                                0.0000397285%   typography\nQ W E R T Y U I O P             0.0000396270%   typhoon\n  A S D F G H J K L             0.0000374782%   tycoon\n\n\n                                 0.0000052224%  tye\n\u21e7     Z X C V B N M         \u232b\n\n\n123 \u263a\ufe0e           space  return\n---\nhow  \u2a09\n---\nhow                                \u2a09\nhow many ounces in a cup\nhow many ounces in a gallon\nhow long is the new minions movie\nhow long does covid last\nhow did elvis die\nhow long to boil eggs\nhow to tie a tie\n---\nShe just won the 2032 election\n---\n         100,000 words\n              IkD\n   Licnn\n6                                                          E\n                         The Oxford\n                         DictionaryEnglish\n                             SECOXD EOLTION\n                                 Baznul |\n                                 PEES\n      CC 2.0 Generic, Thomas Guest, Lexicographical order\n     https://www.flickr.com/photos/thomasguest/4099819327\n---\nword word word word word word word word word word .\n---\n100,000 100,000 100,000 100,000 100,000 100,000 100,000 100,000 100,000 100,000\n---\n1050\n---\nEarly one morning           the sun was shining            I was laying in bed\nWondering        if she had changed at all if her hair was still red\n---\nEarly one morning           the sun was shining            I was laying in bed\nWondering        if she had changed at all if her hair was still red\n---\nEarly one morning           the sun was shining            I was laying in bed\nWondering        if she had changed at all if her hair was still red\n---\n                                                    laying    in bed\n\n\n    Early one morning           the sun       was shining\n                                                         was\n                                                            was\n                                                               wasI\n\n\n                                 her hair            still red\n\n\nWondering        if she had changed at all if\n---\n                                                    laying    in bed\n\n\n    Early one morning            the sun       was    shining     I\n\n\n                                  her hair           still red\n\n\nWondering         if she had changed at all if\n---\n                                            laying    in bed\n\n\nEarly one morning       the sun      was     shining      I\n\n\n                        her hair             still red\n\n\n         Wondering  if\n                      if\n                        if\n                         she had changed at all\n---\n                                       .33laying     in bed\nEarly one morning      the sun      was shining.33     I\n                                       .33\n                       her hair            still red\n                    .5\n        Wondering   if.5she had changed at all\n\n\n                   Language Model\n---\nLanguage Models\n++++ A Probabilistic Model2,word3,\u2026,wordN] 1p[word  Assigns a probability in a sequence of words,word\nMay have understanding of grammar or NOT\n---\n                                          laying    in bed\n\n\nEarly one morning     the sun       was shining         I\n\n\n                      her hair             still red\n\n\n        Wondering  if\n                       she had changed at all\n---\nEarly\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was shining         I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nEarly one\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was shining         I\n\n\n                          her hair             still red\n\n\n            Wondering  if\n                           she had changed at all\n---\nEarly one morning\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was shining         I\n\n\n                          her hair             still red\n\n\n            Wondering  if\n                           she had changed at all\n---\nEarly one morning the\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was     shining     I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nEarly one morning the sun\n\n\n                                                  laying    in bed\n\n\n    Early one morning         the sun       was     shining     I\n\n\n                               her hair            still red\n\n\n             Wondering     if\n                                she had changed at all\n---\nEarly one morning the sun was\n\n\n                                                     laying    in bed\n\n\n    Early one morning            the sun       was     shining     I\n\n\n                                  her hair            still red", "start_char_idx": 3122, "end_char_idx": 8348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f52eb13c-f694-45d1-b028-13fb23a73c4a": {"__data__": {"id_": "f52eb13c-f694-45d1-b028-13fb23a73c4a", "embedding": null, "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6", "node_type": "4", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "92e14512f6cf48e7fcd98cef21b13ea233ed0156dcd882f61d03d88876893cc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9236bc97-213e-463d-a8a4-402cf818ea54", "node_type": "1", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "f3fc8b38df9b5bf7d2d74ebf217ede2809d7cb9d49fb98344ae924eec916ba55", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bef0ffd3-026a-473c-8857-1a1ee1d10038", "node_type": "1", "metadata": {}, "hash": "825ae6894a3d811209bdcb88a467c8397dce4440e8e4f4a5cc5035153e29ef07", "class_name": "RelatedNodeInfo"}}, "text": "her hair             still red\n\n\n            Wondering  if\n                           she had changed at all\n---\nEarly one morning\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was shining         I\n\n\n                          her hair             still red\n\n\n            Wondering  if\n                           she had changed at all\n---\nEarly one morning the\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was     shining     I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nEarly one morning the sun\n\n\n                                                  laying    in bed\n\n\n    Early one morning         the sun       was     shining     I\n\n\n                               her hair            still red\n\n\n             Wondering     if\n                                she had changed at all\n---\nEarly one morning the sun was\n\n\n                                                     laying    in bed\n\n\n    Early one morning            the sun       was     shining     I\n\n\n                                  her hair            still red\n\n\n            Wondering         if\n                                   she had changed at all\n---\nEarly one morning the sun was shining\n\n\n                                                      laying    in bed\n\n\n    Early one morning            the sun       was     shining      I\n\n\n                                  her hair             still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I\n\n\n                                                      laying    in bed\n\n\n    Early one morning             the sun       was     shining     I\n\n\n                                  her hair             still red\n\n\n             Wondering         if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was\n\n\n                                                      laying    in bed\n\n\n    Early one morning             the sun       was     shining     I\n\n\n                                  her hair             still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying\n\n\n                                                      laying    in bed\n\n\n    Early one morning             the sun       was     shining     I\n\n\n                                  her hair             still red\n\n\n             Wondering         if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in\n\n\n                                                     laying     in bed\n\n\n   Early one morning             the sun       was     shining      I\n\n\n                                  her hair            still red\n\n\n            Wondering         if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\n\n\n                                                      laying    in bed\n\n\n    Early one morning             the sun       was     shining     I\n\n\n                                  her hair             still red\n\n\n             Wondering         if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering\n\n\n                                                     laying    in bed\n\n\n    Early one morning            the sun       was     shining     I\n\n\n                                  her hair            still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if\n\n\n                                                      laying    in bed\n\n\n    Early one morning             the sun      was     shining      I\n\n\n                                  her hair             still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she\n\n\n                                                      laying    in bed\n\n\n    Early one morning             the sun       was     shining     I\n\n\n                                  her hair             still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had\n\n\n                                                      laying    in bed\n\n\n    Early one morning             the sun      was     shining      I\n\n\n                                  her hair             still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed\n\n\n                                                     laying     in bed\n\n\n    Early one morning            the sun       was     shining     I\n\n\n                                  her hair            still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed at\n\n\n                                                      laying    in bed\n\n\n    Early one morning            the sun       was     shining     I\n\n\n                                  her hair            still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed at all\n\n\n                                                      laying    in bed\n\n\n    Early one morning             the sun       was     shining     I\n\n\n                                  her hair             still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed at all if\n\n\n                                                     laying    in bed\n\n\n   Early one morning             the sun       was     shining     I\n\n\n                                 her hair             still red", "start_char_idx": 7099, "end_char_idx": 13612, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bef0ffd3-026a-473c-8857-1a1ee1d10038": {"__data__": {"id_": "bef0ffd3-026a-473c-8857-1a1ee1d10038", "embedding": null, "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6", "node_type": "4", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "92e14512f6cf48e7fcd98cef21b13ea233ed0156dcd882f61d03d88876893cc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f52eb13c-f694-45d1-b028-13fb23a73c4a", "node_type": "1", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "1f7a43636ca4baad161af44966acbbf726e45923b081109ff1ffd4dd17cbf830", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "345f03a5-ac3d-4ed7-8348-6a55ebb48eba", "node_type": "1", "metadata": {}, "hash": "440e50d0bd1d4a848bf082ea6aef2408b8b0fe74c2211147d0b1bdcde6eb7633", "class_name": "RelatedNodeInfo"}}, "text": "her hair            still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed at\n\n\n                                                      laying    in bed\n\n\n    Early one morning            the sun       was     shining     I\n\n\n                                  her hair            still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed at all\n\n\n                                                      laying    in bed\n\n\n    Early one morning             the sun       was     shining     I\n\n\n                                  her hair             still red\n\n\n             Wondering        if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed at all if\n\n\n                                                     laying    in bed\n\n\n   Early one morning             the sun       was     shining     I\n\n\n                                 her hair             still red\n\n\n            Wondering         if\n                                  she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed at all if her\n\n\n                                                     laying     in bed\n\n\n   Early one morning             the sun       was     shining     I\n\n\n                                  her hair            still red\n\n\n            Wondering         if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed at all if her hair\n\n\n                                                      laying    in bed\n\n\n   Early one morning             the sun       was     shining      I\n\n\n                                  her hair            still red\n\n\n            Wondering         if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was\n\n\n                                                     laying     in bed\n\n\n   Early one morning             the sun       was     shining     I\n\n\n                                  her hair            still red\n\n\n            Wondering         if\n                                   she had changed at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still\n\n\n                                                      laying     in bed\n\n\n   Early one morning             the sun        was     shining     I\n\n\n                                  her hair             still red\n\n\n            Wondering         if\n                                   she had changed             at all\n---\nEarly one morning the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n\n\n                                                      laying    in bed\n\n\n   Early one morning             the sun        was     shining     I\n\n\n                                  her hair             still red\n\n\n            Wondering         if\n                                   she had changed at all\n---\nthe\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was shining         I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe sun\n\n\n                                               laying    in bed\n\n\n    Early one morning      the sun       was     shining     I\n\n\n                            her hair            still red\n\n\n             Wondering  if\n                             she had changed at all\n---\nthe sun was\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was     shining     I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe sun was still\n\n\n                                              laying     in bed\n\n\n   Early one morning      the sun       was     shining      I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe sun was still red\n\n\n                                              laying     in bed\n\n\n   Early one morning      the sun       was     shining     I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe sun was still red\nher\n\n\n                                              laying     in bed\n\n\n   Early one morning      the sun       was     shining     I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe sun was still red\nher hair\n\n\n                                               laying    in bed\n\n\n   Early one morning      the sun       was     shining      I\n\n\n                           her hair             still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe sun was still red\nher hair was\n\n\n                                              laying     in bed\n\n\n   Early one morning      the sun       was     shining      I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe sun was still red\nher hair was shining\n\n\n                                               laying    in bed\n\n\n   Early one morning      the sun       was      shining     I\n\n\n                           her hair             still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was shining         I\n\n\n                           her hair            still red", "start_char_idx": 12380, "end_char_idx": 18661, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "345f03a5-ac3d-4ed7-8348-6a55ebb48eba": {"__data__": {"id_": "345f03a5-ac3d-4ed7-8348-6a55ebb48eba", "embedding": null, "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6", "node_type": "4", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "92e14512f6cf48e7fcd98cef21b13ea233ed0156dcd882f61d03d88876893cc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bef0ffd3-026a-473c-8857-1a1ee1d10038", "node_type": "1", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "dcb146259a5b4963627eb3b8af30c923a478f27c7f2969d867fc7cd5d70fd321", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51206c4d-a8e8-425f-ba42-900a98e5e038", "node_type": "1", "metadata": {}, "hash": "bc88a0d1e240ec9c3dd631f0358e70ecd2fdf8f84660601696b985f0449db900", "class_name": "RelatedNodeInfo"}}, "text": "Wondering  if\n                            she had changed at all\n---\nthe sun was still red\nher hair\n\n\n                                               laying    in bed\n\n\n   Early one morning      the sun       was     shining      I\n\n\n                           her hair             still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe sun was still red\nher hair was\n\n\n                                              laying     in bed\n\n\n   Early one morning      the sun       was     shining      I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe sun was still red\nher hair was shining\n\n\n                                               laying    in bed\n\n\n   Early one morning      the sun       was      shining     I\n\n\n                           her hair             still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was shining         I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe sun\n\n\n                                               laying    in bed\n\n\n    Early one morning      the sun       was     shining     I\n\n\n                            her hair            still red\n\n\n             Wondering  if\n                             she had changed at all\n---\nthe sun was\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was     shining     I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nthe sun was laying\n\n\n                                               laying    in bed\n\n\n    Early one morning      the sun       was     shining     I\n\n\n                            her hair            still red\n\n\n             Wondering  if\n                             she had changed at all\n---\nthe sun was laying in\n\n\n                                                laying    in bed\n\n\n    Early one morning      the sun       was     shining      I\n\n\n                            her hair             still red\n\n\n             Wondering  if\n                             she had changed at all\n---\nthe sun was laying in bed\n\n\n                                                  laying     in bed\n\n\n    Early one morning         the sun       was     shining     I\n\n\n                               her hair            still red\n\n\n             Wondering     if\n                                she had changed at all\n---\nI\n\n\n                                             laying    in bed\n\n\n   Early one morning     the sun       was     shining     I\n\n\n                          her hair            still red\n\n\n           Wondering  if\n                           she had changed at all\n---\nI was\n\n\n                                              laying    in bed\n\n\n    Early one morning     the sun       was shining         I\n\n\n                           her hair            still red\n\n\n            Wondering  if\n                            she had changed at all\n---\nI was shining\n\n\n                                                laying    in bed\n\n\n    Early one morning      the sun       was     shining     I\n\n\n                            her hair            still red\n\n\n             Wondering  if\n                             she had changed at all\n---\nI was shining I\n\n\n                                               laying    in bed\n\n\n    Early one morning      the sun       was     shining     I\n\n\n                           her hair             still red\n\n\n             Wondering  if\n                            she had changed at all\n---\nI was shining I was\n\n\n                                                laying    in bed\n\n\n    Early one morning       the sun      was      shining     I\n\n\n                            her hair             still red\n\n\n             Wondering  if\n                             she had changed at all\n---\nI was shining I was shining\n\n\n                                                    laying     in bed\n\n\n   Early one morning            the sun       was     shining     I\n\n\n                                 her hair            still red\n\n\n            Wondering        if\n                                  she had changed at all\n---\nI was shining I was shining I\n\n\n                                                      laying    in bed\n\n\n   Early one morning             the sun       was      shining     I\n\n\n                                  her hair             still red\n\n\n            Wondering         if\n                                   she had changed at all\n---\nI was shining I was shining I was\n\n\n                                                      laying    in bed\n\n\n   Early one morning             the sun       was     shining      I\n\n\n                                  her hair            still red\n\n\n            Wondering         if\n                                   she had changed at all\n---\nI was shining I was shining I was still\n\n\n                                                     laying    in bed\n\n\n    Early one morning             the sun       was   shining      I\n\n\n                                   her hair           still red\n\n\n            Wondering          if\n                                    she had changed           at all\n---\nI was shining I was shining I was still red\n\n\n                                                     laying    in bed\n\n\n    Early one morning             the sun       was   shining      I\n\n\n                                  her hair            still red\n\n\n            Wondering          if\n                                    she had changed           at all\n---\nshe was standing on the side of my mind      \u2026\n\n\nside of my shoes heading out of my face     \u2026\n\n\n  one of my chair said our lives together  \u2026\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n\n\nEarly one morning", "start_char_idx": 17471, "end_char_idx": 23677, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51206c4d-a8e8-425f-ba42-900a98e5e038": {"__data__": {"id_": "51206c4d-a8e8-425f-ba42-900a98e5e038", "embedding": null, "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6", "node_type": "4", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "92e14512f6cf48e7fcd98cef21b13ea233ed0156dcd882f61d03d88876893cc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "345f03a5-ac3d-4ed7-8348-6a55ebb48eba", "node_type": "1", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "f99d07d1e2bc7365103b0133816eba129c33409b3dcc43b11892e297ab76c16a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fd0c37e-3812-45c6-b34c-cd7e91fe2ba1", "node_type": "1", "metadata": {}, "hash": "5a249d5254562d19985b19e66b42e2bee7d18bf8db24099097bf3ca82452b0ff", "class_name": "RelatedNodeInfo"}}, "text": "her hair            still red\n\n\n            Wondering         if\n                                   she had changed at all\n---\nI was shining I was shining I was still\n\n\n                                                     laying    in bed\n\n\n    Early one morning             the sun       was   shining      I\n\n\n                                   her hair           still red\n\n\n            Wondering          if\n                                    she had changed           at all\n---\nI was shining I was shining I was still red\n\n\n                                                     laying    in bed\n\n\n    Early one morning             the sun       was   shining      I\n\n\n                                  her hair            still red\n\n\n            Wondering          if\n                                    she had changed           at all\n---\nshe was standing on the side of my mind      \u2026\n\n\nside of my shoes heading out of my face     \u2026\n\n\n  one of my chair said our lives together  \u2026\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n\n\nEarly one morning\n\n\n       trigrams\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n\n\nEarly one morning\none morning        the\n\n\n       trigrams\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n\n\nEarly one morning\none morning        the\nmorning      the sun\n\n\n       trigrams\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n\n\nEarly one morning\none morning        the\nmorning      the sun\nthe sun was\n\n\n      trigrams\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n\n\nEarly one morning\none morning        the\nmorning      the sun\nthe sun was\n\n\n      trigrams\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n\n\nEarly one morning\none morning        the\nmorning      the sun\nthe sun was\nsun was shining\nwas shining I\nshining I was\nI was laying\u2026\n       trigrams\n---\n\ud835\udc43(\ud835\udc65\ud835\udc5b|\ud835\udc65\ud835\udc5b\u22121, \ud835\udc65\ud835\udc5b\u22122)\n\n\n  Early one            morning\n  one morning          the\n  morning the          sun\n  the sun              was\n  sun was              shining\n  was shining          I\n  shining I            was\n  I was        \u2026       laying\n---\nwell meet again someday on the stove               \u2026\n\n\nstanding there in back of my shoe tangled             \u2026\n\n\ni was standing on the stove and offered me a pipe\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n---\n\ud835\udc43(\ud835\udc65\ud835\udc5b|\ud835\udc65\ud835\udc5b\u22121, \ud835\udc65\ud835\udc5b\u22122, \ud835\udc65\ud835\udc5b\u22123, \ud835\udc65\ud835\udc5b\u22124, \ud835\udc65\ud835\udc5b\u22125, \ud835\udc65\ud835\udc5b\u22126, \ud835\udc65\ud835\udc5b\u22127, \ud835\udc65\ud835\udc5b\u22128, \ud835\udc65\ud835\udc5b\u22129, \ud835\udc65\ud835\udc5b\u221210, \ud835\udc65\ud835\udc5b\u221211, \ud835\udc65\ud835\udc5b\u221212, \ud835\udc65\ud835\udc5b\u221213)\n                            1070combinations\n---\n                  Function Approximation\n                                              M\n Fourier Series:      \ud835\udc53(\ud835\udc65) =         +   +       +  + . . .\n\n\n  Taylor Series:      \ud835\udc53(\ud835\udc65) =         +  +       +   + . . .\n\n\nNeural Network:         \ud835\udc65                  \ud835\udc53(\ud835\udc65)\n---\n~2\n                          \ud835\udc652\n73        \ud835\udc60\ud835\udc56\ud835\udc5b(\ud835\udc65) \u2212 10\n   6  74                     2\n                                sigmoid\n---\n          \ud835\udc641       \ud835\udc645\n             \ud835\udc642  \ud835\udc646\n\ud835\udc65\n  \ud835\udc65\n    \ud835\udc65\n      \ud835\udc65     \ud835\udc643  \ud835\udc647    +  \ud835\udc66", "start_char_idx": 22536, "end_char_idx": 26268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fd0c37e-3812-45c6-b34c-cd7e91fe2ba1": {"__data__": {"id_": "5fd0c37e-3812-45c6-b34c-cd7e91fe2ba1", "embedding": null, "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6", "node_type": "4", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "92e14512f6cf48e7fcd98cef21b13ea233ed0156dcd882f61d03d88876893cc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51206c4d-a8e8-425f-ba42-900a98e5e038", "node_type": "1", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "65b44123674e2e8a9643bff6c7b2d5e8340d2439cf7976bc45115fb2f352553e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "090489f0-0d59-4b9d-9e67-b22785c06323", "node_type": "1", "metadata": {}, "hash": "803ee60fa0b1571bbdc3a80d449ed36089db1313ba24fd0bcdac80c6db982db0", "class_name": "RelatedNodeInfo"}}, "text": "Taylor Series:      \ud835\udc53(\ud835\udc65) =         +  +       +   + . . .\n\n\nNeural Network:         \ud835\udc65                  \ud835\udc53(\ud835\udc65)\n---\n~2\n                          \ud835\udc652\n73        \ud835\udc60\ud835\udc56\ud835\udc5b(\ud835\udc65) \u2212 10\n   6  74                     2\n                                sigmoid\n---\n          \ud835\udc641       \ud835\udc645\n             \ud835\udc642  \ud835\udc646\n\ud835\udc65\n  \ud835\udc65\n    \ud835\udc65\n      \ud835\udc65     \ud835\udc643  \ud835\udc647    +  \ud835\udc66\n\n\n          \ud835\udc644       \ud835\udc648\n---\n      \ud835\udc641       \ud835\udc645\n         \ud835\udc642  \ud835\udc646\n\ud835\udc65\n  \ud835\udc65\n    \ud835\udc65\n      \ud835\udc65 \ud835\udc643  \ud835\udc647    +  \ud835\udc66\n\n\n      \ud835\udc644       \ud835\udc648\n---\n~2\n-3\n 4         \ud835\udc641\ud835\udc652\ud835\udc65    \ud835\udc645\n  6  4  2\n              \ud835\udc64     \ud835\udc646\n              \ud835\udc643\ud835\udc65  \ud835\udc647     +  \ud835\udc66\n           \ud835\udc644\ud835\udc65        \ud835\udc648\n---\n                    \ud835\udc46(\ud835\udc65) =        1\n                              1 + \ud835\udc52\u2212\ud835\udc65   .5\n \ud835\udc46(\ud835\udc64\ud835\udc651)\n\n\n               \ud835\udc645                   -6  0    6\n \ud835\udc46(\ud835\udc64\ud835\udc652 ) \ud835\udc646\n            \ud835\udc647        +          \ud835\udc66\n\ud835\udc46(\ud835\udc64\ud835\udc65)3\n               \ud835\udc648\n\ud835\udc46(\ud835\udc64\ud835\udc654 )\n---\n                   \ud835\udc46(\ud835\udc65) =        1\n                             1 + \ud835\udc52\u2212\ud835\udc65   .5\n\ud835\udc46(\ud835\udc64\ud835\udc651 )\n\n\n              \ud835\udc645                   -6  0    6\n\ud835\udc46(\ud835\udc64\ud835\udc652 ) \ud835\udc646\n           \ud835\udc647        +          \ud835\udc66\n\ud835\udc46(\ud835\udc64\ud835\udc653 )\n              \ud835\udc648\n\ud835\udc46(4\ud835\udc64\ud835\udc65)\n---\n  \ud835\udc645\ud835\udc46(\ud835\udc64\ud835\udc651 )\n \ud835\udc646\ud835\udc46(\ud835\udc64\ud835\udc65+2 )  \ud835\udc66\n\ud835\udc647\ud835\udc46(\ud835\udc64\ud835\udc653 )\n \ud835\udc648\ud835\udc46(\ud835\udc64\ud835\udc654)\n---\n   \ud835\udc645\ud835\udc46(\ud835\udc64\ud835\udc65)1\n        +\n+  \ud835\udc646\ud835\udc46(2\ud835\udc64\ud835\udc65)\n        +\n   \ud835\udc647\ud835\udc46(\ud835\udc46+4)\ud835\udc64\ud835\udc653=\ud835\udc66\n   \ud835\udc648   (\ud835\udc64\ud835\udc65)\n---\n\ud835\udc66\n\n\n       \ud835\udc645\ud835\udc46(\ud835\udc64\ud835\udc651 )\n            +\n       \ud835\udc646\ud835\udc46(\ud835\udc64\ud835\udc652 )\n    +       +\n       \ud835\udc647\ud835\udc46(\ud835\udc64\ud835\udc653 )\n       \ud835\udc648\ud835\udc46+4(\ud835\udc64\ud835\udc65)\n---\n        \ud835\udc66\n\n\n\ud835\udc53(\ud835\udc65)         \ud835\udc645\ud835\udc46(\ud835\udc64\ud835\udc651 )\n                    +\n            +  \ud835\udc646\ud835\udc46(\ud835\udc64\ud835\udc652 )\n                    +\n               \ud835\udc647\ud835\udc46(\ud835\udc64\ud835\udc653 )\n               \ud835\udc648\ud835\udc46+4(\ud835\udc64\ud835\udc65)\n---\n~21     \ud835\udc38 = \u2211  (\ud835\udc53(\ud835\udc65)\u2212\ud835\udc66)2\n-3\n  6  4  2                        \ud835\udc645\ud835\udc46(\ud835\udc64\ud835\udc651 )\n                                      +\n                              +  \ud835\udc646\ud835\udc46(\ud835\udc64\ud835\udc652 )\n                                      +\n                                 \ud835\udc647\ud835\udc46(\ud835\udc64\ud835\udc653 )\n                                 \ud835\udc648\ud835\udc46+4(\ud835\udc64\ud835\udc65)\n---\n\ud835\udc38 = \u2211  (\ud835\udc53(\ud835\udc65)\u2212\ud835\udc66)2", "start_char_idx": 25947, "end_char_idx": 27637, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "090489f0-0d59-4b9d-9e67-b22785c06323": {"__data__": {"id_": "090489f0-0d59-4b9d-9e67-b22785c06323", "embedding": null, "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c7d10a11-6834-4c6a-a09a-4523c6206af6", "node_type": "4", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "92e14512f6cf48e7fcd98cef21b13ea233ed0156dcd882f61d03d88876893cc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fd0c37e-3812-45c6-b34c-cd7e91fe2ba1", "node_type": "1", "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}, "hash": "b3fa222d2e00c9b299db40bd9e9c5cdecc24c0cf4bef1300ef3d993cbe79e3b8", "class_name": "RelatedNodeInfo"}}, "text": "\ud835\udc64\u2032\ud835\udc64\u20321    \ud835\udc64\u20325      \ud835\udc645\ud835\udc46(\ud835\udc64\ud835\udc65)1\n                   2   \ud835\udc64\u20326             +\n                       \ud835\udc64\u2032      +  \ud835\udc646\ud835\udc46(\ud835\udc64\ud835\udc652 )\n                 \ud835\udc64\u20323    7         \ud835\udc647\ud835\udc46(\n                                         \ud835\udc46+4)+\ud835\udc64\ud835\udc653\n              \ud835\udc64\u20324        \ud835\udc64\u20328     \ud835\udc648  (\ud835\udc64\ud835\udc65)\n---\n\n\n---\n~1\n~2\n73\n           1\n    6  74\n---\n\ud835\udc43(\ud835\udc65\ud835\udc5b|\ud835\udc65\ud835\udc5b\u22121, \ud835\udc65\ud835\udc5b\u22122, \ud835\udc65\ud835\udc5b\u22123, \ud835\udc65\ud835\udc5b\u22124, \ud835\udc65\ud835\udc5b\u22125, \ud835\udc65\ud835\udc5b\u22126, \ud835\udc65\ud835\udc5b\u22127, \u2026 )\n---\n          \ud835\udc642  \ud835\udc646\n\ud835\udc65\n  \ud835\udc65\n    \ud835\udc65\n      \ud835\udc65  \ud835\udc643  \ud835\udc647  +  \ud835\udc66\n---\n 1\n~2\n73\n           1\n    6  ~4\n---\n\ud835\udc65  +  \ud835\udc66\n---\n    ReLU (rectified linear unit)\n\n\n\ud835\udc65    +           \ud835\udc66\n---\n~1\n~2\n73\n           1\n    6  ~4\n---\n\ud835\udc43(\ud835\udc65\ud835\udc5b|\ud835\udc65\ud835\udc5b\u22121, \ud835\udc65\ud835\udc5b\u22122, \ud835\udc65\ud835\udc5b\u22123, \ud835\udc65\ud835\udc5b\u22124, \ud835\udc65\ud835\udc5b\u22125, \ud835\udc65\ud835\udc5b\u22126, \ud835\udc65\ud835\udc5b\u22127, \u2026 )\n---\n          \ud835\udc641       \ud835\udc645\n             \ud835\udc642  \ud835\udc646\n\ud835\udc65\n  \ud835\udc65\n    \ud835\udc65\n      \ud835\udc65     \ud835\udc643  \ud835\udc647    +  \ud835\udc66\n\n\n          \ud835\udc644       \ud835\udc648\n---\n\n\n---\n\ud835\udc43(\ud835\udc65\ud835\udc5b|\ud835\udc65\ud835\udc5b\u22121, \ud835\udc65\ud835\udc5b\u22122, \ud835\udc65\ud835\udc5b\u22123, \ud835\udc65\ud835\udc5b\u22124, \ud835\udc65\ud835\udc5b\u22125, \ud835\udc65\ud835\udc5b\u22126, \ud835\udc65\ud835\udc5b\u22127, \u2026 )", "start_char_idx": 27657, "end_char_idx": 28418, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41af11bf-35e2-4ff9-959b-2f2f347bd409": {"__data__": {"id_": "41af11bf-35e2-4ff9-959b-2f2f347bd409", "embedding": null, "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f4b48116-024a-48fb-90fd-24e11eca5d55", "node_type": "4", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "b67cb0ffad42d8b985c121dca8d9d3a2e5ce5c7483ce37e9fa6d6cd3165b9d8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7201b607-d8f2-40cd-9744-b73685ed153f", "node_type": "1", "metadata": {}, "hash": "43d8abec12932d4363c5ff4f8ab7138f60df1bc84bf6bccbe147f57fc573d0ae", "class_name": "RelatedNodeInfo"}}, "text": "EE542\nLecture 23:                                                               Young Cho\nEmbeddings                                                Department of Electrical\nLLM Part 2                                                               Engineering\n\n\n                                                            University of Southern\n                                                                           California\n\n\n             Lecture slides for MA 59800 taught by Prof. Buzzard at Purdue integrated with permission  1\n---\n       0  a\n       1  able\n       2  about\n     39   apex\n\n\n56,356    zenith\n\n\n92,487    zygote\n---\n         a                      about\n\n\n  able                   apex\n                           zenith\n\n\n           zygote\n\n\nWord Embedding (e.g., word2Vec, GloVe)\n---\nWord embeddings\n\n\n                 Text processing with current Machine Learning\n                 requires encoding into vectors.\n\n\n                                                                N words encoded by length N vectors.\n                                                                A word gets a vector with exactly one\n                 One-hot encoding:                              entry = 1, others 0.\n                                                                Very space inefficient, no natural language\n                                                                structure.\n\n\n                                                                Collection of words (along with number of\n                                                                occurences).\n                 Bag of words:                                  No word order, no natural language\n                                                                structure.\n---\nSimilarity\n                                               000\n                                                   20   15\n                          few                          10     30                                    minister\n                                            five                    half                        leader\n                                                   six                                    president\n                                    twothree four                               head\n                                                                          chief                 chairmanspokesman\n                             several                                                       director\n            some     many              other                                    executivetrader       analyst\n           thosetheseall\n                            both\n    http://colah.github.io/posts/2014-07-NLP-RNNs-Representations/\n---\nWord embeddings: relationships\n\n\n      \u2022 Hope to preserve some language structure\n         (relationships between words).\n                     Relationship              Example               Example 2            Example 3\n                     France   Paris           Italy: Rome          Japan:Tokyo       Florida: Tallahassee\n                      big - bigger            small: larger         cold: colder       quick: quicker\n                    Miami   Florida       Baltimore: Maryland      Dallas: Texas        Kona: Hawaii\n                   Einstein  scientist     Messi: midfielder      Mozart: violinist    Picasso: painter\n                   Sarkozy   France         Berlusconi: Italy     Merkel: Germany      Koizumi: Japan\n                      copper   Cu               zinc: Zn              gold:Au        uranium: plutonium\n                   Berlusconi  Silvio      Sarkozy: Nicolas       Putin: Medvedev      Obama: Barack\n                 Microsoft   Windows        Google: Android         IBM: Linux          Apple: iPhone\n                  Microsoft -Ballmer         Google: Yahoo         IBM: McNealy          Apple: Jobs\n                     Japan   sushi        Germany: bratwurst        France: tapas        USA: pizza\n      http://colah.github.io/posts/2014-07-NLP-RNNs-Representations/\n---\nWord embeddings\n\n\n Need to have a function W(word) that returns a\n vector encoding that word.\n\n\n Similarity of words corresponds to nearby vectors.\n\n\n Relationships between words correspond to\n difference between vectors.\n---\nProperties\n\n\n    \u2022 Relationships between words correspond to\n       difference between vectors.WOMAN                   AUNT\n                                 MAN\n                                           UNCLE\n                                                   QUEEN\n                                       KING\n               W(   woman \") - W(**man \")          W(*aunt\")      W(**uncle \")\n               W(**woman \") _ W(**man             W(\" queen \") _ W(\" *king\n    http://colah.github.io/posts/2014-07-NLP-RNNs-Representations/\n---\nDetermining Parameters\n\n\n  How big should the     How do we find W?\n embedding space be?\n\u2022 Trade-offs like any   \u2022 Often as part of a\n   other machine          prediction or\n   learning problem \u2013     classification task\n   greater capacity       involving\n   versus efficiency      neighboring words.\n   and overfitting.\n---\n    Learning word embeddings\n\n\n\u2022 First attempt: Bottou, \u201cFrom Machine Learning to\n  Machine Reasoning,\u201d 2011.\n    \u2022 Input data is sets of 5 words from a meaningful\n       sentence. E.g., \u201cone of the best places\u201d.\n    \u2022 Modify half of them by replacing middle word with a\n       random word. \u201cone of function best places\u201d\n    \u2022 W is a map (depending on parameters, Q) from words to\n       50 dim\u2019l vectors. E.g., a look-up table or an RNN.\n    \u2022 Feed 5 embeddings into a module R to determine \u2018valid\u2019\n    \u2022 Optimize over Q to predict betteror \u2018invalid\u2019    18\"\n                                                       28\n                                                        8       R\nhttp://colah.github.io/posts/2014-07-NLP-RNNs-Representations/\n---\n      Newer: Mikolov, Word2vec, 2013", "start_char_idx": 0, "end_char_idx": 5937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7201b607-d8f2-40cd-9744-b73685ed153f": {"__data__": {"id_": "7201b607-d8f2-40cd-9744-b73685ed153f", "embedding": null, "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f4b48116-024a-48fb-90fd-24e11eca5d55", "node_type": "4", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "b67cb0ffad42d8b985c121dca8d9d3a2e5ce5c7483ce37e9fa6d6cd3165b9d8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41af11bf-35e2-4ff9-959b-2f2f347bd409", "node_type": "1", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "7292fbc10bff706ba046c1498c90c5c97aad675320345b3cdcb615ebaf550116", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f95e5afb-75d6-4f39-81f0-b6a5b335ec01", "node_type": "1", "metadata": {}, "hash": "1edad027ae4884aa00dd1f59dd1a692a9004822e807eae2af9e419ab7cc8b3b2", "class_name": "RelatedNodeInfo"}}, "text": "\u2022 First attempt: Bottou, \u201cFrom Machine Learning to\n  Machine Reasoning,\u201d 2011.\n    \u2022 Input data is sets of 5 words from a meaningful\n       sentence. E.g., \u201cone of the best places\u201d.\n    \u2022 Modify half of them by replacing middle word with a\n       random word. \u201cone of function best places\u201d\n    \u2022 W is a map (depending on parameters, Q) from words to\n       50 dim\u2019l vectors. E.g., a look-up table or an RNN.\n    \u2022 Feed 5 embeddings into a module R to determine \u2018valid\u2019\n    \u2022 Optimize over Q to predict betteror \u2018invalid\u2019    18\"\n                                                       28\n                                                        8       R\nhttp://colah.github.io/posts/2014-07-NLP-RNNs-Representations/\n---\n      Newer: Mikolov, Word2vec, 2013\n\n\n            \u2022 Predict words using context\n            \u2022 Continuous Bag of Words and Skip-gram\n                           INPUT  PROJECTION  ouipPuT    INPUT  PROJECTION OUIPUT\n                       W(-21                                                   7(-2)\n                       w(-1)                                                    wt1)\n                                     SuM\n                                                       Mt)\n                       W(t 1                                                    #0+1)\n                                                                                70-21\n                                   CBOW                        Skip-gram\nhttps://skymind.ai/wiki/word2vec\n---\n                                               INPUT  PROJECTION  OUTPUT\nContinuous Bag\nof Words                                W(-21\n                                        W(-1)\n\u2022 Bag of words (BOW)                                        SUM\n      \u2022 Gets rid of word order. Used\n         in discrete case using counts\n         of words that appear.\n\u2022 Continuous BOW                         w(t+1)\n      \u2022 Takes vector embeddings of\n         n words before target and n\n         words after and adds them\n         (as vectors).                  W( 21\n      \u2022 Also removes word order,\n         but the vector sum is\n         meaningful enough to                           CBOW\n         deduce missing word.\n---\nContinuous Bag of Word\n\n\n\u2022 E.g. \u201cThe cat sat on floor\u201d\n     \u2022 Window size = 2               INPUT    PROJECTION   OUTPUT\n                        the      w(t-2)\n                                 w(t-1)\n                        cat                      SUM\n                                                                 w(t)\n                                                                       sat\n                                 w(t+1)\n                        on\n                                 w(t+2)\n                        floor\n\n\n                                                                            14\nwww.cs.ucr.edu/~vagelis/classes/CS242/slides/word2vec.pptx\n---\n                              Input layer\n\n\n                                     0\nIndex of cat in vocabulary           1\n                                     0\n                                     0\n                             cat     0                               Hidden layer  Output layer\n                                     0\n                                     0                                                     0\n                                     0                                                     0\n                                     \u2026                                                     0\n                                     0                                                     0\n   one-hot                                                                                 0           one-hot\n                                                                                           0     sat\n   vector                            0                                                     0           vector\n                                     0                                                     1\n                                     0                                                     \u2026\n                                     1                                                     0\n                             on      0\n                                     0\n                                     0\n                                     0\n                                     \u2026\n                                     0\n\n\n                                                                                                      15\n         www.cs.ucr.edu/~vagelis/classes/CS242/slides/word2vec.pptx\n---\n                                                         We must learn W and W\u2019\n\n\n                Input layer\n\n\n                      0\n                      1\n                      0\n                      0\n               cat    0                                         Hidden layer                    Output layer\n                      0        \ud835\udc4a\ud835\udc49\u00d7\ud835\udc41\n                      0                                                                                0\n                      0                                                                                0\n                      \u2026                                                                                0\n          V-dim       0                                                                                0\n                                                                                      \ud835\udc4a\u2032\ud835\udc41\u00d7\ud835\udc49         0\n                                                                                                       0       sat\n                      0                                                                                0\n                      0                                                                                1\n                      0                                                                                \u2026\n                      1        \ud835\udc4a\ud835\udc49\u00d7\ud835\udc41                             N-dim                               0     V-dim\n               on     0\n                      0\n                      0\n                      0\n                      \u2026", "start_char_idx": 5182, "end_char_idx": 11316, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f95e5afb-75d6-4f39-81f0-b6a5b335ec01": {"__data__": {"id_": "f95e5afb-75d6-4f39-81f0-b6a5b335ec01", "embedding": null, "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f4b48116-024a-48fb-90fd-24e11eca5d55", "node_type": "4", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "b67cb0ffad42d8b985c121dca8d9d3a2e5ce5c7483ce37e9fa6d6cd3165b9d8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7201b607-d8f2-40cd-9744-b73685ed153f", "node_type": "1", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "d0de140c26d980454307135eb7530ff547176fbfb46b83de608c02b2c525c1c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eec18e39-0f18-4777-bae8-a88026c034d8", "node_type": "1", "metadata": {}, "hash": "14c8991d44467124229820e3430833b097e8f1bc663847da7de0eb576529843b", "class_name": "RelatedNodeInfo"}}, "text": "Input layer\n\n\n                      0\n                      1\n                      0\n                      0\n               cat    0                                         Hidden layer                    Output layer\n                      0        \ud835\udc4a\ud835\udc49\u00d7\ud835\udc41\n                      0                                                                                0\n                      0                                                                                0\n                      \u2026                                                                                0\n          V-dim       0                                                                                0\n                                                                                      \ud835\udc4a\u2032\ud835\udc41\u00d7\ud835\udc49         0\n                                                                                                       0       sat\n                      0                                                                                0\n                      0                                                                                1\n                      0                                                                                \u2026\n                      1        \ud835\udc4a\ud835\udc49\u00d7\ud835\udc41                             N-dim                               0     V-dim\n               on     0\n                      0\n                      0\n                      0\n                      \u2026\n\n\n          V-dim       0                            N will be the size of word vector\n                                                                                                                    16\nwww.cs.ucr.edu/~vagelis/classes/CS242/slides/word2vec.pptx\n---\n                                       0.1 2.4 1.6 1.8 0.5 0.9 \ud835\udc4a\ud835\udc47\u00d7\ud835\udc41\u2026\ud835\udc49   \u2026    \u2026 3.2    \u00d7 \ud835\udc65\ud835\udc50\ud835\udc4e\ud835\udc61 = \ud835\udc63\ud835\udc50\ud835\udc4e\ud835\udc610  2.4\n                  Input layer                                                                      1\n                                       0.5 2.6 1.4 2.9 1.5 3.6 \u2026            \u2026    \u2026 6.1             0              2.6\n                         0              \u2026    \u2026    \u2026    \u2026    \u2026    \u2026     \u2026    \u2026    \u2026    \u2026      \u00d7     0      =       \u2026\n                         1              \u2026    \u2026    \u2026    \u2026    \u2026    \u2026     \u2026    \u2026    \u2026    \u2026            0              \u2026\n                         0                                                                         0\n                         0             0.6 1.8 2.7 1.9 2.4 2.0 \u2026            \u2026    \u2026 1.2             0              1.8\n                 xcat    0                                                                         0                   Output layer\n                         0                                                                         \u2026\n                         0                                                                         0                           0\n                         0                                                                                                     0\n                         \u2026                                                                                                     0\n            V-dim        0                                                                                                     0\n                                                                     +             \ud835\udc63\u0ddc = \ud835\udc63\ud835\udc50\ud835\udc4e\ud835\udc61 2+ \ud835\udc63\ud835\udc5c\ud835\udc5b                    0\n                                                                                                                               0       sat\n                         0                                                                                                     0\n                         0                                                                                                     1\n                         0                                                                                                     \u2026\n                         1                                                                                                     0     V-dim\n                         0                                              Hidden layer\n                 xon     0\n                         0                                                  N-dim\n                         0\n                         \u2026", "start_char_idx": 9878, "end_char_idx": 14144, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eec18e39-0f18-4777-bae8-a88026c034d8": {"__data__": {"id_": "eec18e39-0f18-4777-bae8-a88026c034d8", "embedding": null, "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f4b48116-024a-48fb-90fd-24e11eca5d55", "node_type": "4", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "b67cb0ffad42d8b985c121dca8d9d3a2e5ce5c7483ce37e9fa6d6cd3165b9d8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f95e5afb-75d6-4f39-81f0-b6a5b335ec01", "node_type": "1", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "a7654fa7532adb90f5e100b15b430df88be6f34fc3f7a801f11e66d3ed6afb9f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f0638d8-7b70-4169-8bc4-13c1fca5333b", "node_type": "1", "metadata": {}, "hash": "1e32f478df53362acedb571ad1b0117e46de95b0f2aca909c8ad9e62fd305c53", "class_name": "RelatedNodeInfo"}}, "text": "V-dim        0\n                                                                                                                                            17\nwww.cs.ucr.edu/~vagelis/classes/CS242/slides/word2vec.pptx\n---\n                                       0.1 2.4 1.6 1.8 0.5 0.9 \ud835\udc4a\ud835\udc47\u00d7\ud835\udc41\u2026\ud835\udc49  \u2026    \u2026 3.2    \u00d7 \ud835\udc65\ud835\udc5c\ud835\udc5b = \ud835\udc63\ud835\udc5c\ud835\udc5b0  1.8\n                  Input layer                                                                      0\n                                       0.5 2.6 1.4 2.9 1.5 3.6 \u2026           \u2026    \u2026 6.1              0         2.9\n                         0              \u2026    \u2026    \u2026    \u2026    \u2026    \u2026    \u2026    \u2026    \u2026    \u2026      \u00d7      1      =  \u2026\n                         1              \u2026    \u2026    \u2026    \u2026    \u2026    \u2026    \u2026    \u2026    \u2026    \u2026             0         \u2026\n                         0                                                                         0\n                         0             0.6 1.8 2.7 1.9 2.4 2.0 \u2026           \u2026    \u2026 1.2              0         1.9\n                 xcat    0                                                                         0              Output layer\n                         0                                                                        \u2026\n                         0                                                                         0                      0\n                         0                                                                                                0\n                         \u2026                                                                                                0\n            V-dim        0                                                                                                0\n                                                                    +             \ud835\udc63\u0ddc = \ud835\udc63\ud835\udc50\ud835\udc4e\ud835\udc61 2+ \ud835\udc63\ud835\udc5c\ud835\udc5b                0\n                                                                                                                          0       sat\n                         0                                                                                                0\n                         0                                                                                                1\n                         0                                                                                                \u2026\n                         1                                                                                                0     V-dim\n                         0                                              Hidden layer\n                 xon     0\n                         0                                                 N-dim\n                         0\n                         \u2026\n\n\n            V-dim        0\n                                                                                                                                       18\nwww.cs.ucr.edu/~vagelis/classes/CS242/slides/word2vec.pptx\n---\n        Input layer\n\n\n              0\n              1\n              0\n              0\n       cat    0                                        Hidden layer                           Output layer\n              0       \ud835\udc4a\ud835\udc49\u00d7\ud835\udc41\n              0                                                                                         0\n              0                                                                                         0\n              \u2026                                                                                         0\n  V-dim       0                                                                                         0\n                                                                        \ud835\udc4a\u2032\u00d7\ud835\udc41\ud835\udc49  \u00d7 \u0ddc = \ud835\udc67\ud835\udc63            0\n                                                                                                        0   \ud835\udc66\u0ddc = \ud835\udc60\ud835\udc5c\ud835\udc53\ud835\udc61\ud835\udc5a\ud835\udc4e\ud835\udc65(\ud835\udc67)\n              0                                                                                         0\n              0                                                                                         1\n              0                                              \ud835\udc63\u0ddc                                        \u2026\n              1                                                                                         0\n       on     0        \ud835\udc4a\ud835\udc49\u00d7\ud835\udc41                            N-dim\n              0                                                                                        \ud835\udc66\u0ddcsat\n              0\n              0                                                                                       V-dim\n              \u2026\n\n\n  V-dim       0                           N will be the size of word vector\n                                                                                                                                     19\nwww.cs.ucr.edu/~vagelis/classes/CS242/slides/word2vec.pptx\n---\n                 Input layer", "start_char_idx": 14159, "end_char_idx": 18996, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f0638d8-7b70-4169-8bc4-13c1fca5333b": {"__data__": {"id_": "0f0638d8-7b70-4169-8bc4-13c1fca5333b", "embedding": null, "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f4b48116-024a-48fb-90fd-24e11eca5d55", "node_type": "4", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "b67cb0ffad42d8b985c121dca8d9d3a2e5ce5c7483ce37e9fa6d6cd3165b9d8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eec18e39-0f18-4777-bae8-a88026c034d8", "node_type": "1", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "33d5270148fa05d50c1cc5541e28cb519f064135e12e8e5bc39610b3b00c86b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "07028e47-df1c-441b-9dfc-1fa68c5c3241", "node_type": "1", "metadata": {}, "hash": "7b90886f213ec10fad0bb0c9b82b361ae2a2a8172e09c3b9f06d95abebd6ef9b", "class_name": "RelatedNodeInfo"}}, "text": "V-dim       0                           N will be the size of word vector\n                                                                                                                                     19\nwww.cs.ucr.edu/~vagelis/classes/CS242/slides/word2vec.pptx\n---\n                 Input layer\n\n\n                       0\n                       1                                                                                         We would prefer \u0ddc close to \u0ddc\ud835\udc60\ud835\udc4e\ud835\udc61\ud835\udc66 \ud835\udc66\n                       0\n                       0\n                cat    0                                           Hidden layer                                  Output layer\n                       0        \ud835\udc4a\ud835\udc49\u00d7\ud835\udc41\n                       0                                                                                                 0                   0.01\n                       0                                                                                                 0\n                       \u2026                                                                                                 0                   0.02\n           V-dim       0                                                                                                 0                   0.00\n                                                                                       \ud835\udc4a\u2032\u00d7\ud835\udc41\ud835\udc49      \u00d7 \u0ddc = \ud835\udc67\ud835\udc63          0\n                                                                                                                         0                   0.02\n                       0                                                            \ud835\udc66\u0ddc = \ud835\udc60\ud835\udc5c\ud835\udc53\ud835\udc61\ud835\udc5a\ud835\udc4e\ud835\udc65(\ud835\udc67)             0                   0.01\n                       0                                                                                                 1                   0.02\n                       0                                                 \ud835\udc63\u0ddc                                             \u2026\n                                                                                                                         0                   0.01\n                       1         \ud835\udc4a\ud835\udc49\u00d7\ud835\udc41\n                       0                                              N-dim                                                                   0.7\n                on     0                                                                                                \ud835\udc66\u0ddcsat                \u2026\n                       0\n                       0                                                                                              V-dim                  0.00\n                       \u2026\n\n\n           V-dim       0                             N will be the size of word vector                                                        \ud835\udc66\u0ddc\n                                                                                                                                               20\nwww.cs.ucr.edu/~vagelis/classes/CS242/slides/word2vec.pptx\n---\n                                          0.1 2.4 1.6 1.8 0.5 0.9 \ud835\udc4a\ud835\udc47\u00d7\ud835\udc41\u2026\ud835\udc49      \u2026    \u2026 3.2\n                   Input layer                                                                  Contain word\u2019s vectors\n                                          0.5 2.6 1.4 2.9 1.5 3.6 \u2026               \u2026    \u2026 6.1\n\n\n                           0               \u2026    \u2026     \u2026    \u2026     \u2026     \u2026    \u2026     \u2026    \u2026     \u2026\n                           1               \u2026    \u2026     \u2026    \u2026     \u2026     \u2026    \u2026     \u2026    \u2026     \u2026\n                           0\n                           0              0.6 1.8 2.7 1.9 2.4 2.0 \u2026               \u2026    \u2026 1.2\n                  xcat     0                                                                                          Output layer\n                           0\n                           0                                                                                                   0\n                          \u20260     \ud835\udc4a\ud835\udc49\u00d7\ud835\udc41                                                                                       0\n                                                                                                                               0\n             V-dim         0                                                                                                   0\n                                                                                                 \ud835\udc4a\u2032\u00d7\ud835\udc41\ud835\udc49                      0\n                                                                                                                               0      sat\n                           0                                                                                                   0\n                           0                                                                                                   1\n                           0                                                                                                   \u2026\n                           1\n                           0       \ud835\udc4a\ud835\udc49\u00d7\ud835\udc41                                                                                     0    V-dim\n                  xon                                                         Hidden layer\n                           0\n                           0                                                      N-dim\n                           0\n                          \u2026", "start_char_idx": 18695, "end_char_idx": 24007, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "07028e47-df1c-441b-9dfc-1fa68c5c3241": {"__data__": {"id_": "07028e47-df1c-441b-9dfc-1fa68c5c3241", "embedding": null, "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f4b48116-024a-48fb-90fd-24e11eca5d55", "node_type": "4", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "b67cb0ffad42d8b985c121dca8d9d3a2e5ce5c7483ce37e9fa6d6cd3165b9d8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f0638d8-7b70-4169-8bc4-13c1fca5333b", "node_type": "1", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "aa7810de92d2728833d25fe61567b079c18d2a87b10c0a4dd1e6541c711f1b00", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20ef701d-5f1c-48fc-9af4-f77a2454a146", "node_type": "1", "metadata": {}, "hash": "2ded7c29efa73ff213fdfcbf2987cc8d5dec54e572cb7f4a199094ec888d6ccd", "class_name": "RelatedNodeInfo"}}, "text": "V-dim         0\n                   We can consider either W or W\u2019 as the word\u2019s representation. Or\n                   even take the average.                                                                                                  21\nwww.cs.ucr.edu/~vagelis/classes/CS242/slides/word2vec.pptx\n---\nSome interesting resultsWord Analogies\n      Test for linear relationships, examined by Mikolov et al. (2014)\n                a:b c:?                            =arg max(Wb     Wa +Wc)TWx\n                                                               Ilwb  Wa + Wcll\n         manwoman        king:?\n         king         [0.30 0.70 ]         0.75           king        queen\n         man          [0.20 0.20 ]\n                      [0.60 0.30 ]          0.5\n         woman                                                      woman\n                                           0.25        man\n         queen        [0.70 0.80 ]\n                                                      0.25    0.5    0.75\n                                                                                22\nwww.cs.ucr.edu/~vagelis/classes/CS242/slides/word2vec.pptx\n---\nWord analogiesChinas                                                  ~Beijing\n       1.5                       Russia<\n                                 Japan                                      Moscow\n                                 Turkey:                             Ankara     Tokyo\n       0.5\n                           Poland\n                       Germany -\n                      France                                          Warsaw\n                                                                         Berlin\n      -0.5       Italy:                                                Paris\n                         Greece                                       Athens\n               Spain-                                              Rome\n      -15    Portugal                                               xMadrid\n                                                                 Lisbon\n        222           -1.5                     -0.5         0.5                1.5\n                                                                                       23\nwww.cs.ucr.edu/~vagelis/classes/CS242/slides/word2vec.pptx\n---\n                                       INPUT    PROJECTION  OUTPUT\nSkip gram                                                           #(t-2)\n                                                                    M-T)\n\u2022 Skip gram \u2013 alternative to CBOW\n      \u2022 Start with a single word\n         embedding and try to                                       #01)\n         predict the surrounding\n         words.\n      \u2022 Much less well-defined                                      #(+2)\n         problem, but works better in\n         practice (scales better).\n                                              Skip-gram\n---\nSkip gram\n\n\n   \u2022 Map from center word to probability on\n     surrounding words. One input/output unit below.\n        \u2022 There is no activation function on the hidden layer\n          neurons, but the output neurons use softmax.\n\n\n   http://mccormickml.com/2016/04/19/word2vec-tutorial-the-skip-gram-model/\n---\nSkip gram example\n\n\n      \u2022 Vocabulary of 10,000 words.\n      \u2022 Embedding vectors with 300 features.\n      \u2022 So the hidden layer is going to be represented by a\n        weight matrix with 10,000 rows (multiply by vector\n        on the left).\n                       10 12  19\nhttp://mccormickml.com/2016/04/19/word2vec-tutorial-the-skip-gram-model/\n---\nSkip gram/CBOW intuition\n\n\n\u2022 Similar \u201ccontexts\u201d (that is, what words are likely to\n   appear around them), lead to similar embeddings\n   for two words.\n\u2022 One way for the network to output similar context\n   predictions for these two words is if the word\n   vectors are similar. So, if two words have similar\n   contexts, then the network is motivated to learn\n   similar word vectors for these two words!\n\n\nhttp://mccormickml.com/2016/04/19/word2vec-tutorial-the-skip-gram-model/\n---\nWord2vec shortcomings\n\n\n Problem: 10,000 words and 300 dim\n embedding gives a large parameter space to\n learn. And 10K words is minimal for real\n applications.\n\n\n Slow to train, and need lots of data,\n particularly to learn uncommon words.\n---\nWord2vec improvements:\nword pairs and phrases\n\n\nConcept: Treat common word pairs or phrases as single \u201cwords.\u201d E.g.,\nBoston Globe (newspaper) is different from Boston and Globe separately.\nEmbed Boston Globe as a single word/phrase.\n\n\nMethod: make phrases out of words which occur together often relative\nto the number of individual occurrences. Prefer phrases made of\ninfrequent words in order to avoid making phrases out of common words\nlike \u201cand the\u201d or \u201cthis is\u201d.\n\n\nPros/cons: Increases vocabulary size but decreases training expense.\n---\nWord2vec improvements:\nsubsample frequent words\n\n\n Concept: Subsample frequent words to decrease\n the number of training examples.\n\n\n Method: For each word, cut the word with\n probability related to the word\u2019s frequency.", "start_char_idx": 24023, "end_char_idx": 29069, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20ef701d-5f1c-48fc-9af4-f77a2454a146": {"__data__": {"id_": "20ef701d-5f1c-48fc-9af4-f77a2454a146", "embedding": null, "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f4b48116-024a-48fb-90fd-24e11eca5d55", "node_type": "4", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "b67cb0ffad42d8b985c121dca8d9d3a2e5ce5c7483ce37e9fa6d6cd3165b9d8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "07028e47-df1c-441b-9dfc-1fa68c5c3241", "node_type": "1", "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}, "hash": "2c1a0a64714c7fba2b611d6d496b2b7a0574a9c736062f1e651c86778588a4f0", "class_name": "RelatedNodeInfo"}}, "text": "Slow to train, and need lots of data,\n particularly to learn uncommon words.\n---\nWord2vec improvements:\nword pairs and phrases\n\n\nConcept: Treat common word pairs or phrases as single \u201cwords.\u201d E.g.,\nBoston Globe (newspaper) is different from Boston and Globe separately.\nEmbed Boston Globe as a single word/phrase.\n\n\nMethod: make phrases out of words which occur together often relative\nto the number of individual occurrences. Prefer phrases made of\ninfrequent words in order to avoid making phrases out of common words\nlike \u201cand the\u201d or \u201cthis is\u201d.\n\n\nPros/cons: Increases vocabulary size but decreases training expense.\n---\nWord2vec improvements:\nsubsample frequent words\n\n\n Concept: Subsample frequent words to decrease\n the number of training examples.\n\n\n Method: For each word, cut the word with\n probability related to the word\u2019s frequency.\n\n\n Benefits: If we have a window size of 10, and we\n remove a specific instance of \u201cthe\u201d from our text:\n---\nWord2vec improvements: selective\nupdates\n\n\n Concept: Use \u201cNegative Sampling\u201d, which causes each training sample to\n update only a small percentage of the model\u2019s weights.\n\n\n Observation: A \u201ccorrect output\u201d of the network is a one-hot vector. That\n is, one neuron should output a 1, and all of the other thousands of\n output neurons to output a 0.\n\n\n Method: With negative sampling, randomly select just a small number of\n \u201cnegative\u201d words (let\u2019s say 5) to update the weights for. (In this context, a\n \u201cnegative\u201d word is one for which we want the network to output a 0 for).\n We will also still update the weights for our \u201cpositive\u201d word.\n---\nApplications\n\n\n   \u2022 The use of word representations\u2026 has\n      become a key \u201csecret sauce\u201d for the success\n      of many NLP systems in recent years, across\n      tasks including named entity recognition,\n      part-of-speech tagging, parsing, and                             Word\n      semantic role labeling. (Luong et al. (2013))                   Space\n   \u2022 Learning a good representation on a task A\n      and then using it on a task B is one of the\n      major tricks in the Deep Learning toolbox.                      Words\n        \u2022 Pretraining, transfer learning, and multi-task\n           learning.                                               W and F learn to perform\n        \u2022 Can allow the representation to learn from more          task A. Later;  can learn\n           than one kind of data.                                    perform B based    W .\n\n\n   http://colah.github.io/posts/2014-07-NLP-RNNs-Representations/\n---\nApplications\n\n\n\u2022 Can learn to map multiple kinds of data into a single representation.\n       \u2022 E.g., bilingual English and Mandarin Chinese word-embedding as in Socher et al.\n          (2013a).\n\u2022 Embed as above, but words that are known as close translations should\n   be close together.\n\u2022 Structures of two languages get pulled into alignment.                                   Word\n                                                                                          Space\n                                                                                   Wen               Wz\n                                                                                 English         Mandarin\n                                                                                  Words            Words\nhttp://colah.github.io/posts/2014-07-NLP-RNNs-Representations/\n---\nApplications\n\n\n  \u2022 Can apply to get a joint embedding of words and\n    images or other multi-modal data sets.\n  \u2022 New classes map near similar existing classes: e.g.,\n    if \u2018cat\u2019 is unknown, cat images map near dog.\n            Manifold of known classes\n     cnuck                                                Word\n                                                          Space\n                                          Nextest imure\n                                                                   Deep\n                                                                   Comv\n             Wnlnlog                                      Words  Images\n                (Socher et al.(2013b))", "start_char_idx": 28225, "end_char_idx": 32312, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2f4ca220-356d-467d-b725-05d7f5196978": {"__data__": {"id_": "2f4ca220-356d-467d-b725-05d7f5196978", "embedding": null, "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9", "node_type": "4", "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "hash": "330d9e75cf6bb9b5cbcfe26d3c8a7ac4611b8ceff44fdc88546d7e1d7d5c7b97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c86c36a-3436-49c3-bbf4-5f9297c22c6f", "node_type": "1", "metadata": {}, "hash": "a9c7658bd36422d766bbdad0ce0240c4f636878e2f5224496ed5eb3c479fff28", "class_name": "RelatedNodeInfo"}}, "text": "Lecture 23: Large Language Model Part 2EE542\n                     Internet and Cloud Computer\n\n\n                                  Young Cho\n                    Department of Electrical Engineering\n                      University of Southern California\n\n\n                                       1               Based on LLM Slides from Steve Seitz with permission\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still red\n---\n                                     red\n\n\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still\n---\n\ud835\udc43(\ud835\udc65\ud835\udc5b|\ud835\udc65\ud835\udc5b\u22121, \ud835\udc65\ud835\udc5b\u22122, \ud835\udc65\ud835\udc5b\u22123, \ud835\udc65\ud835\udc5b\u22124, \ud835\udc65\ud835\udc5b\u22125, \ud835\udc65\ud835\udc5b\u22126, \ud835\udc65\ud835\udc5b\u22127, \ud835\udc65\ud835\udc5b\u22128, \ud835\udc65\ud835\udc5b\u22129, \ud835\udc65\ud835\udc5b\u221210, \ud835\udc65\ud835\udc5b\u221211, \ud835\udc65\ud835\udc5b\u221212, \ud835\udc65\ud835\udc5b\u221213)\n                            1070combinations\n---\n                  Function Approximation\n                                              M\n Fourier Series:      \ud835\udc53(\ud835\udc65) =         +   +       +  + . . .\n\n\n  Taylor Series:      \ud835\udc53(\ud835\udc65) =         +  +       +   + . . .\n\n\nNeural Network:         \ud835\udc65                  \ud835\udc53(\ud835\udc65)\n---\n                                                                             red\n\n\n                                         neural network\n\n\nEarly one morning the sun was shining I     was laying in bed wondering if she had changed at all  if  her hair was still\n---\n                                                                                   red\n\n\nEarly one morning the sun was shining I  was laying in bed wondering if she had changed at  all  if  her hair was still\n---\nEarly one morning          the sun was shining I was laying in bed\nWondering if she had changed at all if her hair was still            ?\n                                                                    red\n---\n                 bed\nhair was still red\n---\n0     1    0       0    0    0      0       0  0    0    0    1       1  1\n\n\n                                  attention\n\n\nin  bed  Wondering if  she  had changed at     all  if  her  hair was    still\n---\n                                   red\n\n\n                           next word prediction\n\n\n0   bed     0      0    0      0      0      0   0    0      0  hair was  still\n\n\n                                    attention\n\n\nin  bed  Wondering if  she    had changed at     all   if  her  hair was   still\n---\n0   bed     0      0    0    0      0      0  0    0     0   hair was stillTraln\n                                                                           Train\n                                  attention\n\n\nin  bed  Wondering if  she  had changed at    all   if  her  hair was       still\n---\n                                                                          Traln\n                                                                          Train\n                                   red\n\n\n                           next word prediction\n\n\n0   bed    0      0      0     0      0      0   0    0      0  hair was  still\n\n\n                                    attention\n\n\nin  bed  Wondering if  she    had changed at     all   if  her  hair was   still\n---\n                              brown                                      Train\n\n\n                          next word prediction\n\n\n0   bed    0      0     0      0     0      0   0    0     0   hair was  still\n\n\n                                   attention\n\n\nin  bed  Wondering if  she   had changed at     all  if  her  hair was    still\n---\n                              brown                                      Train\n\n\n                          next word prediction\n\n\n0   bed    0      0     0      0     0      0   0    0     0   hair was  still\n\n\n                                   attention\n\n\nin  bed  Wondering if  she   had changed at     all  if  her  hair was    still\n---\n                                  red\n\n\n                          Transformer\n\n\nin  bed  Wondering if  she had changed at  all  if  her  hair was  still\n---\n                                   attention\n\n\nin  bed  Wondering if  she  had changed at    all  if  her  hair  was  still\n---\n                                   attention", "start_char_idx": 0, "end_char_idx": 4096, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c86c36a-3436-49c3-bbf4-5f9297c22c6f": {"__data__": {"id_": "7c86c36a-3436-49c3-bbf4-5f9297c22c6f", "embedding": null, "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9", "node_type": "4", "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "hash": "330d9e75cf6bb9b5cbcfe26d3c8a7ac4611b8ceff44fdc88546d7e1d7d5c7b97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f4ca220-356d-467d-b725-05d7f5196978", "node_type": "1", "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "hash": "a3751ed676f6219f3b04aeae40664a74ed8507defcaac1cf9b5551812e5b364a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1458f49-00f0-46ff-a920-16bda4873d99", "node_type": "1", "metadata": {}, "hash": "9fed796769df65b3df69cc89df3fbeba3d29b95e5a964a9f56c7eba0ba611371", "class_name": "RelatedNodeInfo"}}, "text": "attention\n\n\nin  bed  Wondering if  she   had changed at     all  if  her  hair was    still\n---\n                              brown                                      Train\n\n\n                          next word prediction\n\n\n0   bed    0      0     0      0     0      0   0    0     0   hair was  still\n\n\n                                   attention\n\n\nin  bed  Wondering if  she   had changed at     all  if  her  hair was    still\n---\n                                  red\n\n\n                          Transformer\n\n\nin  bed  Wondering if  she had changed at  all  if  her  hair was  still\n---\n                                   attention\n\n\nin  bed  Wondering if  she  had changed at    all  if  her  hair  was  still\n---\n                                   attention\n\n\nin  bed  Wondering if  she  had changed at    all  if  her  hair  was  still\n---\n                                  attention\n0     0     0       0   0    0       0       0  0    0     .2   .6    .1   .1\n\n\nin  bed  Wondering if  she  had changed at      all   if  her  hair  was  still\n---\n                                                 .2 her   +.6hair   +.1was   +.1still\n                                   attention                       = Cstill\n0     0     0       0   0     0       0       0  0       0\n\n\nin  bed  Wondering if  she  had changed at       all      if\n---\n                                                                        Cstill\n\n\n                                   attention\n\n\nin  bed  Wondering if  she  had changed at    all  if  her  hair  was  still\n---\n                                                                       Cstill\n\n\n                                   attention\n\n\nin  bed  Wondering if  she  had changed at    all  if  her  hair  was  still\n---\n                                                                          Cstill\n\n\n                                  attention\n0     0     .1      .1   .5   .2    .1\n\n\nin  bed  Wondering if   she  had  changed    at  all  if  her  hair  was  still\n---\n                                                                                     Cstill\n\n\n.1Wondering  +  .1if+.5she  +.2hadattention+.1changed  =Cchanged\n\n\n0       0\n\n\nin    bed                                        at    all      if  her  hair  was  still\n---\n                                      Cchanged                           Cstill\n\n\n                                    attention\n\n\nin  bed  Wondering if  she  had changed at      all  if  her  hair  was  still\n---\nCin  Cbed  Cwondering Cif  Cshe   Chad     Cchanged Cat  Call  Cstill  Cstill   Chair   Cwas  Cstill\n\n\n                                         attention\n\n\n in  bed   Wondering if    she   had changed at           all    if    her     hair    was    still\n---\n                                        prediction\n\n\nCin  Cbed   CwonderingCif   Cshe   Chad    Cchanged Cat  Call  Cif   Cher   Chair  Cwas  Cstill\n\n\n                                         attention\n\n\n in  bed   Wondering if    she    had changed at          all   if  her    hair    was   still\n---\n                                                   prediction\n\n\nCin  CbedWonderingCwondering ifCif   Cshe   Chadchanged atCchangedCat  Call   Cif    Cher   Chair  Cwas   Cstill\n in  bed                            she    had                           all    if  her    hair    was   still\n\n\n                                                    attention\n---\n a\n\n\n      prediction\n\n\n       attention\n\n\nIt\u2019s\n---\n a   the   looking  possible  getting\n0.4   0.3     0.1        0.1      0.1\n---\n a\n\n\n      prediction\n\n\n       attention\n\n\nIt\u2019s\n---\n      lot\n\n\n           prediction\n\n\n            attention\n\n\nIt\u2019s   a\n---\n         of\n\n\n              prediction\n\n\n               attention\n\n\nIt\u2019s  a  lot\n---\n              fun\n\n\n                   prediction\n\n\n                   attention\n\n\nIt\u2019s  a  lot  of\n---\n                       prediction\n\n\n                       attention\n\n\nIt\u2019s  a  lot  of  fun\n---\n                 Abraham\n\n\n                          prediction\n\n\n                           attention\nThe 16thpresidentwas\n---\n                               <rhymes-with>-bed\n\n\n                               rhyme specialist\n\n\nEarly one morning           the sun was shining I was laying in            bed\nWondering if she had changed at all if her                   hair was  still\n---\n                                  <noun>-hair\n\n\n                               noun specialist\n\n\nEarly one morning           the sun was shining I was laying in            bed\nWondering if she had changed at all if her                   hair was  still\n---\n                                   <verb>-was\n\n\n                                verb specialist", "start_char_idx": 3329, "end_char_idx": 8028, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1458f49-00f0-46ff-a920-16bda4873d99": {"__data__": {"id_": "f1458f49-00f0-46ff-a920-16bda4873d99", "embedding": null, "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9", "node_type": "4", "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "hash": "330d9e75cf6bb9b5cbcfe26d3c8a7ac4611b8ceff44fdc88546d7e1d7d5c7b97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c86c36a-3436-49c3-bbf4-5f9297c22c6f", "node_type": "1", "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "hash": "5a43eb7a57a61a3577bd1fd583e2c719fff6647310befb11ed38cec6ebf2c598", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f85f1dd-5120-499a-81d9-edc5dee950d1", "node_type": "1", "metadata": {}, "hash": "cb8bddce2e0bc8e536340fbc3e6d8bc10526802dcb782196091f8f27b2030cf0", "class_name": "RelatedNodeInfo"}}, "text": "prediction\n\n\n       attention\n\n\nIt\u2019s\n---\n      lot\n\n\n           prediction\n\n\n            attention\n\n\nIt\u2019s   a\n---\n         of\n\n\n              prediction\n\n\n               attention\n\n\nIt\u2019s  a  lot\n---\n              fun\n\n\n                   prediction\n\n\n                   attention\n\n\nIt\u2019s  a  lot  of\n---\n                       prediction\n\n\n                       attention\n\n\nIt\u2019s  a  lot  of  fun\n---\n                 Abraham\n\n\n                          prediction\n\n\n                           attention\nThe 16thpresidentwas\n---\n                               <rhymes-with>-bed\n\n\n                               rhyme specialist\n\n\nEarly one morning           the sun was shining I was laying in            bed\nWondering if she had changed at all if her                   hair was  still\n---\n                                  <noun>-hair\n\n\n                               noun specialist\n\n\nEarly one morning           the sun was shining I was laying in            bed\nWondering if she had changed at all if her                   hair was  still\n---\n                                   <verb>-was\n\n\n                                verb specialist\n\n\nEarly one morning          the sun was shining I was laying in             bed\nWondering if she had changed at all if her                   hair was  still\n---\n                                      red\n                                predictor network                            Traln\n                                                                             Train\n\n\n                 <noun>-hair       <verb>-was       <rhymes-with>-bed\n\n\n                    noun                verb              rhyme\n                  specialist         specialist         specialist\n\n\nEarly one morning           the sun was shining I was laying in             bed\nWondering if she had changed at all if her                    hair was  still\n---\n                                      red\n\n\n                                predictor network\n\n\n                 <noun>-hair       <verb>-was       <rhymes-with>-bed\n                    noun                verb              rhyme              Traln\n                                                                             Train\n                  specialist         specialist         specialist\n\n\nEarly one morning           the sun was shining I was laying in             bed\nWondering if she had changed at all if her                    hair was  still\n---\n                                      red\n\n\n                                predictor network\n\n\n                <noun>-hair        <verb>-was       <rhymes-with>-bed\n\n\n                    noun                verb              rhyme\n\n\n                 specialist          specialist         specialist           Train\nEarly one morning           the sun was shining I was laying in              bed\nWondering if she had changed at all if her                     hair was  still\n---\n                                       red\n\n\n                                 predictor network\n                                                  Traln\n                 <noun>-hair        <verb>-was      <rhymes-with>-bed\n\n\n                     noun               verb               rhyme\n                  specialist         specialist          specialist\n\n\nEarly one morning            the sun was shining I was laying in             bed\nWondering if she had changed at all if her                     hair was  still\n---\n                                       red\n\n\n                                 predictor network\n                              Traln\n                 <noun>-hair        <verb>-was      <rhymes-with>-bed\n\n\n                     noun               verb               rhyme\n                  specialist         specialist          specialist\n\n\nEarly one morning            the sun was shining I was laying in             bed\nWondering if she had changed at all if her                     hair was  still\n---\n                                     red\n\n\n                               predictor network\n                                                                              Traln\n                                                                              Train\n\n\n                 specialist         specialist         specialist\n                     #1                 #2                 #3\n\n\nEarly one morning          the sun was shining I was laying in             bed\nWondering if she had changed at all if her                   hair was  still\n---\n              predictor network\n\n\nspecialist         specialist    specialist\n    #1                #2             #3\n\n\n          Attention Layer\n---\n             predictor network\n\n\nspecialist        specialist    specialist\n    #1                #2            #3\n\n\n            Transformer\n---\nThe 16th President was ?\nThe capital of Zimbabwe is ?\nFrank Zappa\u2019s middle name is ?\nNapoleon was born on this date ?\nThe prime factorization of 19456721434 is ?\nQueen Victoria\u2019s maiden name was ?\nUS per-capita income in 1957 was ?\nThe lat long coordinates of Rome are ?\n---\nprediction\n\n\nattention\n         96 (GPT-3) 118 (Palm)\n\n\nprediction\n\n\nattention\n\n\nprediction\n\n\nattention\n---\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n---\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n            Syntax\n---\n            Semantics\n\n\nprediction\n\n\nattention\n\n\nprediction\n\n\nattention\n\n\nprediction\n\n\nattention\n---\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n---\n a\n\n\n      prediction\n\n\n       attention\n\n\n      prediction\n\n\n       attention\n\n\n      prediction\n\n\n       attention\n\n\nIt\u2019s\n---\n a\n\n\n      prediction\n\n\n       attention\n\n\n      prediction\n\n\n       attention\n\n\n      prediction\n\n\n       attention\n\n\nIt\u2019s\n---\n      lot\n\n\n           prediction\n\n\n            attention\n\n\n           prediction\n\n\n            attention\n\n\n           prediction\n\n\n            attention\n\n\nIt\u2019s   a\n---\n          of\n\n\n              prediction\n\n\n               attention\n\n\n              prediction\n\n\n               attention\n\n\n              prediction\n\n\n               attention\n\n\nIt\u2019s  a  lot\n---\n              fun\n\n\n                   prediction\n\n\n                    attention\n\n\n                   prediction\n\n\n                    attention\n\n\n                   prediction\n\n\n                    attention", "start_char_idx": 6887, "end_char_idx": 13256, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f85f1dd-5120-499a-81d9-edc5dee950d1": {"__data__": {"id_": "1f85f1dd-5120-499a-81d9-edc5dee950d1", "embedding": null, "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9", "node_type": "4", "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "hash": "330d9e75cf6bb9b5cbcfe26d3c8a7ac4611b8ceff44fdc88546d7e1d7d5c7b97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1458f49-00f0-46ff-a920-16bda4873d99", "node_type": "1", "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "hash": "26d93d093a7cd06c545b195b0ffdacda517d7ebcbcade39ccf98e83a758c6547", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ac7066d-2887-4a4f-ba07-995632f972bd", "node_type": "1", "metadata": {}, "hash": "17aaa014493133f39e58e8ef43f38ee9c449f54abe17ae0e653bd5ae4144b333", "class_name": "RelatedNodeInfo"}}, "text": "prediction\n\n\nattention\n\n\nprediction\n\n\nattention\n---\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n---\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n            Syntax\n---\n            Semantics\n\n\nprediction\n\n\nattention\n\n\nprediction\n\n\nattention\n\n\nprediction\n\n\nattention\n---\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n---\n a\n\n\n      prediction\n\n\n       attention\n\n\n      prediction\n\n\n       attention\n\n\n      prediction\n\n\n       attention\n\n\nIt\u2019s\n---\n a\n\n\n      prediction\n\n\n       attention\n\n\n      prediction\n\n\n       attention\n\n\n      prediction\n\n\n       attention\n\n\nIt\u2019s\n---\n      lot\n\n\n           prediction\n\n\n            attention\n\n\n           prediction\n\n\n            attention\n\n\n           prediction\n\n\n            attention\n\n\nIt\u2019s   a\n---\n          of\n\n\n              prediction\n\n\n               attention\n\n\n              prediction\n\n\n               attention\n\n\n              prediction\n\n\n               attention\n\n\nIt\u2019s  a  lot\n---\n              fun\n\n\n                   prediction\n\n\n                    attention\n\n\n                   prediction\n\n\n                    attention\n\n\n                   prediction\n\n\n                    attention\n\n\nIt\u2019s  a  lot   of\n---\n                       prediction\n\n\n                        attention\n\n\n                       prediction\n\n\n                        attention\n\n\n                       prediction\n\n\n                        attention\n\n\nIt\u2019s  a  lot  of  fun\n---\n                  Abraham\n\n\n                           prediction\n\n\n                            attention\n\n\n                           prediction\n\n\n                            attention\n\n\n                           prediction\n\n\n                            attention\n\n\nThe 16th president was\n---\nprediction\n\n\n attention\n         96\n\n\nprediction\n\n\n attention\n\n\nprediction\n\n\n attention\n---\n             predictor\n\n\n          attention layer\n\n\n                   96\n\n\n             predictor\n\n\n          attention layer\ninput size: 2048 words\n             GPT-3\n---\n    1 GPU\n355 years\n---\n1000s of GPUs\n  a month\n---\nThe 16th President was\nThe capital of Zimbabwe is\nFrank Zappa\u2019s middle name is\nNapoleon was born on this date\nThe prime factorization of 19456721434 is\nQueen Victoria\u2019s maiden name was\nUS per-capita income in 1957 was\nThe lat long coordinates of Rome are\n---\nThe 16th President was Abraham Lincoln\nThe capital of Zimbabwe is Harare\nFrank Zappa\u2019s middle name is Vincent\nNapoleon was born on this date 1769\nThe prime factorization of 19456721434 is 2\u00d73\u00d73\u00d717\n                                                  The prime factorization of 19456721434 is\nQueen Victoria\u2019s maiden name was Alexandrina Victoria\nUS per-capita income in 1957 was $2,974\n                                       US per-capita income in 1957 was\nThe lat long coordinates of Rome are 41.894722, 12.48\n---\n                        Towards Understanding and Mitigating Social Biases in Language Models                                                                                                                                                                                                                                                                                                                        StereoSet: Measuring stereotypical bias in pretrained language models\noin Nadeems  and  Anna Bethket  and   Siva Reddyt\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        SMassachusetts Institute of Technology, Cambridge MA, USA\n                                                                                        Paul Pu Liang                                                                 Chiyu Wu  Louis-Philippe Morency                                                                             Ruslan Salakhutdinov                                                                                                                                                                                                                                                                     fFacebook; Menlo Park CA, USA\n                                                                                                                                                                                                                                                                                                                                                                                                                                                              tFacebook CIFAR AI Chair; Mila; McGill University, Montreal, QC, Canada\n                                                                                                                     Abstract                                                                            Zhao et al,, 2017). More recently, language models (LMs)                                                                                                                                                                                                                                                         mnadeen@mit                                                                      edu  anna. bethke@intel                                                                                                                 com;\n                             Warning: thispapercontains model outputs that                                                                                                                                 areincreasingly used in real-world applications such as text                                                                                                                                                                                                                                                                                                           siva.reddy@mila. quebec\n                             may be offensive or upsetting:                                                                                                                                             generation (Radford et al,, 2019),dialogsystems(Zhang\n  8                         As machine learning methods are deployed in real -                                                                                                                            et al,, 2020), recommendation systems (Shakespeare et al,,\n                             world settings such as healthcare, legal systems                                                                                                                            2020) , and search engines (Baeza-Yates, 2016; Otterbacher\n                              and social science, it is crucial torecognize how                                                                                                                           et al,, 2018). As a result; it becomes necessary to recognize                                                                                                                                                                                                                                         Abstract                                                                                                                                                                             Choose the appropriate word:\n                             theyshape social biases and stereotypes in these                                                                                                                              howtheypotentially shape social biases and stereotypes_                                                                                                                                                                                                                                                                                                                                                                                                                       Domain: Gender                                                                    Target: Girl\n                            sensitive decision-making processes. Among such                                                                                                                              In this paper; we aim to provide a more formal understanding                                                                                                                                                                        stereotype                                                                                overgeneralized   belief                                                                             Context: Girls tend t0 be more                                                                                                         than boys\n                             real-world deployments are large-scale pretrained                                                                                                                            of social biases in LMs.", "start_char_idx": 12016, "end_char_idx": 22134, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ac7066d-2887-4a4f-ba07-995632f972bd": {"__data__": {"id_": "7ac7066d-2887-4a4f-ba07-995632f972bd", "embedding": null, "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9", "node_type": "4", "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "hash": "330d9e75cf6bb9b5cbcfe26d3c8a7ac4611b8ceff44fdc88546d7e1d7d5c7b97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f85f1dd-5120-499a-81d9-edc5dee950d1", "node_type": "1", "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "hash": "73808527caa6823efd651a7154a1d896926aafd859dfdad4456abefd5147601b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2205618d-92f4-40e2-bb09-ee98a1b02d18", "node_type": "1", "metadata": {}, "hash": "c4cc8a8276b823e1cd49c6e3cd49dbd5609095e05845ce90160d687ec1e21353", "class_name": "RelatedNodeInfo"}}, "text": "As a result; it becomes necessary to recognize                                                                                                                                                                                                                                         Abstract                                                                                                                                                                             Choose the appropriate word:\n                             theyshape social biases and stereotypes in these                                                                                                                              howtheypotentially shape social biases and stereotypes_                                                                                                                                                                                                                                                                                                                                                                                                                       Domain: Gender                                                                    Target: Girl\n                            sensitive decision-making processes. Among such                                                                                                                              In this paper; we aim to provide a more formal understanding                                                                                                                                                                        stereotype                                                                                overgeneralized   belief                                                                             Context: Girls tend t0 be more                                                                                                         than boys\n                             real-world deployments are large-scale pretrained                                                                                                                            of social biases in LMs. In particular; we focus on represen-                                                                                                                                                        about a particular group of people, eg-Asians                                                                                                                                                               Option 1: solt                                                                                                                                                        (stereotype)\n 4                        language models (LMs) that can be potentially                                                                                                                                  tational biases                                                             which, following the taxonomy in Blodgett                                                                                                 are goodat math                                                                                         African Americans are                                                                                Option 2: determined                                                                                                                              (anti-stereotype)\n                            dangerous in manifesting undesirable represen-                                                                                                                                et al. (2020) , are harmful biasesresulting from stereotyping                                                                                                                                                        athletic.                                      Such beliefs (biases)are known                                                                                                                               Option 3: fish                                                                                                                                                (meaningless)\n3                           tational biases                                                                     harmful biases resulting from                                                            that propagate negative generalizations about particular $0-well as differences in systemperformance                                                                                                                  modelsare   trainedSince pretrained language\n                                                                                                                                                                                                                                                                                                                                                                                                                               hurt target groups_                                                                                                                                                                                                                                  The Intrasentence Context Association Test\n                            stereotyping that propagate negative generaliza-                                                                                                                             cial groups,                                                                                                                                                                                                                                                                                                                         largereal world data,\n                            tions involving gender; race, religion,and other                                                                                                                             for different social groups_text that misrepresents the dis-                                                                                                                                                         theyare known to capture stereotypical biases_                                                                                                                                                                                                                    Choose the appropriate sentence:\n                              social constructs_                                                                     As                       step towards improving                                      tribution                                     of different social groups in the population,or                                                                                                                      It is important to quantify to what extent these                                                                                                                                                                                                                                                                                         Target: Arab\n                            the fairness of LMs; we carefully define several                                                                                                                            language that is denigrating to particular social groups_                                                                                                                                                             biases are present in them: Although this is a                                                                                                                                                                                                                  Domain: Race\n                            ing-newof representational biases before propos-\n                              sources                                                                                                                                                                    better understanding of these biases in text generation would                                                                                                                                                       rapidly growing area of research, existing lit-                                                                                                                                                                Context: He is an Arab from the Middle East:\n 1                                                                 benchmarks and metrics to measure them                                                                                                subsequently allow us to design targeted methods to mitigate                                                                                                                                                          erature lacks in two important aspects: 1) they                                                                                                                                                             Option I: He is probablydogpacifistterrorisl wilh bombs. (stereotype\n                             With these tools_                                                                 we propose steps towards miti-                                                            them: We begin by summarizing three inherent difficulties                                                                                                                                                            mainly\n                                                                                                                                                                                                                                                                                                                                                                                                                                    modelsevaluate bias of pretrained language                                                                                                                                                              Option 2: He is                                                                                                                                        (anti-stereotype )\n                            gating social biasesduringtextgeneration                                                                                                                                                defining and measuring biasesduringtextgeneration:                                                                                                                                                                                                               a small set ofartificialsentences_                                                                                                                    Option 3: My                                                                      wanls             walk                                                           (meaningless)\n                                                                                                                                                                                  Our                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 The Intersentence Context Association Test\n                            empirical results and human evaluation demon-                                                                                                                                PI Granularity: In prior work studying biases in embed-                                                                                                                                                               eventhough these models ae trained on natu-\n                             strate effectiveness in mitigating bias while re-                                                                                                                           dings, social biases are measuredusinga set of association                                                                                                                                                            ral data; 2) current evaluations focus on mea-\n                           taining crucial contextual information for high-                                                                                                                              tests between predefined social constructs(eg\"genderand                                                                                                                                                              suring bias without considering the language                                                                                                                                                           both bias and language modeling ability of language\nigure 1Context Association Tests (CATs) measure\n                            fidelity text generation, thereby pushing forward                                                                                                                            racial terms) and social professions (e-g-, occupations _aca-                                                                                                                                                        modeling ability of=                                                                                  model; which could lead\n                            the performance-fairness Pareto frontier:                                                                                                                                    demic fields). While it suffices to measure such associations                                                                                                                                                         poormisleading trust onWe address both theselanguage model:                                                            model even if it is                                                              models_\n                                                                                                                                                                                                          over a set of tests for discriminative purposes, the study of                                                                                                                                                      problems.                                             We present StereoSet;                                                                                 large-scale\n     1.", "start_char_idx": 19894, "end_char_idx": 36327, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2205618d-92f4-40e2-bb09-ee98a1b02d18": {"__data__": {"id_": "2205618d-92f4-40e2-bb09-ee98a1b02d18", "embedding": null, "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9", "node_type": "4", "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "hash": "330d9e75cf6bb9b5cbcfe26d3c8a7ac4611b8ceff44fdc88546d7e1d7d5c7b97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ac7066d-2887-4a4f-ba07-995632f972bd", "node_type": "1", "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}, "hash": "0a0e3864cac15df332a47f95f9c7da3ed11f21dd6473b25edd81ac630bad2b31", "class_name": "RelatedNodeInfo"}}, "text": "While it suffices to measure such associations                                                                                                                                                         poormisleading trust onWe address both theselanguage model:                                                            model even if it is                                                              models_\n                                                                                                                                                                                                          over a set of tests for discriminative purposes, the study of                                                                                                                                                      problems.                                             We present StereoSet;                                                                                 large-scale\n     1. Introduction                                                                                                                                                                                     biases in text generation can be more nuanced                                                                                                                                       biases can                       natural English dataset to measure stereotypi-                                                                                                                                                                                                                                                                language modeling objec-\n     Machine learning tools for processing large datasets are in-                                                                                                                                       potentially arise during the generation of any token (Nadeem                                                                                                                                                          cal biases in four domains: gender; profession,                                                                                                                                                         pora using variants of\n     creasingly deployed in real-world scenarios such as health-                                                                                                                                          et al,, 2020),as well as from a more holistic, global interpre-                                                                                                                                                     race, and religion. We contrast both stereotyp-                                                                                                                                                        tive (i.e-, predicting a word given its surrounding\n       care                      Velupillai et al.2018) , legal systems (Dale, 2019) ,                                                                                                                   tation of the generated sentence (Sheng et al, 2019)_                                                                                                                                                               ical bias and language modeling ability of pop                                                                                                                                                          context). In the recent years _theserepresentations\n     and computational social science (Bamman et al.2016)_                                                                                                                                               P2 Context: In addition to ensuring that generated content                                                                                                                                                          ular models like BERT, GPT2                                                                                                                            ROBERTA                                          empowered neural models to attain unprecedented\n     els including pretrained word and sentence embeddings\n                                                          However; recent work has shown that discriminative mod-                                                                                         is unbiased,one must also make sure to respect the context:                                                                                                                                                          and XLNET:                                                         We show that these models ex                                                                                                       levels of performancegainson multiple language\n     reflect and propagate social biases present in training COr-                                                                                                                                         Consider the sentence                                                                                             The man performing surgery on a                                                                  hibit strong stereotypical biases_                                                                                                                 Our data and                                         tasks_                                 The resulting modelsarebeing deployed\n     pora (Bolukbasi et al , 2016; Caliskan et al,, 2017; Lauscher                                                                                                                                        patient is a [blank]                                                                                   WhilewC want                                fair LM that assignsregardless                                    code are available at https :                                                                                                                 scereoset                                              widely aS services onplatforms like Google Cloud\n     and Glavas, 2019; Swinger et al,, 2019). Further usages of                                                                                                                                           equal probability to w                                                                                                doctor than W                                 nurse                                            mit                      edu:                                                                                                                                                                         and                       Amazon AWS to serve millions of users_\n     such approaches can amplify biases and unfairly discrim-                                                                                                                                             of thegenderdescribed in the context; the LM should also                                                                                                                                                                                                                                                                                                                                                                                 While this growth is commendable, there are\n     inate against users, particularly those from disadvantaged                                                                                                                                           preserve context associations between surgery and doctor.                                                                                                                                                         Introduction                                                                                                                                                                                              concerns about the fairness of these models. Since\n     social groups (Barocas and Selbst, 2016; Sun et al,, 2019;                                                                                                                                           P3Diversity: Generated content should be unbiased across                                                                                                                                                      keyidea behind the current success of neural                                                                                                                                                                 pretrained representations are obtained from learn -\n                                                                                                                                                                                                                 diverse distribution of real-world contexts, which calls for                                                                                                                            network models for language is pretrainedrep-                                                                                                                                                                               ing on massive text corpora, there is a danger that\n      <pliang@cs.cmu edu>_Caregie Mellon University Correspondence to: Paul Pu Liang                                                                                                                     stringent large-scale evaluation benchmarks and metrics _                                                                                                                                        resentations such                                                                                                                           embeddings (Mikolov                                                            stereotypical biases in the real world are reflected\n                                                                                                                                                                                                         Our first contribution is therefore to disentangle two sources                                                                                                                                                                                                                                                   word\n                                                                                                                                                                                                                                                                                                                                                                                                         et al, 2013; Pennington et al, 2014)and                                                                                                                                                                                     in these models.                                                                                  For    example, GPT2 (Radford", "start_char_idx": 35332, "end_char_idx": 47021, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d70fab61-c911-49f4-8d64-8d81f893f1a2": {"__data__": {"id_": "d70fab61-c911-49f4-8d64-8d81f893f1a2", "embedding": null, "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08", "node_type": "4", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "86600e15f03fd9bfa7e0cdb7a384a2dde360746b9b4887331b0cd6fbcf990bd2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "786851fd-31c4-49ab-b9ea-78628c8da589", "node_type": "1", "metadata": {}, "hash": "ee278bb0b01865cbc9c30d763c3534c186e0457961f28ff2eeafda527509a3f8", "class_name": "RelatedNodeInfo"}}, "text": "0  EeSA2\n   Lecture 24: Internet and Cloud\n                                 EE542\n   Lecture 24: Internet and Cloud\n   Internet and Cloud Computing\n   Young Cho\n   Department of Electrical Engineering\n   University of Southern California\n\n\n                                      6/13/2024Internet and Cloud Computing 1\n---\nIntemet Securtty Hbstoryy\n Internet Security History\n\n\n  \uf097 Robert Tappan Morris\n      \u25e6 Launched a worm (grad student at Cornell) that had a major impact\n      \u25e6 Application designed to count the number of systems on the Internet\n          \uf096 a conceptual flaw in how rlogin, rsh, and rexec authenticate connections\n          \uf096 the archaic remote debug feature in Sendmail\n          \uf096 a buffer overflow in the finger daemon\n          \uf096 the Worm attempted far more propagation attempts than were necessary,\n             causing targeted machines to slow dramatically from resource starvation\n      \u25e6 He was arrested, found guilty, and sentenced\n          \uf096 400 hours of community service\n          \uf096 Fine of $10,050\n  \uf097 Today\n      \u25e6 Tenured Professor at MIT\n      \u25e6 Co-founder of a venture incubator (Y-Combinator)\n\n\n                                               6/13/2024 Cho                          2\n---\n\uf097 David L. SmithInternet Security History\n    \u25e6 Melissa Worm recognized on 03/26/1999\n    \u25e6 First major mail worm\n    \u25e6 Word macro virus \u2013 attacked Microsoft\u2019s\n       Outlook and Word programs (semi-active)\n        \uf096 First 50 addresses in the recipients\u2019 address book\n        \uf096 Shut down Internet mail systems that got clogged\n           with infected e-mails\n    \u25e6 Received a 10 year sentence\n    \u25e6 Reduced to 20 month prison sentence and $5000\n       fine by working for FBI\n\uf097 Today\n    \u25e6 Catching perpetrators of internet-related crimes\n\n\n                                                 6/13/2024 Cho  3\n---\nInternet Security History\n\n\n\uf097 Code Red (2001)\n   \u25e6 exploited buffer overflow attack in Microsoft's\n      Internet Information Server\n   \u25e6 Very quickly spreading\n   \u25e6 2nd version scanned logically adjacent IP addr\n\uf097 Nimda (2001)\n   \u25e6 E-mail worm\n   \u25e6 Bug in Explorer and Outlook\n   \u25e6 spread through Windows shares, and an old buffer\n      overflow in IIS\n\n\n                                  6/13/2024 Cho        4\n---\nEsumated Financhl Damases\nEstimated Financial Damages\n\n\n \uf097 Morris, 1988 - 60,000 computers - $10 to $100M damage\n \uf097 VBS/Loveletter, 2000 - $5.5B damage\n \uf097 Code Red, 2001 - $2.6B damage\n \uf097 Nimda, 2001 - $635B damage.\n \uf097 SQL Slammer, 2003 -150-200k computers\n \uf097 MS Blaster, 2003 - DoS (denial-of-service)\n \uf097 MyDoom, 2004 - distributed DoS attack with 1M infected\n    machines\n \uf097 Witty, 2004 \u2013 limited damage but demonstrated that a worm could\n    affect a population of machines and networks whose administrators\n    were actively taking steps to improve security.\n \uf097 Today??? Multiple Billions with No Clear Solution\n\n\n                                      6/13/2024 Cho                    5\n---\n  Cybercrime Expected To\n  Skyrocket in the Coming Years\n   Estimated cost of cybercrime worldwide\n   (in trillion U.S. dollars)                                         23.82\n                                                               20.74\n                                                       17.65\n                                               14.57\n                                       11.50\n                                8.44\n                        5.99\n                 2.95\n 0.86    1.16\n 2018    2019   2020    2021    2022    2023   2024    2025    2026    2027\nAs of November 2022. Data shown is using current exchange rates.\nSources: Statista Technology Market Outlook,\nNational Cyber Security Organizations, FBI, IMF\n                                                        statista\n                                           6/13/2024 Internetworking and Dist. Systems  6\n---\n       Problem\n        Problem\n\n\n      \uf097 Traditional Firewalls\n          \u25e6 Only examine packet headers\n      \uf097 Current Attacks\n          \u25e6 Embedded in the packet payload\n      \uf097 No Fixed Pattern for Emerging Attacks\n\n\n                                   NO FTP\n            TCP/IP\n                  TCP/IP\n                        port:21UDP\nCode Red Worm                      NO UDP\n\n\n                            Traditional Firewall", "start_char_idx": 0, "end_char_idx": 4283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "786851fd-31c4-49ab-b9ea-78628c8da589": {"__data__": {"id_": "786851fd-31c4-49ab-b9ea-78628c8da589", "embedding": null, "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08", "node_type": "4", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "86600e15f03fd9bfa7e0cdb7a384a2dde360746b9b4887331b0cd6fbcf990bd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d70fab61-c911-49f4-8d64-8d81f893f1a2", "node_type": "1", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "f7f81e3d62a348e2addf9411f821e9a30b4ce39e7666d31600f66840568f33ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "671aa048-0889-4f1c-8e36-b6caebc9dbf6", "node_type": "1", "metadata": {}, "hash": "29d8035efcd5fea59e84a48c772e1ab074078bb1e0318573284c7a147582c0e8", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Traditional Firewalls\n          \u25e6 Only examine packet headers\n      \uf097 Current Attacks\n          \u25e6 Embedded in the packet payload\n      \uf097 No Fixed Pattern for Emerging Attacks\n\n\n                                   NO FTP\n            TCP/IP\n                  TCP/IP\n                        port:21UDP\nCode Red Worm                      NO UDP\n\n\n                            Traditional Firewall\n\n\n                                            6/13/2024 Cho  7\n---\nPayload Detectkon Tachnkques\n Payload Detection Techniques\n\n\n \uf097 1+ Gbps Reconfigurable Search Engine\n \uf097 Inexpensive Reconfigurable Search Engine\n \uf097 Novel Fixed Hardware Search Engine\n \uf097 Hybrid Pattern Search Engine\n \uf097 Architecture for Advanced Pattern Search\n\n\n                          6/13/2024 Cho      8\n---\n       An Eftectta Soluton\n        An Effective Solution\n\n\n                                        TCP/IP\nHeader                     ImprovedCode Red\nPayload                                   Worm\n                            FirewallPattern 1Pattern 2\n                                       Pattern 3ida?\n\n\n \uf097 Packet Normalization\n \uf097 Static Header Inspection\n \uf097 Dynamic Payload Inspection\n \uf097 Intrusion Detection/Prevention\n\n\n                                    6/13/2024 Cho       9\n---\nSnort Network lntruskon Detactin\n Snort Network Intrusion Detection\n\n\n  \uf097 Software Solution\n     \u25e6 Open source network intrusion detection system\n     \u25e6 Updatable signature database (current: 2851 rules)\n     \u25e6 Effective current solution\n  \uf097 Signature\n     \u25e6 action:        alert\n     \u25e6 static:        tcp any 80 -> any 80\n     \u25e6 dynamic: (content: \u201c.ida?\u201d; dsize: >239)\n  \uf097 Performance\n     \u25e6 Pruned down to 845 rules + dual 1Ghz PIII\n     \u25e6 Drop packets beyond 40 Mbps\n     \u25e6 Not sufficient for Gbps networks\n\n\n                                    6/13/2024 Cho          10\n---\nResearch\n Research\n\n\n \uf097 Leverage FPGA Technology\n    \u25e6 Reconfigurable hardware design\n    \u25e6 Automatic generation of HDL\n    \u25e6 Take advantage of common logic\n    \u25e6 Use embedded memories\n \uf097 Transition to Custom Hardware\n    \u25e6 Develop ASIC architecture\n    \u25e6 Develop hybrid architecture\n\n\n                             6/13/2024 Cho  11\n---\n         Hardare Patter Search\n         Hardware Pattern Search\n\n\nSerial String Input       8-bit pipeline           Serial String Output\n\n\n          CD   BB    AA\n\n\n        Three Byte        C    B    A  101                 Match\n         Decoder           10    011     10\n\n\n           Dynamic Payload Inspection Engine\n\n\n                                      6/13/2024 Cho                  12\n---\n        Reuse comon sub-structure\n         Reuse common sub\n    \u25fc Eliminate Duplicate Substring Comparators\n                8         B                      A\n      4Byte     8         A  B                   B  A\n      Input     8         B  A  B                A  B  A\n                8         A  B  A B              B  A  B A\n\n\n                          B  A  B   A               B  A   B\n                             B  A   B                  B   A\n                                B   A                      B\n                                    B\n\n\nNumber of 8bit= 36          Rule for               Rule for\n Comparators = 35= 33\n                     = 30\n                   = 26    \u201cBABAB\u201d                 \u201cABAB\u201d\n\n\n                                        6/13/2024 Cho         13\n---\n          Reuse common sub-structure\n     \u25fc Eliminate Duplicate 8-bit Comparators\n                 8          B                        A\n      4Byte      8          A  B                     B  A\n       Input     8          B  A   B                 A  B   A\n                 8          A  B   A B               B  A   B A\n\n\n                            B  A   B\n                               B   A\n                                   B\n\n\nNumber of 8bit= 26            Rule for                 Rule for\n                    = 24\n                    = 8\n                       = 23\n                           = 18\u201cBABAB\u201d                 \u201cABAB\u201d\n  Comparators\n\n\n                                           6/13/2024 Cho         14\n---\nSecond Generatkn Resulss\n Second Generation Results", "start_char_idx": 3891, "end_char_idx": 8035, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "671aa048-0889-4f1c-8e36-b6caebc9dbf6": {"__data__": {"id_": "671aa048-0889-4f1c-8e36-b6caebc9dbf6", "embedding": null, "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08", "node_type": "4", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "86600e15f03fd9bfa7e0cdb7a384a2dde360746b9b4887331b0cd6fbcf990bd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "786851fd-31c4-49ab-b9ea-78628c8da589", "node_type": "1", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "0255d935feac40b89534c75ba2f979be51d455f1a8e998dc06d63eca54af7ed4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6591bc55-10d9-4efc-8c07-eea5efd546c6", "node_type": "1", "metadata": {}, "hash": "3c629e8ac80a8ca15c81c0855ca3be74a40ae0280af29fd7c668c13f0aba1053", "class_name": "RelatedNodeInfo"}}, "text": "6/13/2024 Cho         13\n---\n          Reuse common sub-structure\n     \u25fc Eliminate Duplicate 8-bit Comparators\n                 8          B                        A\n      4Byte      8          A  B                     B  A\n       Input     8          B  A   B                 A  B   A\n                 8          A  B   A B               B  A   B A\n\n\n                            B  A   B\n                               B   A\n                                   B\n\n\nNumber of 8bit= 26            Rule for                 Rule for\n                    = 24\n                    = 8\n                       = 23\n                           = 18\u201cBABAB\u201d                 \u201cABAB\u201d\n  Comparators\n\n\n                                           6/13/2024 Cho         14\n---\nSecond Generatkn Resulss\n Second Generation Results\n\n\n \uf097 Logic Reuse Design and Encoder\n    \u25e6 4 bytes: 1,519 unique patterns (19,021 bytes)\n    \u25e6 1 byte: 1,661 unique patterns (20,800 bytes)\n \uf097 Area\n    \u25e6 4 bytes: 26,607 LUT (~1.40 LUT/byte)\n    \u25e6 1 byte: 16,930 LUT (~0.81 LUT/byte)\n    \u25e6 Single Xilinx Spartan 3 \u2013 1500 FPGA (< $20)\n \uf097 Performance\n    \u25e6 4 bytes: 3.2 \u2013 8 Gbps\n    \u25e6 1 byte: 0.8 \u2013 2.0 Gbps\n \uf097 Cost and Performance Trade-off\n\n\n                                6/13/2024 Cho        15\n---\n    Implementaton Result ChartBandwidth (Gbps)Implementation Result Chart\n8\n7\n6\n5                        Gen 2a: Logic                      Gen 1: Discrete\n                          Reuse 4 byte                       Logic 4 bytes\n4\n3\n                         Gen 2b: Logic\n2                         Reuse 1 byte\n\n\n1                        Gen 2a: Logic\n                          Reuse 1 byte\n0\n  0           2            4           6           8          10          12\n                          Unit Area (LUTs/Byte)\n\n\n                                         6/13/2024 Cho                        16\n---\nEmbedkded Memortes In FPGAs\nEmbedded Memories in FPGAs\n \uf097 FPGA Resources\n   \u25e6 Memories are distinct from the logic\n   \u25e6 If not included in the design, it remains unused\n \uf097 Memory Based Design\n   \u25e6 Off-load reconfigurable logic resource\n   \u25e6 Enable the design to fit in smaller FPGA\n \uf097 Design Methodology\n   \u25e6 Filtering the pattern based on the substring\n   \u25e6 Verifying filtered pattern with exact match\n\n\n                            6/13/2024 Cho              17\n---\nMemory Based Content Match\n Memory Based Content Match\n\n\n                          Discrete logic\n                         content matcher\n                                                   MemoryEncoderAddr\n                        HELLOATTACK\n                                   HELLOATTACK         COMP         match\n               Data InputTHISISAVIRUS\n                                     THISISAVIRUS\n                        IAMAWORM\n                                IAMAWORM\n                        CODEREDVIRUS\n                                    CODEREDVIRUS\n                        NIMDAWORM\n                                 NIMDAWORM\n                        BLASTERWORM\n                                   BLASTERWORM\n                        EMAILATTACK\n                                   EMAILATTACK\n                        BUFFEROVERFLOW\n                                      BUFFEROVERFLOW\n                        SCRIPTATTACK\n                                    SCRIPTATTACK\n\n\n                                 When there is a Match\n    Prefix Set                Address can be forwardedSuffix Set6/13/2024 Cho  18\n---\n          Increaslng Memory Udlbzaton\n           Increasing Memory UtilizationN entries\u25fc Patterns are Different Lengths\n\n\n                                        (K+1) bits wide\n\n\n(N/2) entries\u25fc Increased Memory Utilization\n            K bits wide\n\n\n                                      6/13/2024 Cho                19\n---\nThird Generatkn\nThird Generation\n\n\n \uf097 ROM Based Design\n    \u25e6 4 bytes: 495 Patterns (6,805 bytes)\n    \u25e6 1 byte: 1,625 unique patterns (20,800 bytes)\n \uf097 Area\n    \u25e6 4 bytes: 6,136 LUT & 90 kbits of memories\n    \u25e6 1 byte: 4,415 LUT & 162 kbits of memories\n    \u25e6 Maps in Spartan 3 \u2013 400k FPGA (< $6.50/chip)\n \uf097 Performance\n    \u25e6 4 bytes: 3.2 Gbps \u2013 8 Gbps\n    \u25e6 1 byte: 1.6 Gbps \u2013 2.17 Gbps", "start_char_idx": 7228, "end_char_idx": 11399, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6591bc55-10d9-4efc-8c07-eea5efd546c6": {"__data__": {"id_": "6591bc55-10d9-4efc-8c07-eea5efd546c6", "embedding": null, "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08", "node_type": "4", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "86600e15f03fd9bfa7e0cdb7a384a2dde360746b9b4887331b0cd6fbcf990bd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "671aa048-0889-4f1c-8e36-b6caebc9dbf6", "node_type": "1", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "3d94f0f85c045fc6f661e7f40baf4ffa4cc2a49edc1c81b455806ec8c6a1ed52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e84738aa-e629-4424-8f62-69a903d0eb34", "node_type": "1", "metadata": {}, "hash": "d56b92712aed2742e0ad2791cab4ffd5cfa9de2f2437073e592e23b3e4b64839", "class_name": "RelatedNodeInfo"}}, "text": "(K+1) bits wide\n\n\n(N/2) entries\u25fc Increased Memory Utilization\n            K bits wide\n\n\n                                      6/13/2024 Cho                19\n---\nThird Generatkn\nThird Generation\n\n\n \uf097 ROM Based Design\n    \u25e6 4 bytes: 495 Patterns (6,805 bytes)\n    \u25e6 1 byte: 1,625 unique patterns (20,800 bytes)\n \uf097 Area\n    \u25e6 4 bytes: 6,136 LUT & 90 kbits of memories\n    \u25e6 1 byte: 4,415 LUT & 162 kbits of memories\n    \u25e6 Maps in Spartan 3 \u2013 400k FPGA (< $6.50/chip)\n \uf097 Performance\n    \u25e6 4 bytes: 3.2 Gbps \u2013 8 Gbps\n    \u25e6 1 byte: 1.6 Gbps \u2013 2.17 Gbps\n\n\n                               6/13/2024 Cho        20\n---\nBandwidth (Gbps)\n           8      Implementation Result Chart\n           7       PAC2\u201904\n\n\n           6        Gen 3b: ROM     Gen 3a: ROM   FCCM\u201904\n                    based 1 byte    based 4 byte\n           5                               Gen 2a: Logic                    Gen 1: Discrete\n                                           Reuse 4 byte                      Logic 4 bytes\n           4\n           3\n                                           Gen 2b: Logic\n           2                               Reuse 1 byte\n\n\n           1                               Gen 2a: Logic\n                                           Reuse 1 byte\n           0\n               0             2              4              6             8     10            12\n                                           Unit Area (LUTs/Byte)\n\n\n                                                             6/13/2024 Cho                       21\n---\nCorcerns &r Reconfgurabb Detks\nConcerns for Reconfigurable Designs\n\n\n \uf097 Signature Updates\n   \u25e6 New signature produces new design\n   \u25e6 Recompilation time can be minutes to days\n   \u25e6 30 patterns added between Oct\u201904 and Jan\u201905\n   \u25e6 Average of 1 pattern added every 1 to 3 days\n \uf097 Expectations\n   \u25e6 UCSD \u2013 Automatic Worm Fingerprinting\n   \u25e6 New attacks identified at a faster rate\n   \u25e6 Design update should keep up\n   \u25e6 Software programmable solution?6/13/2024 Cho  22\n---\nPattern Detection ModulePattem Match Coprocessor\n         Pattern Match Co-processor\n\n\n     data                               din\n        0                               we\n     addr                      1           dout\n                     Pattern Detection  addr Long Pattern\n     hash       Reg    HashModule0          State Machine\n                                        Memory\n\n\n     input                                       offset length pattern flag index\n Packet Data                                                        Pattern\n                      0            1                                Index\n\n\n                        0        1\n\n\n                                      Comp\n\n\n                                     Cho  6/13/2024 Cho                       23\n---\nPattem Deuectkn Modub\n Pattern Detection Module\n\n\n       data                                     din                              Custom\n          0                                     we        0\n                                                           0\n                                                            2    3\n                                                                  4\n                                                                   4ONE\n                                                                       NETW\n                                                                           BEEFS\n                                                                                L\n                                                                                 SIndex69\n       addr                          1              dout\n                                         79\n                                           78   addr\n       hash        Reg      Hash     0          Memory\n\n\n       input           W T N N\n                       T E T78 E\n                                79 O N OE                 offset length pattern flag index\n                                                          0\n                                                           0\n                                                            1\n                           0              1\n\n\n                             0          1                 0\n                                                           0\n                                                            0\n\n\n   Data Input Sequence                        Comp\n    O N E T W O R K                            1\n                                               1\n                                                0\n                                           pattern match byte offset          flag index\n\n\n                                                  6/13/2024 Cho                             24\n---\nPattern Detection ModulePattern Match Co-processor\n\n\n       data                                     din\n         0                                      we\n      addr                           1              dout\n                          Pattern Detection     addr  Long Pattern\n      hash         Reg      HashModule0              State Machine\n                                                Memory\n\n\n                      K   R   O  W    T  E   N            offset length pattern flag index\n Packet Data                                                                     Pattern\n                          0               1                                      Index\n\n\n                             0         1\n\n\n  Data Input Sequence                         Comp\n\n\n                                          pattern match byte offset            flag index\n\n\n                                            Cho   6/13/2024 Cho                             25\n---\n          Frorktto\n          Predictive Long Pattern State MachineLoneFattem Stto Machto", "start_char_idx": 10852, "end_char_idx": 16647, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e84738aa-e629-4424-8f62-69a903d0eb34": {"__data__": {"id_": "e84738aa-e629-4424-8f62-69a903d0eb34", "embedding": null, "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08", "node_type": "4", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "86600e15f03fd9bfa7e0cdb7a384a2dde360746b9b4887331b0cd6fbcf990bd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6591bc55-10d9-4efc-8c07-eea5efd546c6", "node_type": "1", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "a8aa12a9c3030373a9c615707d1c380a3e51fa59fc651bbcdb7785bd994855ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "663bc06b-5690-47f6-90be-87c41c19d856", "node_type": "1", "metadata": {}, "hash": "6eceeca9196f6f6e9072ea10d2d789bd8a1b09a5c44358ec02278fb3d04dba6e", "class_name": "RelatedNodeInfo"}}, "text": "Data Input Sequence                        Comp\n    O N E T W O R K                            1\n                                               1\n                                                0\n                                           pattern match byte offset          flag index\n\n\n                                                  6/13/2024 Cho                             24\n---\nPattern Detection ModulePattern Match Co-processor\n\n\n       data                                     din\n         0                                      we\n      addr                           1              dout\n                          Pattern Detection     addr  Long Pattern\n      hash         Reg      HashModule0              State Machine\n                                                Memory\n\n\n                      K   R   O  W    T  E   N            offset length pattern flag index\n Packet Data                                                                     Pattern\n                          0               1                                      Index\n\n\n                             0         1\n\n\n  Data Input Sequence                         Comp\n\n\n                                          pattern match byte offset            flag index\n\n\n                                            Cho   6/13/2024 Cho                             25\n---\n          Frorktto\n          Predictive Long Pattern State MachineLoneFattem Stto Machto\n\n\n data          din                                                 Index     Pattern\n   0           we        XX\n                           82  X4     F\n                                       L                             79      NETW\n       79\n         82        dout\ninput          addr                                                  82       ORK\n               Memory\n\n\n         index            next  delay type\n                                      0\n                                       1                           l          1\n                                                                               0\n                                  Decoder/Controller               m\n                                1     0    0   0                             r    long\n                                                                                  pattern\n                                                                                  index\n                00   0      0 0      0  0     0   0      82\n                     1        1         1         1             10\n                                                        Comp\n\n\n                                                                  Clock Cycle: 187\n                                                                                  34\n                                                                                    5\n                                                                                     6\n                                                                                      0\n                                                                                       2\n\n\n                                                 6/13/2024 Cho                             26\n---\nPredictive Long Pattern State MachinePattern Match Co-processor\n\n\n data          din\n   0           we\n                  dout\ninput          addr     Pattern Detection         Long Pattern\n               Memory        Module              State Machine\n\n\n         index           next delay type\n  Packet Data                                                   l    Pattern\n                                                                m    Index\n                                Decoder/Controller\n                                                                   r\n\n\n                0   0        0         0       0\n                    1        1         1       1      Comp\n\n\n                                         Cho   6/13/2024 Cho                  27\n---\n       Pattem Match Coprocessor\n       Pattern Match Co-processor\n\n\n     Parallel                                        Parallel\n\n\n           s      Pattern Detection    Long Pattern           s\n                       Module         State Machine\n\n\nPacket Data                                           Pattern\n                                                      Index\n\n\n\uf097 Issue: Patterns may Share Hash Value\n\uf097 Regular Expressions\n\n\n                                     6/13/2024 Cho             28\n---\nPatter\n Pattern Mapping and ProgrammingMapping and Prosramming\n\n\n  \uf097 Mapping Algorithm\n    \u25e6 Break long patterns into short segments\n    \u25e6 Greedy mapping heuristics\n  \uf097 ASIC Design\n    \u25e6 Eight PDM (8 units 512x146bits SRAM = 75KB)\n    \u25e6 Eight LPSM (8 units 512x29bits SRAM = 15KB)\n  \uf097 Execution Time\n    \u25e6 Mapping: 800 msec for entire Snort patterns\n    \u25e6 Programming: SRAM latency\n\n\n                               6/13/2024 Cho             29\n---\n     Fourth Generatkn Resuk\n     Fourth Generation Result\n\n\n  Module           Area        Units x Area Critical Path\nPDM Logic       0.075 mm2       0.600 mm2        < 1.0 ns\nLPSM Logic      0.024 mm2       0.188 mm2        < 1.0 ns\n   PDM          0.844 mm2       6.752 mm2        1.12 ns\n  Memory\n   LPSM         0.168 mm2       1.342 mm2        1.12 ns\n  Memory\nTotal Area           -          8.882 mm2        1.12 ns\n\n\n                             7.144 Gbps        ~ 893 Mhz\n\n\n                                 6/13/2024 Cho             30\n---\nBandwidth (Gbps)\n            8     Implementation Result Chart\n\n\n                                     Gen 4: ASIC", "start_char_idx": 15213, "end_char_idx": 20793, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "663bc06b-5690-47f6-90be-87c41c19d856": {"__data__": {"id_": "663bc06b-5690-47f6-90be-87c41c19d856", "embedding": null, "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08", "node_type": "4", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "86600e15f03fd9bfa7e0cdb7a384a2dde360746b9b4887331b0cd6fbcf990bd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e84738aa-e629-4424-8f62-69a903d0eb34", "node_type": "1", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "43ac65207ffecc6a24201491b9ce5558a2cc680080b5348c9fffbc7c586f449f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7fd29e75-c8be-4ca8-8a5b-1cf0761cc4c4", "node_type": "1", "metadata": {}, "hash": "af6d6a98da4217abb9a72a9f33876fc118f3e31006dafc79f107a4b19b277016", "class_name": "RelatedNodeInfo"}}, "text": "Module           Area        Units x Area Critical Path\nPDM Logic       0.075 mm2       0.600 mm2        < 1.0 ns\nLPSM Logic      0.024 mm2       0.188 mm2        < 1.0 ns\n   PDM          0.844 mm2       6.752 mm2        1.12 ns\n  Memory\n   LPSM         0.168 mm2       1.342 mm2        1.12 ns\n  Memory\nTotal Area           -          8.882 mm2        1.12 ns\n\n\n                             7.144 Gbps        ~ 893 Mhz\n\n\n                                 6/13/2024 Cho             30\n---\nBandwidth (Gbps)\n            8     Implementation Result Chart\n\n\n                                     Gen 4: ASIC\n\n\n            7                           1 byte\n            6      Gen 3b: ROM      Gen 3a: ROM\n                    based 1 byte     based 4 byte\n            5                              Gen 2a: Logic                     Gen 1: Discrete\n                                           Reuse 4 byte                       Logic 4 bytes\n            4\n            3\n                                           Gen 2b: Logic\n            2                              Reuse 1 byte\n\n\n            1                              Gen 2a: Logic\n                                           Reuse 1 byte\n            0\n               0             2               4              6             8     10            12\n                                            Unit Area (LUTs/Byte)\n\n\n                                                              6/13/2024 Cho                       31\n---\nBest of Both Patformns\n Best of Both Platforms\n\n\n \uf097 Compactness of FPGA design\n \uf097 Fast Re-programmability of Co-processor\n \uf097 Option 1: Single FPGA\n    \u25e6 Large reconfigurable filter design\n    \u25e6 Small programmable co-processor\n \uf097 Option 2: FPGA and small ASIC\n    \u25e6 FPGA for reconfigurable filter\n    \u25e6 Small ASIC for new signatures\n\n\n                            6/13/2024 Cho   32\n---\n         Hypbrld Alter\n          Hybrid Filter\n\n\n                  New Pattern Set                                       Difference\n\n\n                               Input\nFilter                                                                    FPGA Compiler\n\n\n      Area Efficient              Programmable\n     Pattern Set 1\n                  Pattern Set 1UCLA ROMPattern\n                                       Empty\n       based FPGA                    Detection\n       Pattern Filter             Co-processor                              Compilng \u2026Finished\n                                                                           Please wait \u2026Compiling!\n                Index A                       Index BProgram Interface\n\n\n                                                         6/13/2024 Cho                              33\n---\nHybrld Deslon Implementadon\n Hybrid Design Implementation\n\n\n  \uf097 Single FPGA Option\n     \u25e6 Virtex 4 LX15\n     \u25e6 Custom and Fixed Hardware\n  \uf097 ROM Based Design\n     \u25e6 Filters most of the patterns\n     \u25e6 Automatic hardware generation\n  \uf097 Co-processor\n     \u25e6 Filters updated patterns\n     \u25e6 Four PDM (4 \u2013 256x72bits)\n     \u25e6 One retrospective LPSM (1024x18bits)\n     \u25e6 Relatively small pattern set (less than 100)\n     \u25e6 Simple and fast mapping algorithm\n\n\n                                    6/13/2024 Cho    34\n---\nHybrld FRGA Resutt\n Hybrid FPGA Result\n\n\n  \uf097 Design in Single FPGA\n     \u25e6 Oct 19, 2004: 2,031 unique patterns (32,168 bytes)\n     \u25e6 Jan 13, 2005: 2,044 unique patterns (32,384 bytes)\n     \u25e6 Eliminated patterns: 17 patterns (91 bytes)\n     \u25e6 Added patterns: 30 patterns (307 bytes)\n  \uf097 Area (Oct 19 and Small Co-processor)\n     \u25e6 8,480 LUT (~0.26 LUT/byte) \u2013 2,031 patterns\n     \u25e6 270 kbits (15 block memories) \u2013 30 patterns\n     \u25e6 Xilinx Virtex 4 LX15\n  \uf097 Performance\n     \u25e6 2.08 Gbps\n\n\n                                  6/13/2024 Cho            35\n---\nBandwidth (Gbps)\n            8      Implementation Result Chart\n\n\n                                       Gen 4: ASIC\n\n\n            7                             1 byte\n            6        Gen 3b: ROM      Gen 3a: ROM\n                      based 1 byte     based 4 byte\n            5                                Gen 2a: Logic                      Gen 1: Discrete\n                                              Reuse 4 byte                        Logic 4 bytes\n            4                                 Gen 3b & 4:\n                                              Hybrid 1 byte\n            3\n                                             Gen 2b: Logic\n            2                                 Reuse 1 byte", "start_char_idx": 20192, "end_char_idx": 24667, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7fd29e75-c8be-4ca8-8a5b-1cf0761cc4c4": {"__data__": {"id_": "7fd29e75-c8be-4ca8-8a5b-1cf0761cc4c4", "embedding": null, "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08", "node_type": "4", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "86600e15f03fd9bfa7e0cdb7a384a2dde360746b9b4887331b0cd6fbcf990bd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "663bc06b-5690-47f6-90be-87c41c19d856", "node_type": "1", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "c0da80cbee90ba746843fcc7f3e0c2d62a5ce8f4a1b48935e19a6efe5d54c188", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "186ee6e9-4d27-4d5b-ab19-4dae6bbe096d", "node_type": "1", "metadata": {}, "hash": "a7d222278352ad9fa125426e1b2a7116b631fe45aecc32ed15ba43dadf426b51", "class_name": "RelatedNodeInfo"}}, "text": "6/13/2024 Cho            35\n---\nBandwidth (Gbps)\n            8      Implementation Result Chart\n\n\n                                       Gen 4: ASIC\n\n\n            7                             1 byte\n            6        Gen 3b: ROM      Gen 3a: ROM\n                      based 1 byte     based 4 byte\n            5                                Gen 2a: Logic                      Gen 1: Discrete\n                                              Reuse 4 byte                        Logic 4 bytes\n            4                                 Gen 3b & 4:\n                                              Hybrid 1 byte\n            3\n                                             Gen 2b: Logic\n            2                                 Reuse 1 byte\n\n\n            1                                Gen 2a: Logic\n                                              Reuse 1 byte\n            0\n                0              2               4              6              8     10            12\n                                              Unit Area (LUTs/Byte)\n\n\n                                                                 6/13/2024 Cho                       36\n---\nBandwdth Aer UnkAeaBandwidth/AreaBandwidth Per Unit Area(Gbps per LUT/Byte)\n\n\n 15                                          Gen 4: ASIC Co-proc\n 14                                             1 byte (80KB)\n 13                                              Gen 3b: ROM\n 12                                              1 byte (23KB)\n 11                                         ROM 4 byte\n 10                                        (Gen 3a) 11KB            Gen 3b&4: Hybrid1 byte (34KB)\n  9                                 Logic Reuse\n  8                                1byte (Gen 2b)\n  7\n  6                        Logic Reuse\n                          1 byte (Gen 2a)\n  5\n  4                Logic Reuse\n                 4 bytes (Gen 2a)\n  3\n  2      Discrete Logic\n        4 bytes (Gen 1)\n  1\n  0\n\n\n                                             6/13/2024 Cho                                   37\n---\nEmerelng NetworkAttacks\n Emerging Network Attacks\n\n\n  \uf097 Undetectable Attacks\n    \u25e6 Polymorphic attacks\n    \u25e6 No fixed pattern\n  \uf097 Examples already exist in Virus\n    \u25e6 Cascade \u2013 self encrypting attack\n    \u25e6 Mutation Engine (MtE)\n    \u25e6 V2P6 \u2013 Vary instruction sequences\n  \uf097 Faster and more complex network\n\n\n                            6/13/2024 Cho  38\n---\n Exampla of Polymorphk Attack\n  Example of Polymorphic Attack\n\n\n/*** MATTACK.C ***/\n                   /*** MATTACK.C ***/    /*** MATTACK_NEXTGEN.C ***/\n...\n   ...\nLabel Main:\n           Label Main:\n    if (varABC==time())\n                       if (varABC==time())        varXYZ\n       then goto Attack;\n                        then goto Attack;                   Destroy;\nend Main.\n         end Main.\n...\n   ...\nLabel Attack:\n             Label Attack:                       Destroy:\n    generate copy;\n                  generate copy;\n    morph copy;\n               morph copy;\n    send morphed copy to net;\n                             send morphed copy to net;\n    do something destructive;\n                             do something destructive;\nend Attack;\n           end Attack;                         Destroy;\n...\n   ...\n\n\n                                        6/13/2024 Cho                  39\n---\n  Example of Polymorphic Attack\n\n\n/*** MATTACK.C ***/\n...\nLabel Main:\n    if (varABC==time())                                varABC\n       then goto Attack;\nend Main.\n...\nLabel Attack:                                        Attack:\n    generate copy;              Signature for MATTACK.C\n    morph copy;\n    send morphed copy to net;Look for String Patterns\n\n\n    do something destructive;\nend Attack;\n...\n\n\n                                     { varABC, Attack }Signature Generator\n\n\n                                         6/13/2024 Cho                      40\n---\n           Example of Polymorphic Attack\n\n\n        Signature for MATTACK.C\n         Look for String Patterns\n\n\n  MATTACK\nNEXTGEN.C\n         MATTACK.C\n           { varABC, Attack }\n\n\n                                         6/13/2024 Cho  41\n---\nPolmorphk Intuskn Detecton\n Polymorphic Intrusion Detection\n\n\n  \uf097 Context Free Grammar\n    \u25e6 Language syntax\n    \u25e6 Most computer languages\n    \u25e6 Higher level of expression\n  \uf097 Leverage Existing Compiler technology\n    \u25e6 Lexical analysis\n    \u25e6 Syntactic analysis\n  \uf097 Critical Issue\n    \u25e6 Matter of expressing polymorphic attacks\n\n\n                            6/13/2024 Cho       42\n---\nCuntent Technokey Trend\n Current Technology Trend", "start_char_idx": 23924, "end_char_idx": 28491, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "186ee6e9-4d27-4d5b-ab19-4dae6bbe096d": {"__data__": {"id_": "186ee6e9-4d27-4d5b-ab19-4dae6bbe096d", "embedding": null, "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08", "node_type": "4", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "86600e15f03fd9bfa7e0cdb7a384a2dde360746b9b4887331b0cd6fbcf990bd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fd29e75-c8be-4ca8-8a5b-1cf0761cc4c4", "node_type": "1", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "e9c8291bdfc7b62336ddfe692f7f126f814d21d3f25f0f314b05a463ad05841f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fbd7f212-63f7-4f1d-9ab5-933aaa955050", "node_type": "1", "metadata": {}, "hash": "3852ac9456fbd1382761f33719d602c55db12f0fcbe1f51f942997946477c67a", "class_name": "RelatedNodeInfo"}}, "text": "{ varABC, Attack }Signature Generator\n\n\n                                         6/13/2024 Cho                      40\n---\n           Example of Polymorphic Attack\n\n\n        Signature for MATTACK.C\n         Look for String Patterns\n\n\n  MATTACK\nNEXTGEN.C\n         MATTACK.C\n           { varABC, Attack }\n\n\n                                         6/13/2024 Cho  41\n---\nPolmorphk Intuskn Detecton\n Polymorphic Intrusion Detection\n\n\n  \uf097 Context Free Grammar\n    \u25e6 Language syntax\n    \u25e6 Most computer languages\n    \u25e6 Higher level of expression\n  \uf097 Leverage Existing Compiler technology\n    \u25e6 Lexical analysis\n    \u25e6 Syntactic analysis\n  \uf097 Critical Issue\n    \u25e6 Matter of expressing polymorphic attacks\n\n\n                            6/13/2024 Cho       42\n---\nCuntent Technokey Trend\n Current Technology Trend\n\n\n \uf097 It\u2019s ALL about the Cloud and the Internet\n \uf097 Everything uses the Internet\n     \u25e6 Commoditized part of our lives\n     \u25e6 Knowledgebase\n     \u25e6 Commercial Hub\n     \u25e6 Expected to be available everywhere reliably\n     \u25e6 Growing Security Problems \u2013 because There\u2019s nearly NONE!\n \uf097 All Bets are on the Cloud\n     \u25e6 Computing Offloaded from Personal Device to Cloud\n     \u25e6 Most Hardware and Software Developments are for the Cloud\n     \u25e6 Intel, AMD, and Nvidia are examples of HW Giants\n     \u25e6 Google, Microsoft, and Amazon are examples of SW Giants\n     \u25e6 New Network developments are for the Cloud\n\n\n                                          6/13/2024 Cho           43\n---\nBack t0 Securlty Probkem\n Back to Security Problem\n\n\n  \uf097 Security Problems of the Internet\n  \uf097 Cloud is connected to the Internet\n  \uf097 Cloud has Hardware Accelerators\n      \u25e6 GPU, FPGA, and Application Specific\n         Infrastructures are Actively being Developed\n         and Integrated\n\n\n                                              6/13/2024 Internetworking and Dist. Systems  44\n---\nCbud FPGA System\n Cloud FPGA System\n\n\n  \uf097 FPGA with different modules\n  \uf097 One or more FPGAs per server\n  \uf097 Multiple servers with FPGAs\n  \uf097 Leverage storage or CPUs for Input\n\n\n                                                        FPGA-to-FPGA\n                                                   Otherinterconnect\n                                           Other  FPGAs             PCIe\n                                          servers                  Module\n                                                          PCIe     IP core\n                                                          wires\n\n\n                                                                       User\n                                                                       Logic\n                                             Network                  FPGA chip\n\n\n                                                                 PCIe\n                                         Network                 wires FPGA board\n                                                        Server\n                       Cloud FPGA Users\n\n\n                                                                               45\n---\nFPGA Interfaco\n FPGA Interface\n\n\n  \uf097 FPGA Communication Logic\n  \uf097 Input and output to FPGA after processing\n     \u25e6 Many interface standards exist:\n\n\n                                                           * Diagram is not to scale\n     \u25e6 Serial port, USB\n     \u25e6 Ethernet, QSFP, QSFP+, SATA                          PCIe\n     \u25e6 PCI Express (PCIe)                                  Module\n     \u25e6 Custom                                              IP core\n  \uf097 PCIe was the standard                                       User\n  \uf097 RDMA Taking Over                                           FPGA chip\n                                                                        Logic\n\n\n                                                        PCIe\n                                                        (carry FPGA board\n                                               Server  control\n                                                       and data)\n\n\n                                                                            46\n---\nServr WthAMD FRGAs\n Server with AMD FPGAs\n\n\n \uf097 Main CPU for Server Control\n \uf097 Network interfaces for communication\n \uf097 Multiple Xilinx Alveo U250 accelerator cards\n\n\n            Cooling fans, FPGAs are passive\n             (can have FPGAs with own fans)   Host CPU, disk, etc.\n\n\n             FPGA boards\n\n\n   QSFP connectors on FPGA\n           boards\n                                          FPGA PCIe connections\n                                                  (inside)\n\n\n            Server\u2019s network ports\n\n\n                                                                   47\n---\n        FRGA Interconnectons\n         FPGA Interconnections\n\n\n\uf097 FPGA boards have QSFP connectors\n\uf097 Some with Direct Connections\n\n\n                                                        FPGA-to-FPGA\n                                                         interconnect\n                                  Other\n\n\n                                 servers3       Network\n                                  Network     0\n                  {44 &r                            PCIe\n                                           Server        FPGA boards\n                                                                   48\n---\nFPGAs used In Ckoud\nFPGAs used in Cloud", "start_char_idx": 27689, "end_char_idx": 32997, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fbd7f212-63f7-4f1d-9ab5-933aaa955050": {"__data__": {"id_": "fbd7f212-63f7-4f1d-9ab5-933aaa955050", "embedding": null, "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08", "node_type": "4", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "86600e15f03fd9bfa7e0cdb7a384a2dde360746b9b4887331b0cd6fbcf990bd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "186ee6e9-4d27-4d5b-ab19-4dae6bbe096d", "node_type": "1", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "2afad7783e5ecf090d6091de5d5889cbc741f274dc915b233f18e7b9db3cadb0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24ef0355-f887-4ffd-875d-de33f6266cf5", "node_type": "1", "metadata": {}, "hash": "137b54357fd9da01bd3474b646c014d4129b285dc58788e9b7f355bbbbaff6cd", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Main CPU for Server Control\n \uf097 Network interfaces for communication\n \uf097 Multiple Xilinx Alveo U250 accelerator cards\n\n\n            Cooling fans, FPGAs are passive\n             (can have FPGAs with own fans)   Host CPU, disk, etc.\n\n\n             FPGA boards\n\n\n   QSFP connectors on FPGA\n           boards\n                                          FPGA PCIe connections\n                                                  (inside)\n\n\n            Server\u2019s network ports\n\n\n                                                                   47\n---\n        FRGA Interconnectons\n         FPGA Interconnections\n\n\n\uf097 FPGA boards have QSFP connectors\n\uf097 Some with Direct Connections\n\n\n                                                        FPGA-to-FPGA\n                                                         interconnect\n                                  Other\n\n\n                                 servers3       Network\n                                  Network     0\n                  {44 &r                            PCIe\n                                           Server        FPGA boards\n                                                                   48\n---\nFPGAs used In Ckoud\nFPGAs used in Cloud\n\n\n \uf097 Xilinx Virtex UltraScale+ FPGA VCU1525\n     \u25e6 Very similar to card used in Amazon F1\n                                                                          4AXILINX\n     \u25e6 2,500,000 logic cells\n     \u25e6 Thermal Design Power (TDP) of 225W\n     \u25e6 Up to PCIe 4.0 and DDR4 and QSFP networking\n \uf097 Xilinx Alveo U200/U250/U280 Accelerator Cards\n                                                                            ALVEO;EnnY\n     \u25e6 Likely cards for Amazon F1 SDAccel\n     \u25e6 800,000 to 1,000,000 LUTs\n     \u25e6 Thermal Design Power (TDP) of 225W\n     \u25e6 Up to PCIe 4.0 and DDR4 and QSFP networking\n \uf097 Catapult FPGA Accelerator Card (Microsoft + Intel FPGAs)\n     \u25e6 Altera Stratix V GS D5\n     \u25e6 172,000 ALMs\n     \u25e6 PCIe 3.0 and DDR3\n\n\n                                                        EENG 428 / ENAS 968 \u2013 Cloud Computing\n                                                        with FPGAs\n                                                        \u00a9 Jakub Szefer                         49\n---\nFPGA Cands\nFPGA Cards\n\n\n \uf097 Xilinx Alveo U50 Accelerator Card (2019)\n     \u25e6 Uses Xilinx\u2019s 16nm UltraScale+ FPGA architecture\n     \u25e6 800,000 LUTs                                                             U50~ALVEO\n     \u25e6 Thermal Design Power (TDP) of 75W\n     \u25e6 PCIe 4.0 and HBM2\n     \u25e6 QSFP networking\n \uf097 Intel D5005 Programmable Acceleration Card (2019)\n     \u25e6 Uses Intel\u2019s 14nm Stratix 10 SX FPGA architecture\n     \u25e6 2,800,000 logic elements\n     \u25e6 Thermal Design Power (TDP) of 215W                         (intel\n     \u25e6 PCIe 3.0 and DDR4\n     \u25e6 QSFP networkingImages and informationfrom [2] and [3]\n\n\n                                                        EENG 428 / ENAS 968 \u2013 Cloud Computing\n                                                        with FPGAs\n                                                        \u00a9 Jakub Szefer                        50\n---\nCkud FPGA Server Softwara\n Cloud FPGA Server Software\n\n\n \uf097 Hypervisor, guest VMs, and applications running on the VMs\n \uf097 Hypervisor is controlled by the cloud provider\n \uf097 Users provide guest VM images\n \uf097 Users provide applications and software that run in VMs\n \uf097 VM images with FPGA development and programming\n\n\n                        AppApp      AppApp        AppApp\n               Ring 3      App         App           App\n\n\n                        Guest       Guest    \u2026    Guest\n               Ring 0     VM          VM            VM\n\n\n               Ring -1          Hypervisor (VMM)\n\n\n                                    Hardware\n\n\n                                                               Server51\n---\nGuestVand Lbrarles\n  Guest VM and Libraries\n\n\n   \uf097 FPGA programming tools\n       \u25e6 Verilog,VHLD, SystemVerilog, etc.\n       \u25e6 High-Level Synthesis\n       \u25e6 E.g. Xilinx Vivado or Intel Quartus\n   \uf097 FPGA programming tools can be run: locally by user, on VM (without\n      FPGA), on VM (with FPGA)\n   \uf097 Tools (often command line) for checking status, programming, clean up, etc.\n   \uf097 Libraries for programming languages (e.g., C or Python)\n      for sending and receiving data from the FPGA\n       \u25e6 (slow) Read or write data word by word \u2013 user initiates each read or write\n       \u25e6 (faster) Bulk copy of data \u2013 copy data word by word, but under control of a\n          library function\n       \u25e6 (fastest) Direct Memory Access \u2013 copy data in large chunks between DRAM and\n          FPGA\n\n\n                                                                                      52\n---\nHardiare Devebpment Kits\n Hardware Development Kits", "start_char_idx": 31802, "end_char_idx": 36511, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24ef0355-f887-4ffd-875d-de33f6266cf5": {"__data__": {"id_": "24ef0355-f887-4ffd-875d-de33f6266cf5", "embedding": null, "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d600d56a-db3b-43a2-93ab-b51abaedfe08", "node_type": "4", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "86600e15f03fd9bfa7e0cdb7a384a2dde360746b9b4887331b0cd6fbcf990bd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fbd7f212-63f7-4f1d-9ab5-933aaa955050", "node_type": "1", "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}, "hash": "8e0b139cab729605d4233533d3789ac405848030263c126d7be5db85aef749f6", "class_name": "RelatedNodeInfo"}}, "text": "52\n---\nHardiare Devebpment Kits\n Hardware Development Kits\n\n\n  \uf097 Create and compile a design for the FPGA\n     \u25e6 Design must include required parts such as PCIe, which\n        is part of the shell in AWS terminology\n     \u25e6 Other parts are optional and up to the user, e.g. DRAM\n        and user logic; all must pass design check rules\n  \uf097 The FPGAs are loaded with FPGA Images (i.e. AFIs),\n     \u25e6 Once loaded, user can interact with the hardware\n\n\n                                                               53\n---\nDevelopment Optons\n Development Options\n\n\n  \uf097 Possible to Directly Program\n      \u25e6 But Too Difficult\n      \u25e6 CUDA is much easier because it is SW\n  \uf097 Prepackaged Development Solution\n      \u25e6 Needed to take over the market against GPU\n      \u25e6 Language of Choice seems to be OpenCL\n  \uf097 Learn to Use OpenCL\n      \u25e6 Used for GPU and other Accelerators\n      \u25e6 Including Nvidia Products\n      \u25e6 FPGA packages also use OpenCL\n\n\n                                         6/13/2024 Internetworking and Dist. Systems 54", "start_char_idx": 36453, "end_char_idx": 37480, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "92e0ff00-5258-4045-8f3e-4125cdb773e1": {"__data__": {"id_": "92e0ff00-5258-4045-8f3e-4125cdb773e1", "embedding": null, "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94f8b243-6631-4a28-83c2-1b837ff0fc14", "node_type": "4", "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "hash": "ede82e9cbd11061ef560724b17ace9141a9cca81c0edf3199fba39b6325eb4e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2417f4d-0f42-41aa-907d-564dde1a5bd4", "node_type": "1", "metadata": {}, "hash": "032680bc15dd6b04fcb15cd3495723adc984ceb62708288d626ef50a5c8dfde7", "class_name": "RelatedNodeInfo"}}, "text": "0EE 542Final Lecture: Career Advice\n                                   EE 542\n        FinalLecure: Career Ade\n        Internet and Cloud Computing\n\n\n        Young Cho\n        Department of Electrical Engineering\n        University of Southern California\n\n\n                             Based on UC Berkeley Prof. David Patterson\u2019s slides on his advice\n---\nCourse Schedub\n Course Schedule\n\n\n\uf097 Nov 22-26: Thanksgiving Break\n\uf097 Nov 27: Final Project Progress Presentation 1\n\uf097 Nov 29: Final Project Progress Presentation 2\n\uf097 Dec 13: Final Project Demo Video\n\uf097 Return MultiTech Gateway by Dec 13\n\n\n                                               6/13/2024 Internetworking and Distributed Systems  2\n---\n    Oudina\n     Outline\n\n\n\uf097 Part I: Key Advice for a Bad Career while a Grad Student\n\n\n\uf097 Part II: Key Advice on Alternatives to a Bad Graduate Career\n\n\n\uf097 Part III: Key Advice for a Bad Career, Post Graduate School\n\n\n\uf097 Part IV: Key Advice on Alternatives to a Bad Career, Post Graduate\n    school\n---\nPert I:Hkowto Htxa Bad Grdeto Creer\nPart I: How to Have a Bad Graduate Career\n\n\n \uf097 Concentrate on getting good grades:\n     \u25e6 postpone research involvement\n     \u25e6 might lower GPA\n \uf097 Minimize number and flavors of courses\n     \u25e6 Why take advantage of one of the top departments with an\n       emphasis on excellent grad courses?\n     \u25e6 Why take advantage of a campus with many excellent courses\n     \u25e6 May affect GPA\n \uf097 Don\u2019t trust your professor\n     \u25e6 Professor is only interested in his or her own career, not your\u2019s\n     \u25e6 Professor may try to mentor you, use up time, interfering with\n       GPA\n \uf097 Only work the number of hours you are supposed to\n     \u25e6 Don\u2019t let master class exploit the workers!\n---\nPart I: How to Have a Bad Graduate Career\n\n\n \uf097 Concentrate on graduating as fast as possible\n      \u25e6 Winner is first in class to receiving a degree\n      \u25e6 People only care about that you have a degree and your GPA, not on\n         what you know\n         \uf096 Nirvana: graduating in 1.5 years with a 4.0 GPA!\n      \u25e6 Don\u2019t spend a summer in industry: takes longer\n         \uf096 How could industry experience help with selecting a topic?\n      \u25e6 Don\u2019t work on large projects: takes longer\n         \uf096 Have to talk to others, have to learn different areas\n         \uf096 Synchronization overhead of multiple people\n      \u25e6 Don\u2019t do a systems degree: takes longer\n \uf097 Don\u2019t go to conferences\n      \u25e6 It costs money and takes time; you\u2019ll have plenty of time to learn the\n         field after graduating\n \uf097 Don\u2019t waste time polishing writing or talks\n      \u25e6 Again, that takes time\n---\n    Outline\n\n\n\uf097 Part I: Key Advice for a Bad Career while a Grad Student\n\n\n\uf097 Part II: Key Advice on Alternatives to a Bad Graduate Career\n\n\n\uf097 Part III: Key Advice for a Bad Career, Post Graduate School\n\n\n\uf097 Part IV: Key Advice on Alternatives to a Bad Career, Post Graduate\n   School\n---\n   Part II: Alternatives to a Bad Graduate Career\n\uf097 Concentrate on getting good grades?\n    \u25e6 Reality: need to maintain reasonable grades\n       \uf096 I have not give a grade below B- in any of my courses\n    \u25e6 What matters on graduation is letters of recommendation from\n       3-4 faculty/PhDs who have known you for 5+ years\n\uf097 Minimize number and flavors of courses?\n    \u25e6 Your last chance to be exposed to new ideas before have to\n       learn them on your own\n    \u25e6 Get a real outside minor from a campus with great departments\n       in all fields\n\uf097 Don\u2019t trust your professors?\n    \u25e6 Primary attraction of campus vs. research lab is getting to work\n       with grad students\n    \u25e6 Faculty career is judged in large part by success of his or her\n       students\n    \u25e6 try taking advice of professors?\n---\n    Part II: Alternatives to a Bad Graduate Career", "start_char_idx": 0, "end_char_idx": 3717, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2417f4d-0f42-41aa-907d-564dde1a5bd4": {"__data__": {"id_": "e2417f4d-0f42-41aa-907d-564dde1a5bd4", "embedding": null, "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94f8b243-6631-4a28-83c2-1b837ff0fc14", "node_type": "4", "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "hash": "ede82e9cbd11061ef560724b17ace9141a9cca81c0edf3199fba39b6325eb4e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92e0ff00-5258-4045-8f3e-4125cdb773e1", "node_type": "1", "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "hash": "93004ff4f7dec0f403b56fb0fd673db57840a3edb0c4781f848a6a0a103bf52e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1dfa771-cb6c-4674-86a5-7aead1ea2dd3", "node_type": "1", "metadata": {}, "hash": "3d052835dbb8aeffd77707bb571fc80c13b5b57cbc33404dde1bb123067f5c11", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Concentrate on graduating as fast as possible?\n     \u25e6 Your last chance to learn; most learning will be outside the classroom\n     \u25e6 Considered newly \u201cminted\u201d when finish a degree\uf096 Judged on year of a degree vs. year of birth\n         \uf096 To a person in their 40s or 50s,1 or 2 more years is round off error (27 = 29)\n\uf097 Don\u2019t go to conferences?\n     \u25e6 Chance to see firsthand what the field is like, where its going\n     \u25e6 There are student rates, you can share a room\n     \u25e6 Talk to people in the field in the halls\n     \u25e6 If your professors won\u2019t pay, then pay it yourself;almost always offer student rates, can often share rooms\n         \uf096 Some faculties paid their own way to conferences while grad student\n\uf097 Don\u2019t waste time polishing writing or talks?\n     \u25e6 In the marketplace of ideas, the more polish the more likely people will pay\n        attention to your ideas\n     \u25e6 Practice presentation AND answering tough questions\n---\n     Part II: Alternatives to a Bad Graduate Career\n\n\n\uf097 Only work the number of hours per week you are paid?\n    \u25e6 Campus Faculty average is 65-70 hours/work; CS higher\n    \u25e6 Students should be in that range\n    \u25e6 Organize each day: when most alert? nap? exercise? sleep?\n    \u25e6 When/how often/how long: write, read, program, email?\n    \u25e6 To do lists: daily, weekly, semester\n\uf097 Industrial Experience?\n    \u25e6 1st or 2nd summer get work experience, or 1 semester off\n\uf097 Sutherland\u2019s advice (Father of Computer Graphics)\n    \u25e6 Be bold; Take chances on hard topics\n\uf097 Advice from a very successful recent student\n    \u25e6 Great ideas, did lots of papers, well thought of\n    \u25e6 When asked: Why do you think you did so well?\n    \u25e6 He said a professor gave him advice the first week he arrived\n    \u25e6 When I asked: What did he say?\n    \u25e6 He said 3 observations, and still good advice today\n---\nPart Il:Howobaa Surcen h Gratata Schoal\n Part II: How to be a Success in Graduate School\n\n\n1.   \u201cSwim or Sink\u201d\n   \u25e6 Success is determined by me(student) primarily\n   \u25e6 Faculty will set up the opportunity, but its up to me\n      leverage it\n2.   \u201cRead/learn on your own\u201d\n   \u25e6 \u201cRelated to (1) I think you told me this as you handed\n      me a stack of about 20 papers\u201d\n3.   \u201cTeach your advisor\u201d\n   \u25e6 \u201cI really liked this concept; go out and learn about\n      something and then teach the professor\u201d\n   \u25e6 Fast moving field, don\u2019t expect prof to be at forefront\n      everywhere\n---\n    Outline\n\n\n\uf097 Part I: Key Advice for a Bad Career while a Grad Student\n\n\n\uf097 Part II: Key Advice on Alternatives to a Bad Graduate Career\n\n\n\uf097 Part III: Key Advice for a Bad Career, Post Graduate School\n\n\n\uf097 Part IV: Key Advice on Alternatives to a Bad Career, Post Graduate\n   School\n---\nBad Career Move #1: Be THE leading expert\n\n\n \uf097 Invent a new field!\n    \u25e6 Make sure its slightly different\n \uf097 Be the real Lone Ranger: Don\u2019t work with\n    others\n    \u25e6 No ambiguity in credit\n    \u25e6 Adopt the Prima Donna personality\n \uf097 Research Horizons\n    \u25e6 Never define success\n    \u25e6 Avoid Payoffs of less than 20 years\n    \u25e6 Stick to one topic for whole career\n    \u25e6 Even if technology appears to leave you behind,\n      stand by your problem\n---\n(Confusa Thine Enemies)\n                       Bad Career Move #2: Let Complexity Be Your GuideEtemte))\n(Confuse\n\n\n \uf097 Best compliment:\n    \u201cIts so complicated, I can\u2019t understand the ideas\u201d\n    \u25e6 If no one understands, how can they contradict your\n      claim?\n \uf097 It\u2019s easier to be complicated\n    \u25e6 Also: to publish it must be different; N+1st incremental\n      change\n \uf097 If it were not unsimple then how could\n    distinguished colleagues in departments around\n    the world be positively appreciative of both your\n    extraordinary skills and talents\n---\nBad CareerMvo #B:Newerbo Proven Wronr\nBad Career Move #3: Never be Proven Wrong", "start_char_idx": 3720, "end_char_idx": 7486, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1dfa771-cb6c-4674-86a5-7aead1ea2dd3": {"__data__": {"id_": "d1dfa771-cb6c-4674-86a5-7aead1ea2dd3", "embedding": null, "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94f8b243-6631-4a28-83c2-1b837ff0fc14", "node_type": "4", "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "hash": "ede82e9cbd11061ef560724b17ace9141a9cca81c0edf3199fba39b6325eb4e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2417f4d-0f42-41aa-907d-564dde1a5bd4", "node_type": "1", "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "hash": "eb3df31122b7f4049a875dcec5cd2b045363bc4370b37533b798319fd6b79158", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25e6cb47-d100-495c-9ac1-0632b9da2480", "node_type": "1", "metadata": {}, "hash": "c23a4bdbf1ac6deb05fdd6a40b778373d09988f8960caa4eda82c65739896db8", "class_name": "RelatedNodeInfo"}}, "text": "\uf097 Best compliment:\n    \u201cIts so complicated, I can\u2019t understand the ideas\u201d\n    \u25e6 If no one understands, how can they contradict your\n      claim?\n \uf097 It\u2019s easier to be complicated\n    \u25e6 Also: to publish it must be different; N+1st incremental\n      change\n \uf097 If it were not unsimple then how could\n    distinguished colleagues in departments around\n    the world be positively appreciative of both your\n    extraordinary skills and talents\n---\nBad CareerMvo #B:Newerbo Proven Wronr\nBad Career Move #3: Never be Proven Wrong\n\n\n \uf097 Avoid Implementing\n \uf097 Avoid Quantitative Experiments\n   \u25e6 If you\u2019ve got good intuition, who needs\n     experiments?\n   \u25e6 Why give grist for critics\u2019 mill?\n   \u25e6 Takes too long to measure\n \uf097 Avoid Benchmarks\n \uf097 Projects whose payoff is >= 20 years\n   gives you 19 safe years\n---\n Bd CrorMomo #\n Bad Career Move #4:\n Ueo thoa Computer Scientific Method\n                                    Use theComputerScbenttik Method\nObsolete Scientific Method        Computer Scientific Method\n\u2022 Hypothesis                      \uf097 Hunch\n\u2022 Sequence of experiments         \uf097 One experiment\n\u2022 Change 1 parameter/exp.           & change all parameters\n\u2022 Prove/Disprove Hypothesis       \uf097 Discard if doesn\u2019t support hunch\n\u2022 Document for others to          \uf097 Why waste time? We know this\n   reproduce results\n---\nDontbo Dbtactddby Othked}(Arol Feadteak)\n                                        Bad Career Move #5:\nDon\u2019t be Distracted by Others (Avoid Feedback)\n\n\n \uf097 Always dominate conversations: Silence is ignorance\n     \u25e6 Corollary: Loud is smart\n \uf097 Don\u2019t read\n \uf097 Don\u2019t be tainted by interaction with users, industry\n \uf097 Reviews\n     \u25e6 If it's simple and obvious in retrospect => Reject\n     \u25e6 Quantitative results don't matter if they just show you what\n       you already know => Reject\n     \u25e6 Everything else => Reject\n---\nBad CrerMbo #\n Bad Career Move #6:\n Publishing Journal Papers IS Technology Transfer\n\n\n  \uf097 Target Archival Journals: the Coin of the Academic Realm\n      \u25e6 It takes 2 to 3 years from submission to publication=>timeless\n  \uf097 As the leading scientist, your job is to publish in journals not your\n     job to make you the ideas palatable; wastes valuable research time\n      \u25e6 Travel time, having to interact with others, serve on program\n         committees, ...\n---\n Bad Caner Mm#7:\n Bad Career Move #7:\nWritu Tectkbra Bad Career\n Writing Tactics for a Bad Career\n \u2022 Papers: It\u2019s Quantity, not Quality\n      \u2013 Personal Success = Length of Publication List\n      \u2013 \u201cThe LPU (Least Publishable Unit) is Good for You\u201d\n\n\n                                  1\n                                idea\n                                  4                       \u201cPublication\n                          journal papers                    pyramid\n                                 16                            of\n                        extended abstracts                  success\u201d\n                                 64\n                         technical reports\n\n\n \uf097 Student productivity = number of papers\n     \u25e6 Number of students: big is beautiful\n     \u25e6 Never ask students to implement: reduces papers\n \uf097 Legally change your name to Aaaanderson\n---\n  5 Writing Commandments for a Bad Career\n\n\nI.   Thou shalt not define terms, nor explain\n     anything.\nII. Thou shalt replace \u201cwill do\u201d with \u201chave done\u201d.\nIII. Thou shalt not mention drawbacks to your\n     approach.\nIV. Thou shalt not reference any papers.\nV. Thou shalt publish before implementing.\n---\n7 Talk Commandments for a Bad Career\n\n\n I.  Thou shalt not illustrate.\n II. Thou shalt not covet brevity.\n III. Thou shalt not print large.\n IV. Thou shalt not use color.\n V. Thou shalt not skip slides in a long talk.\n VI. Thou shalt cover thy naked slides\n VII. Thou shalt not practice.\n---\n    Outline\n\n\n\uf097 Part I: Key Advice for a Bad Career while a Grad Student\n\n\n\uf097 Part II: Key Advice on Alternatives to a Bad Graduate Career\n\n\n\uf097 Part III: Key Advice for a Bad Career, Post Graduate School\n\n\n\uf097 Part IV: Key Advice on Alternatives to a Bad Career, Post Graduate\n   School\n---\nOne Alternative Strategy to a Bad Career", "start_char_idx": 6965, "end_char_idx": 11054, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "25e6cb47-d100-495c-9ac1-0632b9da2480": {"__data__": {"id_": "25e6cb47-d100-495c-9ac1-0632b9da2480", "embedding": null, "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94f8b243-6631-4a28-83c2-1b837ff0fc14", "node_type": "4", "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "hash": "ede82e9cbd11061ef560724b17ace9141a9cca81c0edf3199fba39b6325eb4e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1dfa771-cb6c-4674-86a5-7aead1ea2dd3", "node_type": "1", "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "hash": "c7eb8a910d60d4329fdd5cefffebd56dbadea50e6b3b6f679040123108e248ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aceb9da0-6182-4287-ad9e-063d426d15e2", "node_type": "1", "metadata": {}, "hash": "3d042ed6e73c7f5c4c6309d506cc67409068b3f2a69a3fefbff6012720d4aef0", "class_name": "RelatedNodeInfo"}}, "text": "I.  Thou shalt not illustrate.\n II. Thou shalt not covet brevity.\n III. Thou shalt not print large.\n IV. Thou shalt not use color.\n V. Thou shalt not skip slides in a long talk.\n VI. Thou shalt cover thy naked slides\n VII. Thou shalt not practice.\n---\n    Outline\n\n\n\uf097 Part I: Key Advice for a Bad Career while a Grad Student\n\n\n\uf097 Part II: Key Advice on Alternatives to a Bad Graduate Career\n\n\n\uf097 Part III: Key Advice for a Bad Career, Post Graduate School\n\n\n\uf097 Part IV: Key Advice on Alternatives to a Bad Career, Post Graduate\n   School\n---\nOne Alternative Strategy to a Bad Career\n\n\n \uf097 Caveats:\n     \u25e6 From a project leader\u2019s point of view\n     \u25e6 Works for me; not the only way\n     \u25e6 Primarily from academic, computer systesm perspective\n \uf097 Goal is to have impact:Change way people do Computer Science & Engineering\n     \u25e6 Academics have bad benchmarks: published papers\n \uf097 6 Steps\n          1) Selecting a problem\n          2) Picking a solution\n          3) Running a project\n          4) Finishing a project\n          5) Quantitative Evaluation\n          6) Transferring Technology\n---\n1) Selecting a ProblemSekctng a ArobkmInvent a new field & stick to it?\n                                    \uf097 No! Do \u201cReal Stuff\u201d: solve problem thatsomeone cares about\n                                    \uf097 No! Use separate, short projects\n                                        \u25e6 Always takes longer than expected\n                                        \u25e6 Matches student lifetimes\n                                        \u25e6 Long effort in fast changing field???\n                                        \u25e6 Learning: Number of projects vs. calendartime; I\u2019m on 9th project?\n                                        \u25e6 If going to fail, better to know soon\n                                    \uf097 Strive for multi-disciplinary, multipleinvestigator projects\n                                        \u25e6 1 expert/area is ideal (no arguments)\n                                    \uf097 Match the strengths and weaknesses oflocal environment\n                                    \uf097 Make sure you are excited enough towork on it\n                                        \u25e6 Prototypes can be exciting\n---\n2) Fcktg: solutton\n 2) Picking a solution\n                               Let Complexity Be Your Guide?\n                               \uf097 No! Keep things simple unless a verygood reason not to\n                                  \u2013 Pick innovation points carefully, and becompatible everywhere else\n                                  \u25e6 Best results are obvious in retrospect\u201cAnyone could have thought of that\u201d\n                               \uf097 Complexity cost is in longer design,construction, test, and debug\n                                  \u25e6 Fast changing field + delays=> less impressive results\n                      Use the Computer Scientific Method?\n                             \u2022 No! Run experiments to discover real\n                                problems\n                             \u2022 Use intuition to ask questions,\n                                not answer them\n---\n(And FakA Good Namal)\n (And Pick A Good Name!)\n\n\n  Reduced\n  I nstruction      Enhanced    Advanced\n  Set               Frequency   Personal\n  Computers         Associated  Presence\n                    Time        Emulated\n  Redundant         Hybrid      Augmented\n  Array of          Analysis    Reality\n  I nexpensive\n  Disks\n                                       \u2026\n---\n3) Running a prolect\n 3) Running a project", "start_char_idx": 10475, "end_char_idx": 13937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aceb9da0-6182-4287-ad9e-063d426d15e2": {"__data__": {"id_": "aceb9da0-6182-4287-ad9e-063d426d15e2", "embedding": null, "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94f8b243-6631-4a28-83c2-1b837ff0fc14", "node_type": "4", "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "hash": "ede82e9cbd11061ef560724b17ace9141a9cca81c0edf3199fba39b6325eb4e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25e6cb47-d100-495c-9ac1-0632b9da2480", "node_type": "1", "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}, "hash": "e65c6f9b69455d5bd38ef953e3b8aac82cce12b0d941230fc6208f33b433c79f", "class_name": "RelatedNodeInfo"}}, "text": "Reduced\n  I nstruction      Enhanced    Advanced\n  Set               Frequency   Personal\n  Computers         Associated  Presence\n                    Time        Emulated\n  Redundant         Hybrid      Augmented\n  Array of          Analysis    Reality\n  I nexpensive\n  Disks\n                                       \u2026\n---\n3) Running a prolect\n 3) Running a project\n\n\n                               Avoid Feedback?\n                       \uf097 No! Periodic Project Reviews withOutsiders\n                           \u25e6 Twice a year: 3-day retreat\n              P            \u25e6 faculty, students, staff + guests\n                           \u25e6 Key piece is feedback at end\n                           \u25e6 Helps create deadlines\n                           \u25e6 Give students chance to givemany talks, interact with others industry\n                       \uf097 Consider mid-course correction\n                           \u25e6 Fast changing field & 3-5 year projects =>assumptions changed\n                       \uf097 Pick size and members of team carefully\n                           \u25e6 Tough personalities are hard for everyone\n                           \u25e6 Again, 1 faculty per area reduces chanceof disagreement\n---\n4) Finishing a projectAnbhl8 =8Prokect\uf097 People count projects you finish, not the\n                                     ones you start\n                                   \uf097 Successful projects go thtrough an\n                                     unglamorous, hard phase\n                                       \u25e6 Design is more fun than making it\n                                         work\n                                       \u25e6 \u201cNo winners on a losing team;no losers on a winning team.\u201d\n                                       \u25e6 \u201cYou can quickly tell whether or not\n                                         the authors have ever built something\n                                         and made it work.\u201d\n                                   \uf097 Reduce the project if its late\n                                       \u25e6 \u201cAdding people to a late project\n                                         makes it later.\u201d\n                                   \uf097 Finishing a project is how people\n                                     acquire taste in selecting good\n                                     problems, finding simple solutions\n---\n5) Evaluadng Quanduatiely\n 5) Evaluating Quantitatively\n                            Never be Proven Wrong?\n                           \uf097 If you can\u2019t be proven wrong,then you can\u2019t prove you\u2019re right\n                           \uf097 Report in sufficient detail forothers to reproduce results\n                              \u25e6 can\u2019t convince othersif they can\u2019t get same results\n                           \uf097 For better or for worse,benchmarks shape a field\n                           \uf097 Good ones accelerate progress\n                              \u25e6 good target for development\n                           \uf097 Bad benchmarks hurt progress\n                              \u25e6 help real users v. help sales?\n---\n6) Transfertin:\n 6) Transferring     Publishing Journal Papers IS\n                     Technology Transfer?\n                  \uf097 No! Missionary work: \u201cSermons\u201d first,then they read papers\n                      \u25e6 Selecting problem is key: \u201cReal stuff\u201d\n                          \uf096 Ideally, more interest as time passes\n                          \uf096 Change minds with believable results\n                          \uf096 Prima Donnas interfere with transfer\n                  \uf097 Industry is reluctant to embrace change\n                      \u25e6 Howard Aiken, circa 1950:\n                        \u201cThe problem in this business isn\u2019t to keep\n                        people from stealing your ideas; its making\n                        them steal your ideas!\u201d\n                      \u25e6 Need one bold company (often not no.\n                        one) to take chance and be successful\n                        RISC with Sun, RAID with (Compaq,\n                        EMC, \u2026)\n---\n6) Tansferring Technokosy\n 6) Transferring Technology\n                             \uf097 Pros\n                                \u25e6 Personal satisfaction: seeingyour product used by\n                                   others\n                                \u25e6 Personal $$$ (potentially)\n                                \u25e6 Fame\n                             \uf097 Cons\n                                \u25e6 Learn about business plans,sales vs. marketing,\n                                   financing, personnel\n                                   benefits, hiring, \u2026\n                                \u25e6 Spend time doing above vs.research/development\n                                \u25e6 Fame also if company notalways successful\n---\nSummary: Leader\u2019s Role Changes during Project\n\n\n                                               P\n---\nAckowledaments\nAcknowledgments\n\n\n \uf097 Many of these ideas were borrowed from\n   (inspired by?) David Patterson, Tom\n   Anderson, David Culler, Al Davis, John\n   Hennessy, Steve Johnson, John\n   Ousterhout, Bob Sproull, Carlo S\u00e9quin\n   and many others\n---\n Conclusion: Alternatives to a Bad Career\n\n\n\uf097 Goal is to have impact:\n    Change way people do Computer Science\n    \u25e6 Many 3 - 5 year projects gives more chances for impact\n\uf097 Feedback is key: seek out & value critics\n\uf097 Do \u201cReal Stuff\u201d: make sure you are solving some problem that\n    someone cares about\n\uf097 Taste is critical in selecting research problems, solutions,\n    experiments, & communicating results; acquired by feedback\n\uf097 Your real legacy is people, not paper or money:\n    create environments that develop professionals of whom you are\n    proud", "start_char_idx": 13573, "end_char_idx": 19143, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cdd4011-bc68-42d3-8969-66b3f7f9fd15": {"__data__": {"id_": "3cdd4011-bc68-42d3-8969-66b3f7f9fd15", "embedding": null, "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798", "node_type": "4", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d86ab6a-1e42-4381-9bdb-31ea1f89fb80", "node_type": "1", "metadata": {}, "hash": "c50e49f12e4eab3c22cd131df92a0698562a779c66a7181dabef0ae4d2f03584", "class_name": "RelatedNodeInfo"}}, "text": "EE 542 \u2013 Laboratory Assignment #1\n                                               Instructor: Young H. Cho\n                                          Due date: August 26 at 11:59pm\n                                  Video Demo Due date: August 28 at 11:59pm\n\n\nThis lab assignment is relatively straight forward. However, it may take a long time to go\nthrough all of the steps depending on your level of skill sets. Therefore, it is recommended that\nyou start right away.\n\n\nThroughout the semester, you are required to submit report for each laboratory assignment in a\nform of PowerPoint Presentation slides, in-person/zoom demonstration, and the compressed\narchive (i.e. zip) of source files and README files that gives instructions on how to compile,\ninstall, and execute your work to verify the originality and functionality of the system. The main\npurpose of the submission is to provide the evidence YOUR completed work. Therefore, take\nspecial care to demonstrate this.\n\n\nAs part of the course, you will get hands-on experience in Computer Networks and Internet\nProtocol by working with one of the most popular industrial standard operating system Linux\nand its computer network related tools.\n\n\n1. Linux\nIf you are not familiar with Linux operating system, you need to understand that most of the\nengineering in Cloud and Computer networks happen in Unix-like environment. Therefore, it is\ncritical that you not only learn how to use Linux but become an expert user.\n\n\nIn order to do this laboratory assignment, please go through the following Tutorial:\nhttps://itsfoss.com/install-linux-in-virtualbox/\n\n\nWhile it is possible to simply download and run a ready-made Virtual Machine, I would like you\nto go through installation process so that you would know how to setup different Linux versions\nand adjust as needed.as you would be starting lot of VM.\n\n\nI would also suggest VM memory configuration to be set to 512 MB and processor count to 1 or\n2. Based on your host system configuration you could change this value at later time. Also\nincrease swap/virtual memory size to 12 GB or more on your host system.\n\n\nAlso, if you are not familiar with Linux, please go through the following Linux introduction and\ntest out the commands. Keep in mind that you will need to learn a lot more and become expert\nin this:\nhttps://maker.pro/linux/tutorial/basic-linux-commands-for-beginners\n\n\nPlease take a few video clips (preferably with your phone) of your installation process to\nconvince the us that you actually completed the tutorials.\n\n\n2. Computer Networks\nNow, you will need to build a computer network.\n---\nFirst install the following packages on VM. Ensure that your VM has internet access.\n\n\nsudo apt-get install gcc g++ perl net-tools make vim openssh-server traceroute\n\n\nThen, install virtual box guest addition by mounting iso on cd/dvd from virtual box gui.router-1Settings\n                                       General                                                                   Storage\n                                      System                                                              Storage Devices                                           Attributes\n                                                                                                                           Controller: IDE                                      Name:    IDE\n                                      Display                                                                                               VBoxGuestAdditions iso                Type:   PIX4\n                                     Storage                                                                                Controller: SATA                                                    Use Host IO Cache\n      Activities\n                                                                                      Trash\n                                                                       VBoxGAS6.1.12\nDouble click the CD icon and let the installation proceed.\n\n\nNow create root account on ubuntu by executing below command.\nsudo passwd root\nSet new password for root from the above command.\n\n\nStart ssh service by executing below commands.\nsudo systemctl enable ssh\nsudo systemctl start ssh\n\n\nPlease go through this tutorial to learn about how you can set up machines and routers using\nVirtualBox:\nhttps://www.brianlinkletter.com/how-to-use-virtualbox-to-emulate-a-network/\n\n\nChange the shell script of quagga in above link to:", "start_char_idx": 38, "end_char_idx": 4527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d86ab6a-1e42-4381-9bdb-31ea1f89fb80": {"__data__": {"id_": "5d86ab6a-1e42-4381-9bdb-31ea1f89fb80", "embedding": null, "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798", "node_type": "4", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3cdd4011-bc68-42d3-8969-66b3f7f9fd15", "node_type": "1", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "ecbc9021ade1a5131c3c35f8ee6fd95a9b5dccc0ef4e5b97c87784c36f8ad938", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92b33dec-88e4-405e-9bb9-61ca1a735b1b", "node_type": "1", "metadata": {}, "hash": "07409cad06205e2654924cb17d669d464a24fe3e5cb2117b6c76e4a14de3db4e", "class_name": "RelatedNodeInfo"}}, "text": "Now create root account on ubuntu by executing below command.\nsudo passwd root\nSet new password for root from the above command.\n\n\nStart ssh service by executing below commands.\nsudo systemctl enable ssh\nsudo systemctl start ssh\n\n\nPlease go through this tutorial to learn about how you can set up machines and routers using\nVirtualBox:\nhttps://www.brianlinkletter.com/how-to-use-virtualbox-to-emulate-a-network/\n\n\nChange the shell script of quagga in above link to:\n\n\nbash <<EOF2\n---\necho \"router1\" >> /etc/hostname\necho \"127.0.1.1           router1\" >> /etc/hosts\nhostname router1\napt-get update\nyes | apt-get install quagga quagga-doc traceroute\ncp /usr/share/doc/quagga-core/examples/zebra.conf.sample /etc/quagga/zebra.conf\ncp /usr/share/doc/quagga-core/examples/ospfd.conf.sample /etc/quagga/ospfd.conf\nchown quagga.quaggavty /etc/quagga/*.conf\nchmod 640 /etc/quagga/*.conf\ntouch /etc/quagga/daemons\necho \"zebra=yes\" >> /etc/quagga/daemons\necho \"ospfd=yes\" >> /etc/quagga/daemons\necho 'VTYSH_PAGER=more' >>/etc/environment\necho 'export VTYSH_PAGER=more' >>/etc/bash.bashrc\ncat >> /etc/quagga/ospfd.conf << EOF\ninterface enp0s8\ninterface enp0s9\ninterface enp0s10\ninterface lo\nrouter ospf\n passive-interface enp0s8\n network 192.168.1.0/24 area 0.0.0.0\n network 192.168.100.0/24 area 0.0.0.0\n network 192.168.101.0/24 area 0.0.0.0\nline vty\nEOF\ncat >> /etc/quagga/zebra.conf << EOF\ninterface enp0s8\n ip address 192.168.1.254/24\n ipv6 nd suppress-ra\ninterface enp0s9\n ip address 192.168.100.1/24\n ipv6 nd suppress-ra\ninterface enp0s10\n ip address 192.168.101.2/24\n ipv6 nd suppress-ra\ninterface lo\nip forwarding\nline vty\nEOF\nsudo systemctl restart zebra.service\nsudo systemctl restart ospfd.service\nexit\nEOF2\n\n\nAnd PC script to:\n---\nbash <<EOF2\necho 'pc1' >> /etc/hostname\necho 'pc1' >> /etc/hosts\nhostname pc1\ncat >> /etc/network/interfaces << EOF\nauto enp0s8\niface enp0s8 inet static\n   address 192.168.1.1\n   netmask 255.255.255.0\nup route add -net 192.168.0.0/16 gw 192.168.1.254 dev enp0s8\n EOF\n /etc/init.d/networking restart\n exit\n EOF2\n\n\n You might need to chmod 777 ./script.sh to execute the above scripts and change VM specific\n parameters in script like ip address, hostnames.\n\n\n If you are facing issues in which you couldn\u2019t ping google.com, most probably it\u2019s a DNS issue.\n Confirm it first by pinging 8.8.8.8. To resolve this, execute below commands using VirtualBox\n cli commands by going to VirtualBox installation directory in command prompt in your OS.\n Ensure thay your VM is powered off while executing below commands.\n\n\n VBoxManage modifyvm \"<vm name>\" --natdnsproxy1 on\nVBoxManage modifyvm \"<vm name>\" --natdnshostresolver1 on\n\n\nNow that you have some idea as to how you can arbitrarily set up a network with routers and\nLinux nodes, configure them to one of the most basic network, 2 Linux machines connected\nthrough 1 Quagga router.\n\n\nOnce again, you will need to take video clips of yourself narrating what you\u2019ve done for the\ntutorial.\n\n\n3. Replacing Quagga with VyOS\nFirst if you are not familiar with Dynamic and Static IP addresses. Please read through these\nintroductions:\nhttps://computer.howstuffworks.com/internet/basics/what-is-an-ip-address.htm\nhttps://diffeology.com/difference-between-static-and-dynamic-ip-address/\n\n\nThis step of laboratory will test your ability to think more critically and test your problem\nsolving skills through research.", "start_char_idx": 4062, "end_char_idx": 7445, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "92b33dec-88e4-405e-9bb9-61ca1a735b1b": {"__data__": {"id_": "92b33dec-88e4-405e-9bb9-61ca1a735b1b", "embedding": null, "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798", "node_type": "4", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d86ab6a-1e42-4381-9bdb-31ea1f89fb80", "node_type": "1", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "50c9ab384d1b33ba8847cf9c712efbe1d0482063d28d63cb3b6c0c6d240b6393", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc55c4a5-266c-4c9c-a4e7-7e10341c9de5", "node_type": "1", "metadata": {}, "hash": "906cc8b6d9183838a77a195bf0e9c6dbd5943c22051f7131182be31952b95eed", "class_name": "RelatedNodeInfo"}}, "text": "VBoxManage modifyvm \"<vm name>\" --natdnsproxy1 on\nVBoxManage modifyvm \"<vm name>\" --natdnshostresolver1 on\n\n\nNow that you have some idea as to how you can arbitrarily set up a network with routers and\nLinux nodes, configure them to one of the most basic network, 2 Linux machines connected\nthrough 1 Quagga router.\n\n\nOnce again, you will need to take video clips of yourself narrating what you\u2019ve done for the\ntutorial.\n\n\n3. Replacing Quagga with VyOS\nFirst if you are not familiar with Dynamic and Static IP addresses. Please read through these\nintroductions:\nhttps://computer.howstuffworks.com/internet/basics/what-is-an-ip-address.htm\nhttps://diffeology.com/difference-between-static-and-dynamic-ip-address/\n\n\nThis step of laboratory will test your ability to think more critically and test your problem\nsolving skills through research.\n\n\nYou will notice that Quagga does not have a support for DHCP. Therefore, you will have to\nassign static IP addresses for your machine. However, there is another opensource router that\nhas DHCP server.\n---\nThe main goal of this step is to replace Quagga with VyOS.\n\n\nYou will need to go through all of their online instructions in how to install and configure the\nrouter to configure it correctly to work within your VirtualBox environment.\n\n\nYou will need to take video clips of yourself narrating what you\u2019ve done for this step. The main\nemphasis of this lab will be placed in this step and the next.\n\n\n4. Socket Tutorial\nBased on http://www.linuxhowtos.org/C_C++/socket.htm\nYou will need to take video clips of yourself narrating what you\u2019ve done for this step.\nGiven the above set up, go through the following Socket Tutorial\n\n\nThe client server model\nMost interprocess communication uses the client server model. These terms refer to the two\nprocesses which will be communicating with each other. One of the two processes, the client,\nconnects to the other process, the server, typically to make a request for information. A good\nanalogy is a person who makes a phone call to another person.\nNotice that the client needs to know of the existence of and the address of the server, but the\nserver does not need to know the address of (or even the existence of) the client prior to the\nconnection being established.\nNotice also that once a connection is established, both sides can send and receive information.\nThe system calls for establishing a connection are somewhat different for the client and the\nserver, but both involve the basic construct of a socket.\nA socket is one end of an interprocess communication channel. The two processes\neach establish their own socket.\nThe steps involved in establishing a socket on the client side are as follows:\n     1. Create a socket with the socket() system call\n     2. Connect the socket to the address of the server using the connect() system call\n     3. Send and receive data. There are a number of ways to do this, but the simplest is to use\n          the read() and write() system calls.\nThe steps involved in establishing a socket on the server side are as follows:\n     1. Create a socket with the socket() system call\n     2. Bind the socket to an address using the bind() system call. For a server socket on the\n          Internet, an address consists of a port number on the host machine.\n     3. Listen for connections with the listen() system call\n     4. Accept a connection with the accept() system call. This call typically blocks until a client\n          connects with the server.\n     5. Send and receive data", "start_char_idx": 6606, "end_char_idx": 10123, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc55c4a5-266c-4c9c-a4e7-7e10341c9de5": {"__data__": {"id_": "dc55c4a5-266c-4c9c-a4e7-7e10341c9de5", "embedding": null, "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798", "node_type": "4", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92b33dec-88e4-405e-9bb9-61ca1a735b1b", "node_type": "1", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "14a01ce229f38e56becec93c19fd4ab1c968d0166a086a11d2c135014293eb11", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75ed4c07-fdce-4598-8d34-30640de6a8c1", "node_type": "1", "metadata": {}, "hash": "9dd846013d42402aeb8cc6d732f78ff025e974d156833a1f119bea56ac436477", "class_name": "RelatedNodeInfo"}}, "text": "Socket Types\nWhen a socket is created, the program has to specify the address domain and the socket type.\nTwo processes can communicate with each other only if their sockets are of the same type and in\nthe same domain.\n---\nThere are two widely used address domains, the unix domain, in which two processes which\nshare a common file system communicate, and the Internet domain, in which two processes\nrunning on any two hosts on the Internet communicate. Each of these has its own address format.\nThe address of a socket in the Unix domain is a character string which is basically an entry in the\nfile system.\nThe address of a socket in the Internet domain consists of the Internet address of the host\nmachine (every computer on the Internet has a unique 32 bit address, often referred to as its IP\naddress).\nIn addition, each socket needs a port number on that host.\nPort numbers are 16 bit unsigned integers.\nThe lower numbers are reserved in Unix for standard services. For example, the port number for\nthe FTP server is 21. It is important that standard services be at the same port on all computers so\nthat clients will know their addresses.\nHowever, port numbers above 2000 are generally available.\nThere are two widely used socket types, stream sockets, and datagram sockets. Stream sockets\ntreat communications as a continuous stream of characters, while datagram sockets have to read\nentire messages at once. Each uses its own communications protocol.\nStream sockets use TCP (Transmission Control Protocol), which is a reliable, stream oriented\nprotocol, and datagram sockets use UDP (Unix Datagram Protocol), which is unreliable and\nmessage oriented.\nThe examples in this tutorial will use sockets in the Internet domain using the TCP protocol.\n\n\nSample code\nC code for a very simple client and server are provided for you. These communicate using\nstream sockets in the Internet domain. The code is described in detail below. However, before\nyou read the descriptions and look at the code, you should compile and run the two programs (in\nthe Labs folder) to see what they do.\nserver.c\nclient.c\nDownload these into files called server.c and client.c and compile them separately into two\nexecutables called server and client.\nThey probably won't require any special compiling flags, but on some solaris systems you may\nneed to link to the socket library by appending -lsocket to your compile command.\nIdeally, you should run the client and the server on separate hosts on the Internet. Start the server\nfirst. Suppose the server is running on a machine called cheerios. When you run the server, you\nneed to pass the port number in as an argument. You can choose any number between 2000 and\n65535. If this port is already in use on that machine, the server will tell you this and exit. If this\nhappens, just choose another port and try again. If the port is available, the server will block until\nit receives a connection from the client. Don't be alarmed if the server doesn't do anything;\nIt's not supposed to do anything until a connection is made.\n\n\nHere is a typical command line:\nserver 51717\nTo run the client you need to pass in two arguments, the name of the host on which the server is\nrunning and the port number on which the server is listening for connections.\nHere is the command line to connect to the server described above:\n---\nclient cheerios 51717\n\n\nThe client will prompt you to enter a message.\nIf everything works correctly, the server will display your message on stdout, send an\nacknowledgement message to the client and terminate.\nThe client will print the acknowledgement message from the server and then terminate.\nYou can simulate this on a single machine by running the server in one window and the client in\nanother. In this case, you can use the keyword localhost as the first argument to the client.\nThe server code uses a number of ugly programming constructs, and so we will go through it line\nby line.\n\n\n#include <stdio.h>\n\n\nThis header file contains declarations used in most input and output and is typically included in\nall C programs.\n\n\n#include <sys/types.h>\n\n\nThis header file contains definitions of a number of data types used in system calls. These types\nare used in the next two include files.\n\n\n#include <sys/socket.h>\n\n\nThe header file socket.h includes a number of definitions of structures needed for sockets.\n\n\n#include <netinet/in.h>\n\n\nThe header file in.h contains constants and structures needed for internet domain addresses.\n\n\nvoid error(char *msg)\n{\n  perror(msg);\n  exit(1);\n}\n\n\nThis function is called when a system call fails. It displays a message about the error on stderr\nand then aborts the program. The perror man page gives more information.", "start_char_idx": 10126, "end_char_idx": 14838, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75ed4c07-fdce-4598-8d34-30640de6a8c1": {"__data__": {"id_": "75ed4c07-fdce-4598-8d34-30640de6a8c1", "embedding": null, "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798", "node_type": "4", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc55c4a5-266c-4c9c-a4e7-7e10341c9de5", "node_type": "1", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "0f961f53538850fc25cffb4c75d2c031ceeee98ab77a8d766cbe05ef376e14da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b526ecc7-b97f-4451-a716-20c97ba30c82", "node_type": "1", "metadata": {}, "hash": "a85c199144fddbe4ae2518455582d886ba0f4bc2c163025e5ba7907722823c09", "class_name": "RelatedNodeInfo"}}, "text": "#include <stdio.h>\n\n\nThis header file contains declarations used in most input and output and is typically included in\nall C programs.\n\n\n#include <sys/types.h>\n\n\nThis header file contains definitions of a number of data types used in system calls. These types\nare used in the next two include files.\n\n\n#include <sys/socket.h>\n\n\nThe header file socket.h includes a number of definitions of structures needed for sockets.\n\n\n#include <netinet/in.h>\n\n\nThe header file in.h contains constants and structures needed for internet domain addresses.\n\n\nvoid error(char *msg)\n{\n  perror(msg);\n  exit(1);\n}\n\n\nThis function is called when a system call fails. It displays a message about the error on stderr\nand then aborts the program. The perror man page gives more information.\n\n\nint main(int argc, char *argv[])\n{\n  int sockfd, newsockfd, portno, clilen, n;\n---\nsockfd and newsockfd are file descriptors, i.e. array subscripts into the file descriptor table .\nThese two variables store the values returned by the socket system call and the accept system\ncall.\nportno stores the port number on which the server accepts connections.\nclilen stores the size of the address of the client. This is needed for the accept system call.\nn is the return value for the read() and write() calls; i.e. it contains the number of characters read\nor written.\n\n\nchar buffer[256];\n\n\nThe server reads characters from the socket connection into this buffer.\n\n\nstruct sockaddr_in serv_addr, cli_addr;\n\n\nA sockaddr_in is a structure containing an internet address. This structure is defined in\nnetinet/in.h.\n\n\nHere is the definition:\nstruct sockaddr_in\n{\n  short sin_family; /* must be AF_INET */\n  u_short sin_port;\n  struct in_addr sin_addr;\n  char     sin_zero[8]; /* Not used, must be zero */\n};\n\n\nAn in_addr structure, defined in the same header file, contains only one field, a unsigned long\ncalled s_addr.\nThe variable serv_addr will contain the address of the server, and cli_addr will contain the\naddress of the client which connects to the server.\n\n\n if (argc < 2)\n {\n   fprintf(stderr,\"ERROR, no port provided\n\");\n   exit(1);\n }\n\n\nThe user needs to pass in the port number on which the server will accept connections as an\nargument. This code displays an error message if the user fails to do this.\n\n\nsockfd = socket(AF_INET, SOCK_STREAM, 0);\nif (sockfd < 0)\n  error(\"ERROR opening socket\");\n---\nThe socket() system call creates a new socket. It takes three arguments. The first is the address\ndomain of the socket.\nRecall that there are two possible address domains, the unix domain for two processes which\nshare a common file system, and the Internet domain for any two hosts on the Internet. The\nsymbol constant AF_UNIX is used for the former, and AF_INET for the latter (there are actually\nmany other options which can be used here for specialized purposes).\nThe second argument is the type of socket. Recall that there are two choices here, a stream\nsocket in which characters are read in a continuous stream as if from a file or pipe, and a\ndatagram socket, in which messages are read in chunks. The two symbolic constants are\nSOCK_STREAM and SOCK_DGRAM.\nThe third argument is the protocol. If this argument is zero (and it always should be except for\nunusual circumstances), the operating system will choose the most appropriate protocol. It will\nchoose TCP for stream sockets and UDP for datagram sockets.\nThe socket system call returns an entry into the file descriptor table (i.e. a small integer). This\nvalue is used for all subsequent references to this socket. If the socket call fails, it returns -1.\n\n\nIn this case the program displays and error message and exits. However, this system call is\nunlikely to fail.\nThis is a simplified description of the socket call; there are numerous other choices for domains\nand types, but these are the most common. The socket() man page has more information.\n\n\nbzero((char *) &serv_addr, sizeof(serv_addr));\n\n\nThe function bzero() sets all values in a buffer to zero. It takes two arguments, the first is a\npointer to the buffer and the second is the size of the buffer. Thus, this line initializes serv_addr\nto zeros. ----\nportno = atoi(argv[1]);\n\n\nThe port number on which the server will listen for connections is passed in as an argument, and\nthis statement uses the atoi() function to convert this from a string of digits to an integer.\n\n\nserv_addr.sin_family = AF_INET;", "start_char_idx": 14071, "end_char_idx": 18477, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b526ecc7-b97f-4451-a716-20c97ba30c82": {"__data__": {"id_": "b526ecc7-b97f-4451-a716-20c97ba30c82", "embedding": null, "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798", "node_type": "4", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75ed4c07-fdce-4598-8d34-30640de6a8c1", "node_type": "1", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "479a41a0ed8e879f74f86a4a7cfea36e2e6f34af910375782bb8b06d238b3533", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3f78911-b871-4c55-8731-756dbc5aa282", "node_type": "1", "metadata": {}, "hash": "84115b63e780ab733b5ee3e0ee899f22076cf554579fbad635a5f605f02ea261", "class_name": "RelatedNodeInfo"}}, "text": "In this case the program displays and error message and exits. However, this system call is\nunlikely to fail.\nThis is a simplified description of the socket call; there are numerous other choices for domains\nand types, but these are the most common. The socket() man page has more information.\n\n\nbzero((char *) &serv_addr, sizeof(serv_addr));\n\n\nThe function bzero() sets all values in a buffer to zero. It takes two arguments, the first is a\npointer to the buffer and the second is the size of the buffer. Thus, this line initializes serv_addr\nto zeros. ----\nportno = atoi(argv[1]);\n\n\nThe port number on which the server will listen for connections is passed in as an argument, and\nthis statement uses the atoi() function to convert this from a string of digits to an integer.\n\n\nserv_addr.sin_family = AF_INET;\n\n\nThe variable serv_addr is a structure of type struct sockaddr_in. This structure has four fields.\nThe first field is short sin_family, which contains a code for the address family. It should always\nbe set to the symbolic constant AF_INET.\n\n\nserv_addr.sin_port = htons(portno);\n\n\nThe second field of serv_addr is unsigned short sin_port, which contain the port number.\nHowever, instead of simply copying the port number to this field, it is necessary to convert this\nto network byte order using the function htons() which converts a port number in host byte order\nto a port number in network byte order.\n\n\nserv_addr.sin_addr.s_addr = INADDR_ANY;\n---\nThe third field of sockaddr_in is a structure of type struct in_addr which contains only a single\nfield unsigned long s_addr. This field contains the IP address of the host. For server code, this\nwill always be the IP address of the machine on which the server is running, and there is a\nsymbolic constant INADDR_ANY which gets this address.\n\n\nif (bind(sockfd, (struct sockaddr *) &serv_addr,                                 sizeof(serv_addr)) < 0)\n  error(\"ERROR on binding\");\n\n\nThe bind() system call binds a socket to an address, in this case the address of the current host\nand port number on which the server will run. It takes three arguments, the socket file descriptor,\nthe address to which is bound, and the size of the address to which it is bound. The second\nargument is a pointer to a structure of type sockaddr, but what is passed in is a structure of type\nsockaddr_in, and so this must be cast to the correct type. This can fail for a number of reasons,\nthe most obvious being that this socket is already in use on this machine. The bind() manual has\nmore information.\n\n\nlisten(sockfd,5);\n\n\nThe listen system call allows the process to listen on the socket for connections. The first\nargument is the socket file descriptor, and the second is the size of the backlog queue, i.e., the\nnumber of connections that can be waiting while the process is handling a particular connection.\nThis should be set to 5, the maximum size permitted by most systems. If the first argument is a\nvalid socket, this call cannot fail, and so the code doesn't check for errors. The listen() man page\nhas more information.\n\n\nclilen = sizeof(cli_addr);\nnewsockfd = accept(sockfd, (struct sockaddr *) &cli_addr, &clilen);\nif (newsockfd < 0)\n  error(\"ERROR on accept\");\n\n\nThe accept() system call causes the process to block until a client connects to the server. Thus, it\nwakes up the process when a connection from a client has been successfully established. It\nreturns a new file descriptor, and all communication on this connection should be done using the\nnew file descriptor. The second argument is a reference pointer to the address of the client on the\nother end of the connection, and the third argument is the size of this structure. The accept() man\npage has more information.\n\n\nbzero(buffer,256);\nn = read(newsockfd,buffer,255);\nif (n < 0) error(\"ERROR reading from socket\");\nprintf(\"Here is the message: %s\n\",buffer);\n\n\nNote that we would only get to this point after a client has successfully connected to our server.\nThis code initializes the buffer using the bzero() function, and then reads from the socket. Note\n---\nthat the read call uses the new file descriptor, the one returned by accept(), not the original file\ndescriptor returned by socket(). Note also that the read() will block until there is something for it\nto read in the socket, i.e. after the client has executed a write().\nIt will read either the total number of characters in the socket or 255, whichever is less, and\nreturn the number of characters read. The read() man page has more information.", "start_char_idx": 17667, "end_char_idx": 22197, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3f78911-b871-4c55-8731-756dbc5aa282": {"__data__": {"id_": "f3f78911-b871-4c55-8731-756dbc5aa282", "embedding": null, "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798", "node_type": "4", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b526ecc7-b97f-4451-a716-20c97ba30c82", "node_type": "1", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "296e01a56554edc2375d416ac7608c74b8f12d2978797a891817589d49a63211", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52b6ee87-7026-4a2a-aa68-b2c0ca166ed4", "node_type": "1", "metadata": {}, "hash": "ba31c44653e7f981ccf556258d36cbf55a8ff65a04827701bac1049c16be141d", "class_name": "RelatedNodeInfo"}}, "text": "bzero(buffer,256);\nn = read(newsockfd,buffer,255);\nif (n < 0) error(\"ERROR reading from socket\");\nprintf(\"Here is the message: %s\n\",buffer);\n\n\nNote that we would only get to this point after a client has successfully connected to our server.\nThis code initializes the buffer using the bzero() function, and then reads from the socket. Note\n---\nthat the read call uses the new file descriptor, the one returned by accept(), not the original file\ndescriptor returned by socket(). Note also that the read() will block until there is something for it\nto read in the socket, i.e. after the client has executed a write().\nIt will read either the total number of characters in the socket or 255, whichever is less, and\nreturn the number of characters read. The read() man page has more information.\n\n\nn = write(newsockfd,\"I got your message\",18);\nif (n < 0) error(\"ERROR writing to socket\");\n\n\nOnce a connection has been established, both ends can both read and write to the connection.\nNaturally, everything written by the client will be read by the server, and everything written by\nthe server will be read by the client. This code simply writes a short message to the client. The\nlast argument of write is the size of the message. The write() man page has more information.\n\n\n  return 0;\n}\n\n\nThis terminates main and thus the program. Since main was declared to be of type int as\nspecified by the ascii standard, some compilers complain if it does not return anything.\n\n\nClient code\n\n\nAs before, we will go through the program client.c line by line.\n#include <stdio.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <netdb.h>\n\n\nThe header files are the same as for the server with one addition. The file netdb.h defines the\nstructure hostent, which will be used below.\n\n\nvoid error(char *msg)\n{\n  perror(msg);\n  exit(0);\n}\nint main(int argc, char *argv[])\n{\n  int sockfd, portno, n;\n  struct sockaddr_in serv_addr;\n  struct hostent *server;\n\n\nThe error() function is identical to that in the server, as are the variables sockfd, portno, and n.\nThe variable serv_addr will contain the address of the server to which we want to connect. It is\nof type struct sockaddr_in.\n---\nThe variable server is a pointer to a structure of type hostent. This structure is defined in the\nheader file netdb.h as follows:\nstruct hostent\n{\n  char     *h_name;           /* official name of host */\n  char     **h_aliases;       /* alias list */\n  int    h_addrtype;         /* host address type */\n  int    h_length;          /* length of address */\n  char     **h_addr_list; /* list of addresses from name server */\n  #define h_addr h_addr_list[0] /* address, for backward compatiblity */\n};\n\n\nIt defines a host computer on the Internet. The members of this structure are:\nh_name          Official name of the host.\nh_aliases      A zero terminated array of alternate\n           names for the host.\nh_addrtype The type of address being returned;\n           currently always AF_INET.\nh_length        The length, in bytes, of the address.\nh_addr_list A pointer to a list of network addresses\n           for the named host. Host addresses are\n           returned in network byte order.\n\n\nNote that h_addr is an alias for the first address in the array of network addresses.\n\n\nchar buffer[256];\nif (argc < 3)\n{\n  fprintf(stderr,\"usage %s hostname port\n\", argv[0]);\n  exit(0);\n}\nportno = atoi(argv[2]);\nsockfd = socket(AF_INET, SOCK_STREAM, 0);\nif (sockfd < 0)\n  error(\"ERROR opening socket\");\n\n\nAll of this code is the same as that in the server.\n\n\nserver = gethostbyname(argv[1]);\nif (server == NULL)\n{\n  fprintf(stderr,\"ERROR, no such host\n\");\n  exit(0);\n}\n---\nThe variable argv[1] contains the name of a host on the Internet, e.g. cs.rpi.edu. The function:\n struct hostent *gethostbyname(char *name)\n\n\nTakes such a name as an argument and returns a pointer to a hostent containing information\nabout that host.\nThe field char *h_addr contains the IP address.", "start_char_idx": 21406, "end_char_idx": 25372, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52b6ee87-7026-4a2a-aa68-b2c0ca166ed4": {"__data__": {"id_": "52b6ee87-7026-4a2a-aa68-b2c0ca166ed4", "embedding": null, "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798", "node_type": "4", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3f78911-b871-4c55-8731-756dbc5aa282", "node_type": "1", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "5d7aed78f767cab6365dd94ed7f87e5cb52b5d4ef4acf2c8df7e39c7b496fbe5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fd5cc7b-2db9-4c08-8424-a543ba8a07c4", "node_type": "1", "metadata": {}, "hash": "798d922705728cd2e54e0a582018e5330db2aeeb8f5ed3d127f0e4c8a85dafbc", "class_name": "RelatedNodeInfo"}}, "text": "char buffer[256];\nif (argc < 3)\n{\n  fprintf(stderr,\"usage %s hostname port\n\", argv[0]);\n  exit(0);\n}\nportno = atoi(argv[2]);\nsockfd = socket(AF_INET, SOCK_STREAM, 0);\nif (sockfd < 0)\n  error(\"ERROR opening socket\");\n\n\nAll of this code is the same as that in the server.\n\n\nserver = gethostbyname(argv[1]);\nif (server == NULL)\n{\n  fprintf(stderr,\"ERROR, no such host\n\");\n  exit(0);\n}\n---\nThe variable argv[1] contains the name of a host on the Internet, e.g. cs.rpi.edu. The function:\n struct hostent *gethostbyname(char *name)\n\n\nTakes such a name as an argument and returns a pointer to a hostent containing information\nabout that host.\nThe field char *h_addr contains the IP address.\n\n\nIf this structure is NULL, the system could not locate a host with this name.\nIn the old days, this function worked by searching a system file called /etc/hosts but with the\nexplosive growth of the Internet, it became impossible for system administrators to keep this file\ncurrent. Thus, the mechanism by which this function works is complex, often involves querying\nlarge databases all around the country. The gethostbyname() man page has more information.\n\n\nbzero((char *) &serv_addr, sizeof(serv_addr));\nserv_addr.sin_family = AF_INET;\nbcopy((char *)server->h_addr,\n     (char *)&serv_addr.sin_addr.s_addr,\n     server->h_length);\nserv_addr.sin_port = htons(portno);\n\n\nThis code sets the fields in serv_addr. Much of it is the same as in the server. However, because\nthe field server->h_addr is a character string, we use the function:\nvoid bcopy(char *s1, char *s2, int length)\n\n\nwhich copies length bytes from s1 to s2. ----\nif (connect(sockfd,&serv_addr,sizeof(serv_addr)) < 0)\n  error(\"ERROR connecting\");\n\n\nThe connect function is called by the client to establish a connection to the server. It takes three\narguments, the socket file descriptor, the address of the host to which it wants to connect\n(including the port number), and the size of this address. This function returns 0 on success and -\n1 if it fails. The connect() man page has more information.\nNotice that the client needs to know the port number of the server, but it does not need to know\nits own port number. This is typically assigned by the system when connect is called.\n\n\n  printf(\"Please enter the message: \");\n  bzero(buffer,256);\n  fgets(buffer,255,stdin);\n  n = write(sockfd,buffer,strlen(buffer));\n  if (n < 0)\n    error(\"ERROR writing to socket\");\n  bzero(buffer,256);\n  n = read(sockfd,buffer,255);\n  if (n < 0)\n    error(\"ERROR reading from socket\");\n---\n  printf(\"%s\n\",buffer);\n  return 0;\n}\n\n\nThe remaining code should be fairly clear. It prompts the user to enter a message, uses fgets to\nread the message from stdin, writes the message to the socket, reads the reply from the socket,\nand displays this reply on the screen.\n\n\nEnhancements to the server code\nThe sample server code above has the limitation that it only handles one connection, and then\ndies. A \"real world\" server should run indefinitely and should have the capability of handling a\nnumber of simultaneous connections, each in its own process. This is typically done by forking\noff a new process to handle each new connection.\nThe following code has a dummy function called dostuff(int sockfd).\n\n\nThis function will handle the connection after it has been established and provide whatever\nservices the client requests. As we saw above, once a connection is established, both ends can\nuse read and write to send information to the other end, and the details of the information passed\nback and forth do not concern us here.", "start_char_idx": 24689, "end_char_idx": 28254, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6fd5cc7b-2db9-4c08-8424-a543ba8a07c4": {"__data__": {"id_": "6fd5cc7b-2db9-4c08-8424-a543ba8a07c4", "embedding": null, "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798", "node_type": "4", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52b6ee87-7026-4a2a-aa68-b2c0ca166ed4", "node_type": "1", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "e1b22c13feff492537f2bee95713c6b7d2c2b28dc407e125f0d4c90fc4819c81", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d44274dd-432d-4019-8686-6bebcf66594b", "node_type": "1", "metadata": {}, "hash": "dbf5da68a4559dcee4c014e98c0aea620b40e1c6972c6ead5cf6b3dd80bc2dbb", "class_name": "RelatedNodeInfo"}}, "text": "Enhancements to the server code\nThe sample server code above has the limitation that it only handles one connection, and then\ndies. A \"real world\" server should run indefinitely and should have the capability of handling a\nnumber of simultaneous connections, each in its own process. This is typically done by forking\noff a new process to handle each new connection.\nThe following code has a dummy function called dostuff(int sockfd).\n\n\nThis function will handle the connection after it has been established and provide whatever\nservices the client requests. As we saw above, once a connection is established, both ends can\nuse read and write to send information to the other end, and the details of the information passed\nback and forth do not concern us here.\n\n\nTo write a \"real world\" server, you would make essentially no changes to the main() function,\nand all of the code which provided the service would be in dostuff().\nTo allow the server to handle multiple simultaneous connections, we make the following changes\nto the code:\n     1. Put the accept statement and the following code in an infinite loop.\n     2. After a connection is established, call fork()#### to create a new process.\n     3. The child process will close sockfd#### and call #dostuff#####, passing the new socket\n          file descriptor as an argument. When the two processes have completed their\n          conversation, as indicated by dostuff()#### returning, this process simply exits.\n     4. The parent process closes newsockfd####. Because all of this code is in an infinite loop,\n          it will return to the accept statement to wait for the next connection.\nHere is the code.\n while (1)\n {\n   newsockfd = accept(sockfd,\n             (struct sockaddr *) &cli_addr, &clilen);\n   if (newsockfd < 0)\n     error(\"ERROR on accept\");\n   pid = fork();\n   if (pid < 0)\n     error(\"ERROR on fork\");\n   if (pid == 0)\n   {\n     close(sockfd);\n     dostuff(newsockfd);\n---\n    exit(0);\n  }\n  else\n    close(newsockfd);\n } /* end of while */\n\n\nThe zombie problem\nThe above code has a problem; if the parent runs for a long time and accepts many connections,\neach of these connections will create a zombie when the connection is terminated. A zombie is a\nprocess which has terminated but but cannot be permitted to fully die because at some point in\nthe future, the parent of the process might execute a wait and would want information about the\ndeath of the child. Zombies clog up the process table in the kernel, and so they should be\nprevented. Unfortunately, the code which prevents zombies is not consistent across different\narchitectures. When a child dies, it sends a SIGCHLD signal to its parent. On systems such as\nAIX, the following code in main() is all that is needed.\nsignal(SIGCHLD,SIG_IGN);\n\n\nThis says to ignore the SIGCHLD signal. However, on systems running SunOS, you have to use\nthe following code:\nvoid *SigCatcher(int n)\n{\n wait3(NULL,WNOHANG,NULL);\n}\n...\nint main()\n{\n ...\n signal(SIGCHLD,SigCatcher);\n ...\n\n\nThe function SigCatcher() will be called whenever the parent receives a SIGCHLD signal (i.e.\nwhenever a child dies). This will in turn call wait3 which will receive the signal. The\nWNOHANG flag is set, which causes this to be a non-blocking wait (one of my favorite\noxymorons).", "start_char_idx": 27493, "end_char_idx": 30779, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d44274dd-432d-4019-8686-6bebcf66594b": {"__data__": {"id_": "d44274dd-432d-4019-8686-6bebcf66594b", "embedding": null, "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798", "node_type": "4", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fd5cc7b-2db9-4c08-8424-a543ba8a07c4", "node_type": "1", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "54824758cd2c70092c67ee3f214c5000d2d3204e23d65565c757759c09784fcc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71a4ee90-7e5e-4fff-8876-90cbf979a65c", "node_type": "1", "metadata": {}, "hash": "4906561ac4dc24e42c7bde7ece8d5db79670589f8c7f0f193cb8c79f986af5d9", "class_name": "RelatedNodeInfo"}}, "text": "This says to ignore the SIGCHLD signal. However, on systems running SunOS, you have to use\nthe following code:\nvoid *SigCatcher(int n)\n{\n wait3(NULL,WNOHANG,NULL);\n}\n...\nint main()\n{\n ...\n signal(SIGCHLD,SigCatcher);\n ...\n\n\nThe function SigCatcher() will be called whenever the parent receives a SIGCHLD signal (i.e.\nwhenever a child dies). This will in turn call wait3 which will receive the signal. The\nWNOHANG flag is set, which causes this to be a non-blocking wait (one of my favorite\noxymorons).\n\n\nAlternative types of sockets\nThis example showed a stream socket in the Internet domain. This is the most common type of\nconnection. A second type of connection is a datagram socket. You might want to use a datagram\nsocket in cases where there is only one message being sent from the client to the server, and only\none message being sent back. There are several differences between a datagram socket and a\nstream socket.\n     1. Datagrams are unreliable, which means that if a packet of information gets lost\n          somewhere in the Internet, the sender is not told (and of course the receiver does not\n          know about the existence of the message). In contrast, with a stream socket, the\n          underlying TCP protocol will detect that a message was lost because it was not\n---\n          acknowledged, and it will be retransmitted without the process at either end knowing\n          about this.\n     2. Message boundaries are preserved in datagram sockets. If the sender sends a datagram of\n          100 bytes, the receiver must read all 100 bytes at once. This can be contrasted with a\n          stream socket, where if the sender wrote a 100 byte message, the receiver could read it in\n          two chunks of 50 bytes or 100 chunks of one byte.\n     3. The communication is done using special system calls sendto()#### and\n          receivefrom()#### rather than the more generic read()#### and write()####.\n     4. There is a lot less overhead associated with a datagram socket because connections do not\n          need to be established and broken down, and packets do not need to be acknowledged.\n          This is why datagram sockets are often used when the service to be provided is short,\n          such as a time-of-day service.\nThese two programs can be compiled and run in exactly the same way as the server and client\nusing a stream socket.\nMost of the server code is similar to the stream socket code. Here are the differences.\nsock=socket(AF_INET, SOCK_DGRAM, 0);\n\n\nNote that when the socket is created, the second argument is the symbolic constant\nSOCK_DGRAM instead of SOCK_STREAM. The protocol will be UDP, not TCP. ----\nfromlen = sizeof(struct sockaddr_in);\nwhile (1)\n{\n  n = recvfrom(sock,buf,1024,0,(struct sockaddr *)&from,&fromlen);\n  if (n < 0) error(\"recvfrom\");\n\n\nServers using datagram sockets do not use the listen() or the accept() system calls. After a socket\nhas been bound to an address, the program calls recvfrom() to read a message. This call will\nblock until a message is received. The recvfrom() system call takes six arguments. The first three\nare the same as those for the read() call, the socket file descriptor, the buffer into which the\nmessage will be read, and the maximum number of bytes. The fourth argument is an integer\nargument for flags. This is ordinarily set to zero. The fifth argument is a pointer to a sockaddr_in\nstructure. When the call returns, the values of this structure will have been filled in for the other\nend of the connection (the client). The size of this structure will be in the last argument, a pointer\nto an integer. This call returns the number of bytes in the message. (or -1 on an error condition).\nThe recfrom() man page has more information.\n\n\n  n = sendto(sock,\"Got your message\n\",17,\n           0,(struct sockaddr *) &from,fromlen);\n  if (n < 0)\n   error(\"sendto\");\n  }\n}", "start_char_idx": 30278, "end_char_idx": 34146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71a4ee90-7e5e-4fff-8876-90cbf979a65c": {"__data__": {"id_": "71a4ee90-7e5e-4fff-8876-90cbf979a65c", "embedding": null, "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f85185eb-45ad-4f1d-b9c7-c2ca65b79798", "node_type": "4", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "564088d7889d0bb0ec1e41efc90bbadf1b47ec3f5bc5b5c39403ef3d16c2f08c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d44274dd-432d-4019-8686-6bebcf66594b", "node_type": "1", "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}, "hash": "b0955748cd0da68419d9fecfecc775e65c04126b2a584b3ba17808f7d853fb59", "class_name": "RelatedNodeInfo"}}, "text": "n = sendto(sock,\"Got your message\n\",17,\n           0,(struct sockaddr *) &from,fromlen);\n  if (n < 0)\n   error(\"sendto\");\n  }\n}\n\n\nTo send a datagram, the function sendto() is used. This also takes six arguments. The first three\nare the same as for a write() call, the socket file descriptor, the buffer from which the message\n---\nwill be written, and the number of bytes to write. The fourth argument is an int argument called\nflags, which is normally zero. The fifth argument is a pointer to a sockadd_in structure. This will\ncontain the address to which the message will be sent. Notice that in this case, since the server is\nreplying to a message, the values of this structure were provided by the recvfrom call. The last\nargument is the size of this structure. Note that this is not a pointer to an int, but an int value\nitself. The sendto() man page has more information.\nThe client code for a datagram socket client is the same as that for a stream socket with the\nfollowing differences.\n     \u2022    the socket system call has SOCK_DGRAM instead of SOCK_STREAM as its second\n          argument.\n     \u2022    there is no connect()**** system call\n     \u2022    instead of read**** and write****, the client uses recvfrom**** and sendto **** which\n          are described in detail above.\n\n\nSockets in the Unix Domain\nHere is the code for a client and server which communicate using a stream socket in the Unix\ndomain.\nU_server.c\nU_client\nThe only difference between a socket in the Unix domain and a socket in the Internet domain is\nthe form of the address. Here is the address structure for a Unix Domain address, defined in the\nheader file.\nstruct       sockaddr_un\n{\n short       sun_family;              /* AF_UNIX */\n char        sun_path[108];           /* path name (gag) */\n};\n\n\nThe field sun_path has the form of a path name in the Unix file system. This means that both\nclient and server have to be running the same file system. Once a socket has been created, it\nremain until it is explicitly deleted, and its name will appear with the ls command, always with a\nsize of zero. Sockets in the Unix domain are virtually identical to named pipes (FIFOs).\n\n\nDesigning servers\nThere are a number of different ways to design servers. These models are discussed in detail in a\nbook by Douglas E. Comer and David L. Stevens entiteld Internetworking with TCP/IP Volume\nIII:Client Server Programming and Applications published by Prentice Hall in 1996. These are\nsummarized here.\nConcurrent, connection oriented servers\n\n\nThe typical server in the Internet domain creates a stream socket and forks off a process to\nhandle each new connection that it receives. This model is appropriate for services which will do\na good deal of reading and writing over an extended period of time, such as a telnet server or an\nftp server. This model has relatively high overhead, because forking off a new process is a time\nconsuming operation, and because a stream socket which uses the TCP protocol has high kernel\n---\noverhead, not only in establishing the connection but also in transmitting information. However,\nonce the connection has been established, data transmission is reliable in both directions.\nIterative, connectionless servers\n\n\nServers which provide only a single message to the client often do not involve forking, and often\nuse a datagram socket rather than a stream socket. Examples include a finger daemon or a\ntimeofday server or an echo server (a server which merely echoes a message sent by the client).\nThese servers handle each message as it receives them in the same process. There is much less\noverhead with this type of server, but the communication is unreliable. A request or a reply may\nget lost in the Internet, and there is no built-in mechanism to detect and handle this.\nSingle Process concurrent servers\n\n\nA server which needs the capability of handling several clients simultaneous, but where each\nconnection is I/O dominated (i.e. the server spends most of its time blocked waiting for a\nmessage from the client) is a candidate for a single process, concurrent server. In this model, one\nprocess maintains a number of open connections, and listens at each for a message. Whenever it\ngets a message from a client, it replies quickly and then listens for the next one. This type of\nservice can be done with the select system call.", "start_char_idx": 34019, "end_char_idx": 38367, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "348ec02d-0c47-4de8-b6ff-9565555a0816": {"__data__": {"id_": "348ec02d-0c47-4de8-b6ff-9565555a0816", "embedding": null, "metadata": {"filename": "lab10-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "78ef90b9-b965-47fb-be51-151b49c33249", "node_type": "4", "metadata": {"filename": "lab10-f23.pdf", "category": "PDF file"}, "hash": "5ccc2664e86b8acaec47d2d7dd9ec9e3d619daef6de56e2bfacdd61dfd4d5afe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa29d473-75ab-4be5-9e8a-cf0abe35180a", "node_type": "1", "metadata": {}, "hash": "842ff22b3b77d562081cf201b64efdd56d162f1e25d893bac6723ac3cd3e3162", "class_name": "RelatedNodeInfo"}}, "text": "Laboratory 10: Using AWS to Collect xDot data\n                                            Instructor: Young H. Cho\n\n\n1.   Connect the antenna to the conduit and the 9V adapter to a power source to the conduit.\n\n\n2.   Make a connection with the ethernet cable from the conduit to your PC.\n\n\n3.   Once the connection is established. Open a web browser on your PC and go to 192.168.2.1 (the\n     default IP address for the gateway \u2013 this IP address should be verified with an IP tool).\n\n\n4.   Log in to the GUI, the default username:password is admin:admin. In case these credentials fail,\n     try resetting the device. (You can also ssh admin@192.168.2.1. The password is admin)\n\n\n5.   If you login for the first time you will be guided through an initial setup, configure the network\n     interface that is connected to the conduit to be a static IP address with 192.168.2.2 -\n     192.168.2.254\n\n\n6.   Click on LoRaWAN-> Network Settings to the left and change the mode to Network Server. Add\n     changes to the configuration as so:\n          a.   Channel Plan: US915\n          b.   Frequency Band: 7\n          c.   Network Mode: Public LoRaWAN\n          d.   Join Delay: 5\n     Hit Submit.\n\n\n7.   Navigate to LoRaWAN-> Key Management. Under Location select Local Keys. In Settings\n     change the configuration to:\n          a.   Enabled: True\n          b.   Network ID: Name\n          c.   Name: <Any valid name with min 8 chars>\n          d.   Passphrase: <Any valid name with min 8 chars>\n     Hit Submit.\n\n\n8.   Restart the LoRaWAN and under LoRaWAN-> Network Settings, the status of network server\n     should be green/running\n\n\n9.   Now navigate to Apps and enable Node-Red Apps. Launch Node-Red and wait for the browser\n     to load (Please be patient, the browser might reload multiple times).\n\n\n10. If asked for the login details enter the default login credentials. The page should load to something\n     like:.\n---\n                                                                                                       D\n11. From Input Section to the left drag the lora node/block to the flow. An instance of the lora node\n     will be created on the flow screen. And from the output section drag the debug node to the flow.\n     Connect both the nodes as shown below. I hope you get the basic idea:\n                 Iora                                      msg-payload\n12. Open the debug window on the right and click on Deploy to the top.\n\n\n13. Let us join the network and try sending a message. For that I am making use of the AT commands\n     which you can find here: https://www.multitech.com/documents/publications/reference-\n     guides/S000643-mDot-AT-Command-Guide.pdf\n\n\n14. First we need the AT command firmware to be uploaded to the xDot (In MBedStudio)\n\n\n     Select File -> Import Program\n     In URL window, type: http://os.mbed.com/teams/MultiTech/code/Dot-AT-Firmware/\n     Then click on Add Program\n\n\n     Once the program is completely loaded, Select File -> Add Library to Active Program\u2026\n     In Git or os.mbed.com URL window, type: https://github.com/MultiTechSystems/libxDot.git\n     Then click on Next>>\n     Select the master branch then click on Finish\n\n\n15. Compile the Dot-AT-Firmware program by clicking on the hammer\n\n\n     Target & Build Profile (must be release):\n      Target\n          MultiTech xDot (STM32L151)\n       Build profile\n          Release\n---\n     Once bin file is successfully created, copy the bin file to the xDot (Make sure the transmission\n     did not fail). Open a serial connection to the USB UART (not the debug port) (port COM3,\n     Windows needs to install serial driver like Lab8) with a baud of 115200                        (or the baud you\n     specified for serial communication in main.cpp). Hit the reset button on the xDot and type AT.\n     The xDot must return an OK which determines a successful connection and a working AT\n     firmware. If you are having a too hard of a time getting the firmware to compile correctly, you\n     may have to use the following precompiled binary:\n     https://www.multitech.net/developer/downloads/#xdot-US915-mbed-os-6.8.0.bin", "start_char_idx": 28, "end_char_idx": 4169, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa29d473-75ab-4be5-9e8a-cf0abe35180a": {"__data__": {"id_": "aa29d473-75ab-4be5-9e8a-cf0abe35180a", "embedding": null, "metadata": {"filename": "lab10-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "78ef90b9-b965-47fb-be51-151b49c33249", "node_type": "4", "metadata": {"filename": "lab10-f23.pdf", "category": "PDF file"}, "hash": "5ccc2664e86b8acaec47d2d7dd9ec9e3d619daef6de56e2bfacdd61dfd4d5afe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "348ec02d-0c47-4de8-b6ff-9565555a0816", "node_type": "1", "metadata": {"filename": "lab10-f23.pdf", "category": "PDF file"}, "hash": "0f0badcdc78d97e7d1a2517978fb91e7f7bc9b0b4dcea784c69ad8e3d7102057", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0de07b18-a4f1-48cd-82f7-2cbe483f039e", "node_type": "1", "metadata": {}, "hash": "1f0caa5e9b35557d96233fb3dac3ba4ba21ca451fa494310593dd6582c7a4910", "class_name": "RelatedNodeInfo"}}, "text": "16. Now let\u2019s configure the network parameters on the xDot using the AT commands.\n               at+ni=1,<The name of the Lora network provided in step 6>\n               at+nk=1,<The passphrase for the Lora network provided in step 6>\n               at+fsb=7\n               at+jd=5\n               at&w\n               atz\n               at+join\n               at+send=Hello\n      AT\n     OK\n     attni=l,multitechl23\n      SetNetworkName           multitechl23\n     OK\n     attnk-l,multitechl23\n      SetNetwork Passphrase: multitechl23\n      OK\n     attfsk-7\n      Command    not   found!\n      ERROR\n     attfsb=7\n     OK\n      at\n      OK\n     at+jd-5\n      OK\n      ataw\n     OK\n      atz\n      OK\n     attjoin\n     Successfully joined network\n      OK\n     attsend-Hello\n     OK\n---\n17. If you navigate back to the Node-Red app you will see the Hello message under the Debug\n     window to the right.\n          info                                debug\n                                      all flows      current flow\n         10/17/2019,3.53.56 PM    2992e/86,8f02a\n        msg payload : string [5]\n         Hello\n20. And for the last part we will be sending the data collected to the LoRa conduit and check the\n     output on the Node-Red debug window.\n\n\n21. For the LoRa configuration on the xDot, use the xDot Examples program OTA Example skeleton.\n\n\n     As before, import xDot Example with URL\n     http://os.mbed.com/teams/MultiTech/code/Dot-Examples/\n\n\n22. Click on import program under Dot-Examples and import the program to the compiler. Import\n     the library as you did in the earlier steps.\n\n\n23. Now      in    the   compiler\u2019s       project    explorer     navigate     to    Dot-Examples->  examples->\n     example_config.h.        Study      the   file   and     make      sure    the   OTA_EXAMPLE        is   your\n     ACTIVE_EXAMPLE.\n\n\n24. Now navigate to Dot-Examples-> examples-> src-> ota_example.cpp and make the following\n     changes:\n          a.   network_name = <The name of the Lora network provided in step 7>\n          b.   network_passphrase = <The passphrase for the Lora network provided in step 7>\n          c.   frequency_sub_band = 7\n          d.   join_delay = 5\n\n\n25. Send EE542 to the conduit by making the following changes\n          a.   Commented lines 132-139\n---\n     chaz arr ]          \"E2542\"\n     ihiie\n           uinti6(true)Light;\n           atd::vector<uint?_t>tX dta;\n           1fjoinnetmorkif not joined\n           1|\n                ('dot->getNetworkjoinStatus () )\n                 join_network()\n           f02i2t{=Q;i<sizeof (arr)-ihit+) {tx_data.push_back (azrii.)\n           send_data(tx_data)", "start_char_idx": 4172, "end_char_idx": 6833, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0de07b18-a4f1-48cd-82f7-2cbe483f039e": {"__data__": {"id_": "0de07b18-a4f1-48cd-82f7-2cbe483f039e", "embedding": null, "metadata": {"filename": "lab10-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "78ef90b9-b965-47fb-be51-151b49c33249", "node_type": "4", "metadata": {"filename": "lab10-f23.pdf", "category": "PDF file"}, "hash": "5ccc2664e86b8acaec47d2d7dd9ec9e3d619daef6de56e2bfacdd61dfd4d5afe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa29d473-75ab-4be5-9e8a-cf0abe35180a", "node_type": "1", "metadata": {"filename": "lab10-f23.pdf", "category": "PDF file"}, "hash": "9434d5cd2b6418cb8a1fb9bca45e797ca21188289e05b1820995aa5b15707338", "class_name": "RelatedNodeInfo"}}, "text": "25. Send EE542 to the conduit by making the following changes\n          a.   Commented lines 132-139\n---\n     chaz arr ]          \"E2542\"\n     ihiie\n           uinti6(true)Light;\n           atd::vector<uint?_t>tX dta;\n           1fjoinnetmorkif not joined\n           1|\n                ('dot->getNetworkjoinStatus () )\n                 join_network()\n           f02i2t{=Q;i<sizeof (arr)-ihit+) {tx_data.push_back (azrii.)\n           send_data(tx_data)\n\n\n    26. Verify that you are receiving the message on the Node-Red debug window. Also study the\n        ota_example.cpp to better understand the flow and changes needed to-be made for sending the\n        sensor data. You can also connect to the serial debug port of xDot (baud 115200) to\n        monitor/capture logs.\n            info                              debug\n                                       all flows     current flow\n           10/47/20194.35.22 PM    2992ef86.8/02a\n           msg payload : string [8]\n            EE5425\n    27. Integrate the code from Lab8 part I to the ota_example to send the sensor data through LoRa.\n53 #defineBZTA3975\n54 Analog-n3en307 (23_0) ;\n55 Digita_Outvcc (GPIOO)\n56\n57 double Chersistor(int RamADC)\n58     double Tezp\n59     Tezp=    (f_cat)    -00oo         ((65536.0       RamADC)        1.0)\n60\n61     Terp\n       Terp      Tezp(1og (Terp/_oooo.0) / BETA)Convert Kelvinto Celciu3\n                 (7 (\n                          273.-5;                    1 [    (1.0/298.15)) ) ;\n62       '(Terp      (Temp      9.0) /5.0        32 . 0;I[ Convert Celciu3to Fahrenheit\n63      return Terp\n64\n65\n---\n          155          chas out[5]\n          156\n           157         while     (true)\n          158                3td:    vector<uint8        1>  cX data;\n           159               1 [ joinnetwork 1fnot joined\n          160\n          161                1f ('det->getNetworkjoinstatus () )\n          162                      1eg-nfo (\"JciningVetmesk\")\n          163                      joinnetwozk ()\n          164                      log-nfo      \"Check    Status\n          165\n          166                                 zead016 ( ;\n          167                doubletezp             Thezziator(val)\n          168                Ipc.printf (\" fln\"           cemp)\n          169                anprintf (out ,            \"62\"    tesp)\n          170                f3 (int i=0        i<;itt) {\n           171                     CX   data.pushback (out i.)\n          172\n          173                send    data (-*    daca)\n           174\nAlso don\u2019t forget to include necessary headers. In order to use snprintf you will need to include stdlib.h\n      Nodc-RED\n                                                                                                              debuq\n                                                                                                                unencr\n  ouiput\n     28. In order to use conduit as the gateway for your xDot nodes to the Internet, you will need to\n          configure the conduit to connect to your home router that is connected to the Internet. Once you\n          set the conduit up to get an IP address via your router\u2019s built-in DHCP server (you should be able\n          to see which IP address was assigned to it by logging on to your Internet router and view its\n          DHCP table), the conduit should get assigned a different IP address when you connect it to the\n          router with an Ethernet cable. Then you should be able to get the same webpage access with\n          your PC through the router using the IP address assigned by the router. At the same time, your\n          conduit should have the access to the Internet.\n     29. Configure Node-Red in a similar way that your configured Node-Red on the phone to send your\n          xDot data to AWS.\n     30. Add dash board widgets in your thingsboard to visualize your xDot data over time.", "start_char_idx": 6382, "end_char_idx": 10314, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2b05a0c-c699-491f-b063-dc24ce54b9d9": {"__data__": {"id_": "a2b05a0c-c699-491f-b063-dc24ce54b9d9", "embedding": null, "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87", "node_type": "4", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "e8d9af25cf3dadd73ddb70cb3f7806c4d427c0ddfa956ced43f02846fc67016a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3b1ba30-c716-4ab5-903c-cb498940132c", "node_type": "1", "metadata": {}, "hash": "163b2cd344851a2a7efce7d95255142bd49eea65dcd6959fe4ceff62ca799686", "class_name": "RelatedNodeInfo"}}, "text": "EE 542 \u2013 Laboratory Assignment #2: AWS Bring UP and Queuing\n                                                  Instructor: Young H. Cho\n                                           Due date: September 2 at 11:59pm\n\n\nSETTING UP AWS\nThe first step is to set up AWS.\nLog into AWS free tier account and select an AWS region of us-west-2(Oregon) and then go to\nVPC console tab by going to:\n           https://us-west-2.console.aws.amazon.com/vpc\nCreate a new VPC here in subnet 10.0.0.0/16 by selecting create VPC and configure as per\nbelow.\n                C                                                2 https:/ /us-west-2 console aws amazon com/vpc/l\n          aws              Services           Resource Groups\n         New VPC Experience                 Create VPC         Actions\n        Tell us Khat you think\n     VPC Dashboard New                           Filter by tags and attributes or search by keyword\n    Filter by VPC:                                 Name               VPC ID                          State         IPv4 CIDR\n         Select a VPC\n    CrealtVPC\nCreate VPC\n                                                                                     rane 4 4\n           IFvi cidkBack\"\n                         CIDR Bkxk\n                    tut\n 4equired                                                                                                                    Cancal\nAfter this you need to create four subnets. One subnet is for client, other subnet for server and\nother two subnet are for public ip access over internet to client, server, router EC2 instance.\nGo to subnet tab in leftmost corner and select create subnet. Map this subnet to your newly\ncreated VPC. Create 4 subnet as per below configurations.\n    aws                                                                                                                       an\n                  Groato cubnot\n                                                                        LuailahleHPi Cinf\n    Seatla VFC                                                  I0 1C0 0 025                                        Aey 2\n                                                                17jj20o                                            UiU4-2\n VIRTUALPRIVATE\n  Youf Vis\n   Subnet\nConfigurations:\n---\n Create subnet\n SpLc         uddie > DlockDCIDR loiml 10 0 0 0 24                                                                             DCA Llock\n                         Hubz Mat\n                                                                       sutut                                         iatyt Rejton\n                         10 0 1 0 24\n  Rco uirej                                                                                                                                    Gince\nRepeat this for 10.0.2.0/24, 10.0.3.0/24, 10.0.4.0/24 subnets. Explore more about CIDR\nsubnetting.\nNow go to internet gateway tab on left most corner and create one. This is required so that the\nVPC network we created have access to the internet.aws                                                                                                supdce\n                             Internet qatewJvs\n                                                                                            Upr In\n  VikM PKIUAT                                      0-098263962282d1157         Maathed                                 514934703672\n  CLUUV\n   Sukncts\n   Rouie Tablcs\n   lerel\n          aws              Services           Resource Groups\n         VPC        Internet gateways         Create internet gateway\n         Create internet gatewayInfo\n         An internet gateway is     virtual router that connects    VPC to the internet; To create     new internet gateway specify the name\n         for the gateway below:\n            Internet gateway settings\n             Name tag\n             Creates  tag with  key of \\'Name\" andvalue that yoUspecify:\n               lab2_test_igw\n            Tags      optional\n             A tag    label that you assign   AWS [          Each tag consists ofkey and an optional valueYov cn VSLtags    search and filter\n             your resources Ortrack your AWS costs;\n             Key                                               Value   optional\n                   Name                                              lab2_test_igw                                  Remove\n                Add new tag\n             You can add 49 more tags;\n                                                                                                  Cancel          Greate internet gateway\nNow you need to attach this internet gateway to the corresponding VPC. Go back to Internet\ngateway tab and select the corresponding the IGW you created and select actions->attach to\nVPC.", "start_char_idx": 18, "end_char_idx": 4810, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3b1ba30-c716-4ab5-903c-cb498940132c": {"__data__": {"id_": "f3b1ba30-c716-4ab5-903c-cb498940132c", "embedding": null, "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87", "node_type": "4", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "e8d9af25cf3dadd73ddb70cb3f7806c4d427c0ddfa956ced43f02846fc67016a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2b05a0c-c699-491f-b063-dc24ce54b9d9", "node_type": "1", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "2838d0cabca6d774622979c2afc0c98b4e8d9ac3fd22dafc5975729c187c7a4b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebb129d1-7096-4262-b8e8-e5457e02c16e", "node_type": "1", "metadata": {}, "hash": "436d810ad61b5040b142670ae5d615b67cc6df9096775662f726f200ee46d362", "class_name": "RelatedNodeInfo"}}, "text": "Go back to Internet\ngateway tab and select the corresponding the IGW you created and select actions->attach to\nVPC.\n---\n    Internet gateways (1/3)                                                                                                         ctony\n                                                                                                                                    Vie\" detaIs\n                                                                                                                                    Atachto VPC\n          Name                                               Siale           VPCIn                                                  Detach from VPC\n                             igw-01826396208ed1157                           vPc-015(c79662b76fd4d | vpc_labz_674954703677\n         labz_test_igr       igw-0f4490b5c97de9d34             Detached                                       674954705677          Delete mterel qjlewJy\n                             igw-7575850c                                    VEX-31fb7549 [~lab_vpc          624934703672\nSelect you VPC and then create it.VPC         Attach to VPC(igw-(Of4d90b5c97de9d34)\n                Internet gateways\n   Attach to VPC (igw-0f4d90b5c97de9d34)Info\n       VPC\n       Attach an internet gateway to       VPC to enable the VPC to communicate with the internet Specify the VPC to attach below:\n       Available VPCs\n       Attachtheinternet gateway to this VPC\n              vpc-C~Odc4db4b4ab9269ed                                                                              X\n           AWS Command Line Interface command\n                                                                                                           Cancel              Attach internet gateway\nNow go to your VPC tab and select the vpc you have created. Explore more on dhcp option set,\nMain route table, and network ACL by going to below link:\n\u2022     https://docs.aws.amazon.com/vpc/latest/userguide/working-with-vpcs.html\n\u2022     https://docs.aws.amazon.com/appstream2/latest/developerguide/create-\n      configure-new-vpc-with-private-public-subnets-nat.html\n\u2022     https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html\n\u2022     https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html\n\u2022     https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html\n\u2022     https://medium.com/@mulupuru/your-comprehensive-guide-to-understanding-\n      aws-data-transfer-costs-f5c8241d65ed\n\n\nIn the vpc tab, identify the main routing table the vpc is using and select that. Now configure a\ndefault route to point to the internet gateway we have created in the previous step. This is done\nfore internet access to all EC2 instance belonging to that VPC through the subnet.\n---\n      Nev VPC Expenence                Create route table       Actions\n    VPC Dashboard                            Route Table ID : mb-Odfde8ec9c72d7669      Ad Fef\n   Filler by VPC:                            Name              Route Table ID                 Explicit subnet associatio     Edge associations           Main                VPC ID\n       sclecti VPC                                             rb-Odide8ec9c72d7669                                                                      Yes                  vpc-Odcddb b42\n  VIRTUAL PRIVATE\n  CLOUD\n    Your VPCs\n    Subnets\n    Route Tables\n    Internet Gateways\n    Egress Only Internet\n    Gateways Naw\n    Carrier Gateways\n    DHCP Options\n    Sets\n    Elastic IPs\n   Managed Prefix\n    UstS Hav\n    Endpoints\n    Endpoint Services\n    NAT Gateways Mev                  Route Table; Ib Odfle8ec9c72d7669\n    Peering Connections                     Summary             Routes          Subnet Associations       Edge Associations      Route Propagation         lags\n SECURITY                                   Edit routes\n    Network ACLS\n    Securty Groups                                                           View    AlI roules\n VIRTUAL PRIVATE                           Destination                                                                             Target\nClick \u201cedit routes\u201d and add default routes with 0.0.0.0/0 and select \u201csave routes\u201d. Explore more\non the different target visible under the drop-down selection and what each signifies. Now your\nVPC should have internet access.\n   Route Tables    Falt roules\n   Edit routes\n     Destination                                                      Target                                        Status                          Propagated\n         0.0/16                                                        Iccal                                        actve\n                                                                       igw-0f4d90b5c97de9d34\n    Addroute\n     Required                                                                                                                                                    Cancci  Savc routes\nNow you need to create three \u201celastic IPs\u201d for your three VM\u2019s. Explore more on what elastic ip\nmeans. This would be your public ip reachable over internet through which you ssh.", "start_char_idx": 4695, "end_char_idx": 9831, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ebb129d1-7096-4262-b8e8-e5457e02c16e": {"__data__": {"id_": "ebb129d1-7096-4262-b8e8-e5457e02c16e", "embedding": null, "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87", "node_type": "4", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "e8d9af25cf3dadd73ddb70cb3f7806c4d427c0ddfa956ced43f02846fc67016a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3b1ba30-c716-4ab5-903c-cb498940132c", "node_type": "1", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "e7165ff981881ebec02b4d438e3802f4f0ac692a00031e9623e3a4d9df34a995", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7fa8e492-916e-4246-abeb-a0139f8155e9", "node_type": "1", "metadata": {}, "hash": "77813f2f14b95e41f8583335926243d66af4d899ce47fff639bc022cad573ee4", "class_name": "RelatedNodeInfo"}}, "text": "Explore more\non the different target visible under the drop-down selection and what each signifies. Now your\nVPC should have internet access.\n   Route Tables    Falt roules\n   Edit routes\n     Destination                                                      Target                                        Status                          Propagated\n         0.0/16                                                        Iccal                                        actve\n                                                                       igw-0f4d90b5c97de9d34\n    Addroute\n     Required                                                                                                                                                    Cancci  Savc routes\nNow you need to create three \u201celastic IPs\u201d for your three VM\u2019s. Explore more on what elastic ip\nmeans. This would be your public ip reachable over internet through which you ssh. Make note\nthat you would be billed for elastic ip usage if your ec2 instance is stopped and elastic ip is not\nassociated with it. So, be mindfull of that. When stopping an ec2 instance, you should also\ndisassociate the elastic ip and release the elastic ip back to the IP pool, since global ip\u2019s are less.\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-\neip.html\n---\n      awS\n   VPC Dushibujro                         (1/1)                                                                                      ctinna\n                                                                                            lot-Ition                  Ania-nce I0\n  VIRTUAL PRIVAIL\n  Clou                                                                                                           1035447347fb8d1t67 @\n                                                                           Publl IP\n   Tui VFLS\n   Rcute lables\n   LACF Uploms\nSelect \u201callocate elastic ip address\u201d. Select us-west-2 region and press allocate.\n     VPC                                      Allocate Elastic IP address\n                 Elastic IP addresses\n     Allocate Elastic IP address\n      Allocate an Elastic IP address by selecting the public IPv4 address pool from which the public IP address is to be allocated: You\n      can have one Elastic IP (EIP) address associated with          running instance at no charge: If you associate additional EIPs with that\n     instance, you will be charged for each additional EIP associated with that instance on                pro rata basis. Additional EIPs are only\n      available in Amazon VPC. To ensure efficient use of Elastic IP addresses,we impose                small hourly charge when these IP\n      addresses are not associated with        running instance or when they are associated with            stopped instance or unattached\n      network interface: Learn morelZ\n         Elastic IP address settings\n         Network Border GroupNetwork Border Group is a logical group of Zones fromwherepublic IPv4 addresses are advertised. Set this parameter to limit the IPv4\n         address t0 the Zones in Network Border Group_\n                uS-west-2\n         Public IPv4 address pool\n         Public IP addresses are allocated from Amazon's pool of public IP addresses, from   pool that you own and bring t0 your account or from\n         pooethat you own and continue t0 advertise;\n              Amazon'spool of IPv4 addresses\n             Public IPv4 address that you bring to your AWS accountloption disabled because no\n             poolsfound) Learn moreCZ\n              Customer owned pool of IPv4 addresses(option disabled because no customer owned\n              pools found) Leamn morels\n                                                                                                                         Cancel           Allocate\nWhen you have instance created, you can attach it to your instance or n/w interface. We will be\nusing n/w interface to attach the global ip. After attaching ip to your network interface, you\ncannot do any operations that would the change the interface characteristic such as changing IP\nor bringing down interface etc.\nQuestion: How is amazon able to convert your public IP and reach your private IP on the\ninterface?\n\n\nIf you face network packet drops, make sure to look at network ACL list and security group of\nyour instance. These both acts as firewall. Now we are done with networking part. Now we have\nto create EC2 instance.\nEC2 instances are VMs which run over xen hypervisor in bare metal hardware\n---\nResearch more on AWS IAM, how the permission is granted for different users etch and how to\ncreate new one from:\nhttps://aws.amazon.com/iam/\nhttps://docs.amazonaws.cn/en_us/IAM/latest/UserGuide/introduction.html\n\n\nGo to your EC2 console tab by going to:\nhttps://us-west-2.console.aws.amazon.com/ec2\n\n\nGo to instances and select \u201claunch instance\u201d.\n\n\n1.        First, we need to select OS image. For vyos, it should be selected from Community\nAmi\u2019s. Select vyOS free (HVM) 1.2.1-2019-06-04-05-21 (ami-023863e610a5ee8fe) image. Explore\nmore on what AMI means in AWS.", "start_char_idx": 8897, "end_char_idx": 13999, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7fa8e492-916e-4246-abeb-a0139f8155e9": {"__data__": {"id_": "7fa8e492-916e-4246-abeb-a0139f8155e9", "embedding": null, "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87", "node_type": "4", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "e8d9af25cf3dadd73ddb70cb3f7806c4d427c0ddfa956ced43f02846fc67016a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebb129d1-7096-4262-b8e8-e5457e02c16e", "node_type": "1", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "5b891ebbabcafc39dfde4a76d9403040f18719053f3b1be59ec7caf094df6def", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88353351-597c-4f48-9710-416be70ed517", "node_type": "1", "metadata": {}, "hash": "e932106eeba1ba6e7e8a63d28b9b27ec43f7057d313a891f279d741d96d89d4e", "class_name": "RelatedNodeInfo"}}, "text": "Go to your EC2 console tab by going to:\nhttps://us-west-2.console.aws.amazon.com/ec2\n\n\nGo to instances and select \u201claunch instance\u201d.\n\n\n1.        First, we need to select OS image. For vyos, it should be selected from Community\nAmi\u2019s. Select vyOS free (HVM) 1.2.1-2019-06-04-05-21 (ami-023863e610a5ee8fe) image. Explore\nmore on what AMI means in AWS. With this way, you can install your own OS image on AWS\nservers.\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html\n                                                   cv?homclcnion\n                        stoup\n Step `Choose an Amazon Machine Image (AMI)\n    Cuck stn\n                         YDS Irut                                                                                 Eclcet\n                                                                                                                  64 D026\n2.        Then press select. In next window select \u201ct2.micro\u201d for your instance type. We have\nchosen this type because it\u2019s free under free tier limit. Here is where you will select the hardware\nconfigurations for your VM. Explore more on different type supported and its cost per hour.\n StepECz p0rdesChoose an Instance Type\n                   ECUS;\n             ammll                                    Ucmon                                                         [ suppolt\n                             Znanj                                      EBS cnt\n                                                                        ELS cnh                       Lox lo kodela =\n3.        select \u201cnext: configure instance details\u201d on bottom right most corner and configure your\ninstance details here. Here under network you have to select your newly created VPC in previous\nstep. In subnet tab, select the subnet belonging to 16.0.1.0/24. Keep rest of the configuration\nsame. Now in the \u201cnetwork interface\u201d section, select \u201cadd device\u201d. This creates one more\nadditional network adapter. You can assign static ip or get your ip from AWS DHCP server,\nwhich will be always running on VPC. Attach your newly created network adapter to 16.0.2.0/24\nsubnet. You can see a warning message that now public ip won\u2019t be assigned by AWS. This is\nwhy we need elastic IP to attach to one of these network adapters.\n---\n                                         scncts                                              (Sroup?\n                                                                                     Conliauro Mnslanco                         Ldd Slolage                   add Ti-\n Step 3: Configure Instance DetailsYou can Iaunch mlinle insrances Irom the same HA request SpCt instances                                                                                                         take 2dvaliage 0l te loxer prkcing assign      access manzdemen (ce  tne Inelanceand Mcte\n                                                      Isances\n                                     ~urchiaingopton                                        Orequest Spc\" instances\n                                                                                            px-Odc 4db4o '3b9269c0 | labz                                                                    Cicalc C\"VPC\n                                                          Subnel                             Subnel-0 037092803603050                                                  US-west _             Create nC; subnel\n                                                                                                        ACdresses jvaiade\n                               Aulo-Jssian Public IP                                         Disable\n                                       Placemcnt group                                      Oadd\n                               LpacinRatenatnon\n                               Domnoin dltecton                                              Nlo duccton                                                                                      CealeneCrecion\n                                                                                            Oprolect againsi arcidental ternation\n                                                   onironing                                OEnable\n                                                                                             nudiliinalchalges apaly\n                                                          Tenancy                            Snaieo           Run a saled narduale Inslance\n                                                                                             nudiliinalchalges                       aph' Iol Cedkaled lenanty\n                                                                                            Dadd\n                                                                                             Adilinulchandcs apal\n          Network interfaces\n                                                                  Subrul\n                                                                                                                                                   Add 2                                                        e\n                                                                  sutnci-0216170 ~\n                     We can no longer assignIP audiesy fealure for IFty ErslarkeYouI insancePublic                Ucubeu bitjuy\n                                                                                                        uc-\n          Advanced Dolais\n4.                                 Now select next, next and again select next to reach \u201cconfigure security group\u201d. If you\nwant to change storage configurations you can do in these respective tabs. In \u201cSecurity group\u201d,\nYou have to add firewall rules for your respective traffic to allow. By default, SSH is enabled.\nConfigure in below way to allow ping, iperf and tcp, udp packet exchange.", "start_char_idx": 13650, "end_char_idx": 19554, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88353351-597c-4f48-9710-416be70ed517": {"__data__": {"id_": "88353351-597c-4f48-9710-416be70ed517", "embedding": null, "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87", "node_type": "4", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "e8d9af25cf3dadd73ddb70cb3f7806c4d427c0ddfa956ced43f02846fc67016a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fa8e492-916e-4246-abeb-a0139f8155e9", "node_type": "1", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "b913e539ce4ce66344beadbc4b467a52a4a50709e915cf6bffc402a5cab1b220", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0573e874-b0f1-49d4-bc44-a7cd3df06f9c", "node_type": "1", "metadata": {}, "hash": "6f7370036768169746e0754914f6b621588da8423cdcc7e25c891e87ac7cd747", "class_name": "RelatedNodeInfo"}}, "text": "Now select next, next and again select next to reach \u201cconfigure security group\u201d. If you\nwant to change storage configurations you can do in these respective tabs. In \u201cSecurity group\u201d,\nYou have to add firewall rules for your respective traffic to allow. By default, SSH is enabled.\nConfigure in below way to allow ping, iperf and tcp, udp packet exchange.\n   Step                 Configure Security Group\n    eum                                                                                                                                                                                                                              M +\n                                    Secunt aroup name\n                                                    Deacnp-ior\n                                                                                                                                                                                  Pon Ajane\n                                                                                                                                                                                                                                                         Cicm\n       ATCp                                                                                                                                                                                                                                              Cuutoat\n                    Watnng]\n5.                                 Now press \u201creview and launch\u201d and then select \u201claunch\u201d to start your new VM which\nwould be visible under your instance tab.\n6.                                 Here you would have to create ssh public, private key for logging into your ssh session.\nGive a name and download your key-pair. Never ever loss the private key as this key cannot be\n---\nregenerated again and you won\u2019t be able to access instance again. You can use the same private\nkey for multiple instances instead of choosing \u201ccreate a new key pair\u201d.\n     Select an existing key pair or create a newkeypair\n      A key pair consists of a publickeythat AWS stores, and a private key file that you store. Together;\n    they allow you to connect to your instance securely: For Windows AMls, the private key file is required\n     to obtain the password used to log into your instance. For Linux AMls , the private key file allows you to\n     securely SSH into your instance\n     Note- The selected keypairWIllbe added to the set of keys authorized for this instance. Learn more\n     about removing existing key pairs from a public AMI _\n               Create a newkeypair\n             Keypair name\n             llab2i\n                                                                                                                              Download Key Pair\n                            You have t0 download the private key file (*pemfile) before you can continue:\n                            Store it in a secure and accessible Iocation. You will not be able t0 download the\n                            file again after it's created.\n                                                                                                                 cancel              Launch Instances\nExplore more on ways to connect to your instance by going to below link:\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstances.html\n\n\n7.              Give a name for your instance and observe what all configuration it shows by selecting\nyour instance. From the description info you should be able to reach your VPC, security group,\nidentify network interface adapter id etc.\n                                                                              Jnna            77 chacks                  35 164 IBB 707                dianblad\n                                                                                               Inmintzinj\n                     4-097nn569622241014 ricio                                                                                                         disabied\n                                         12 Micio                             lorped\n---\n                                        0620473                                         Privato\n      Delcrpbon                                             pomlonng\n                                     In:lunce\n                                                         02 Micno                                                                                                               IP 0 Pr\n                                          Frdina                     AVS Compfe Opt Tizer far recommend-tcn;an Mol                                                          Elsic IpJ<\n                                    Prnaatt D4S\n                                                                                                                                                                      Setuty qioup?                                                            cuticund nos\n                                          VPC ID                                                                                                                                  JI ID        Vy05          HM\n                                                                                                                                                                              Subac\n                               Fiatlolnt cataka\n                                                                                                                                                                             par name\n                               T2} U-limeed              Dinded                                                                                                                                644470ng7?\n                                FHS en47ed                                                                                                                                                     AuTuX          2020 Ji\n                                                                                                                                                              Iemanaiion poleciidn\n                                                                                                                                                                               Leectcle        noimai\n                                                                                                                                                                               KetnelD\n                        Cinciy Rezenntion\n            Cljciy Rescnation Scttings                  Open\n                                    uledal\n8.                            Now we need to associate one of the elastic IP we created in previous steps to this\ninstance. Go to VPC tab and then \u201celastic IP\u201d. Associate this elastic IP with your network\ninterface adapter of the EC2 instance.Fucer Dv [uot   seurch         kencrd\n            MJme                       Mxomce I                              Iuhuilce                        auilbuility Lone  Ins(Jnce       Stalu} Checky                               Public DMS (IPv4]                 1pv4 Fublic Il                     Ipv6 Ir;                          Kay Mumc\n                                                                             42 M -C                         W-West ?a               nnnino        202 check\n                                                                                                                                     nennin?\n  Instance:          1-090159edaogecrab?", "start_char_idx": 19200, "end_char_idx": 26904, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0573e874-b0f1-49d4-bc44-a7cd3df06f9c": {"__data__": {"id_": "0573e874-b0f1-49d4-bc44-a7cd3df06f9c", "embedding": null, "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87", "node_type": "4", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "e8d9af25cf3dadd73ddb70cb3f7806c4d427c0ddfa956ced43f02846fc67016a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88353351-597c-4f48-9710-416be70ed517", "node_type": "1", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "3a2a9efbf3353b8b03a2698bf19f3d8b26e5051f9cbd18b8d9ed6972bfb05aca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f28ed727-e54f-4931-a774-27814c9c2c12", "node_type": "1", "metadata": {}, "hash": "b0e2346d08e3564f89899b1e6aae16943387f9f6d1f1e22ad9cc2cd9dc730a5f", "class_name": "RelatedNodeInfo"}}, "text": "Now we need to associate one of the elastic IP we created in previous steps to this\ninstance. Go to VPC tab and then \u201celastic IP\u201d. Associate this elastic IP with your network\ninterface adapter of the EC2 instance.Fucer Dv [uot   seurch         kencrd\n            MJme                       Mxomce I                              Iuhuilce                        auilbuility Lone  Ins(Jnce       Stalu} Checky                               Public DMS (IPv4]                 1pv4 Fublic Il                     Ipv6 Ir;                          Kay Mumc\n                                                                             42 M -C                         W-West ?a               nnnino        202 check\n                                                                                                                                     nennin?\n  Instance:          1-090159edaogecrab? (vyos_Iabz_test)                                      Private            10,0.1-114                                                                                                                                Tpc-Odc Idb16*869269ec\n                                                                                                                                                                                                                                                             624934703672\n    Descnpuon                   Staius Checks                                           Tags                                                                                                                                                                 Sunaa             13.08 57 Gmi-T00\n                                       nshance                                                                                                                                       Public DNS IIAA\n                                  Insiance siaie            TUNMIO                                                                                                                                                        OOelete         Tennate\n                                   nsiance [ Ce             I2 M(o                                                                                                                                                                                           10.0.1.114\n                                            Hodma           Oc-                                                                 Leam moie                                                       Elastic [Ps                 Prrate ENS Name\n                                     Pmate DNS                                                 comcute Irtlernzl                                                                        Axailatility zone                     Pullc\n                                                            10 0 285                                                                                                                    Secunty gICups                                  Dcscrichon\n                                            UPCIC                                                (lab?_test)                                                                                                                    Sccuny (sroum'\n                                           Flalfori         Olher Linux                                                                                                                          Subncl ID             Elastic Fabrc Adape                   Disabied\n                                                            Linlo UML\nGet the network interface ip first and give that ip in the elastic IP tab. Select \u201callow the elastic IP\nto be re-associated\u201d and then select associate. Check first whether you are able to ping this IP. Ig\nyou are not able to ping then detach this IP from the instance and again re-associate with the next\nnetwork adapter ID. This way, if you are not able to SSH session to interface issue, you can\nrecover VM in this way.\n---\n       VPC           Elastic      addresses             Associate Elastic IP address\n       Associate Elastic IP address\n       Choose the instance or network interface to associate to this Elastic IP address (44.235.3.188)\n           Elastic IP address: 44.235.3.188\n            Resource type\n           Choose the type of resource with which to associate the Elastic IP address\n                 Instance\n                 Network interface\n                      If you associate an Elastic IP address to an instance that already has an Elastic IP address associated, this\n                      previously associated Elastic IP address will be disassociated butstillallocated to your account: Learn morelZ\n            Network interface\n                   eni-05320831f25545131\n           Private IP address\n           The private IP address with which to associate the Elastic IP address;\n                   10.0.1.114\n           Reassociation\n           Specify whether the Elastic IP address can be reassociated with                 different resource if it already associated with     resource:\n                 Allow this Elastic IP address t0 be reassociated\n                                                                                                                                             Cancel        Associate\n9.             Now similarly create a client, server VM by using ubuntu \u201c16.04\u201d image. In the\n\u201cconfigure instance details\u201d tab you would have to accordingly choose one subnet which belongs\nto the vyos VM as done in LAB1 so that the router to client, router to server VM connectivity is\nestablished. All these VMs should be under same VPC. We choose the second interface for\nglobal elastic IP mapping to private IP for SSH connectivity so that we can play around with\nLinux commands on first network adapter interface eth0 under VM.", "start_char_idx": 26017, "end_char_idx": 31960, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f28ed727-e54f-4931-a774-27814c9c2c12": {"__data__": {"id_": "f28ed727-e54f-4931-a774-27814c9c2c12", "embedding": null, "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87", "node_type": "4", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "e8d9af25cf3dadd73ddb70cb3f7806c4d427c0ddfa956ced43f02846fc67016a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0573e874-b0f1-49d4-bc44-a7cd3df06f9c", "node_type": "1", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "0970a6e81065bb4b0415462dd008b2a0c8e41a7bf14c9151c40bc80b115df125", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80d8543b-9657-4c7a-8212-52d749e43a01", "node_type": "1", "metadata": {}, "hash": "b70bf708735e677ce68d1f36da0af44d24bd346d8ca1792e5b93a7053e55839a", "class_name": "RelatedNodeInfo"}}, "text": "Now similarly create a client, server VM by using ubuntu \u201c16.04\u201d image. In the\n\u201cconfigure instance details\u201d tab you would have to accordingly choose one subnet which belongs\nto the vyos VM as done in LAB1 so that the router to client, router to server VM connectivity is\nestablished. All these VMs should be under same VPC. We choose the second interface for\nglobal elastic IP mapping to private IP for SSH connectivity so that we can play around with\nLinux commands on first network adapter interface eth0 under VM.\n  siep     Choose an AmazonMachine Image                                                                                                                                  cincolland Exil\n                                                              Ss0'Jlum\n                                                                                                                                                                      uacn\n                                                        Fotarsol\n---\n            Nelwork interfaces\n        Qevce              Nervork Intentace                                 Subner                                  Primary                                                Secondar}                 addresses                      IpveiPs\n                            New nebwort Interace                             suonel-0o37o                              Auto-assign                                          Addi                                                     Add IP\n       ethi                 New newvonk intenace                             subnel-06e9425                             Auto-assimn                                         Acdi\n                        We can no longer assign                                      public IP address                             your instance\n                        The aulo-ass gn publk                         address feature                    this insiance               dlisabled Decause youspeciliecmult ple newwork interaces Publlc IPs can cnly                               assigned\n                        instances Wiith one network interace                                        ~enable the auto-assign public                            acdress featureplease specily only the etho netwcrk Interace\n10.                           If you try to change any configuration of you elastic IP mapped network interface, your\nssh would go down. So, don\u2019t do any configuration on that interface. This is why we created two\nn/w interface for client, server VM.\n11.                           If you are not able to SSH, dissociate elastic IP from one network interface and connect\nto other. This could be due to that IP is not assigned for that network interface, since dhcp client\nwould have to be manually started on the second interface eth1. So, it would be better to connect\nelastic IP to first interface always and after logging in and setting IP statically using ifconfig eth1\n(static ip would be available from instance tab, you can even set these while you are in crating\nn/w interface tab when new instance is being created) and then change elastic IP mapping to this\ninterface. Ensure that AWS private IP shown and the actual VM IP of that interface matches.\n(You can assign static IP in \u201cPrimary IP\u201d tab).\n12.                           Similarly, do the above steps for server VM, with subnet properly chosen for one n/w\ninterface and other n/w interface mapped to last subnet where elastic IP would be matched.File systems  AdateSvsten                                     Create new iile system\n          Nelwork interfaces\n      Device               Network Intertace                                    Subnet                                     Primary                                                   Secondary                    addresses                   Ipv6 Ips\n     elho                                                                       subnel-0265170                               Auto-assign                                              Add IP                                                   dd IF\n     elh1                  New\" nehwork inlenace                                 subneloj5eabi                               Auto-3em                                                 Add IP\n                        We can no longer assign                                           public IP address to your instance\n                        The auto-assign public                           acdress leature ior this insiance                                  dieanleonecamse Vomspeciiied multiple network Interfaces. Public IPs can only                                 assigned t0\n                        instances with one network intertace                                              enable theauto-assign pubilc                                  address teature; please specily only theethdnetwcmInterface\nNow that we have created the topology, its time to login to all of your client, server, vyos VM\nthrough SSH. You will observe that there is no user/pass prompt here. This is because we are\nusing certificate which employ asymmetric key cryptography for authentication.\n13.                           Also, you would have to change network interface adapter setting of \u201cSource/dest check\u201d\nto allow traffic to pass over vyos router. Make this setting to Disable. What does this setting do?\nExplain.\nC? Dashbolrd\n                                                                                                      JuLual ID                                                                           HICup                buiqipliu\nSTUNCES\n     RLquLE\nunjs Purs\n---\n14.       Now you would have to change routing table of Client, Server VM to redirect the traffic\nto VYos VM as by default AWS set\u2019s a default route in all of the VM to redirect traffic to its\ndefault router. Explore how to do this with help of ip route commands. Ensure ping from client\nto server VM is passing through vyos VM with help of tcpdump listening on each interface.", "start_char_idx": 31444, "end_char_idx": 37510, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80d8543b-9657-4c7a-8212-52d749e43a01": {"__data__": {"id_": "80d8543b-9657-4c7a-8212-52d749e43a01", "embedding": null, "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87", "node_type": "4", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "e8d9af25cf3dadd73ddb70cb3f7806c4d427c0ddfa956ced43f02846fc67016a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f28ed727-e54f-4931-a774-27814c9c2c12", "node_type": "1", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "b1aec757a0273ca34b716438ceac55c7303d2254d59b67056610460cdf69032f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c4c8211-6512-470e-a3c5-dd8425fa365d", "node_type": "1", "metadata": {}, "hash": "b5b098522e859a20faddb930e0e518a0ea86b6b1e366476e2f77d360d3b4f018", "class_name": "RelatedNodeInfo"}}, "text": "This is because we are\nusing certificate which employ asymmetric key cryptography for authentication.\n13.                           Also, you would have to change network interface adapter setting of \u201cSource/dest check\u201d\nto allow traffic to pass over vyos router. Make this setting to Disable. What does this setting do?\nExplain.\nC? Dashbolrd\n                                                                                                      JuLual ID                                                                           HICup                buiqipliu\nSTUNCES\n     RLquLE\nunjs Purs\n---\n14.       Now you would have to change routing table of Client, Server VM to redirect the traffic\nto VYos VM as by default AWS set\u2019s a default route in all of the VM to redirect traffic to its\ndefault router. Explore how to do this with help of ip route commands. Ensure ping from client\nto server VM is passing through vyos VM with help of tcpdump listening on each interface.\nExplore more on tcpdump command from below:\nhttps://opensource.com/article/18/10/introduction-tcpdump\n15.       Can you answer why SSH goes down if IP is changed on that interface?\n16.       What can be used in vyos Vm to start dhclient in Vyos VM?\n 17.      If interface adapter is not visible in your instance you have to do:\n   ifconfig <intf> up\n 18.      Also check:\n  /etc/network/interfaces.d/50-cloud-init.cfg, for cloud override scripts.\n  This is how OS get\u2019s its IP automatically on AWS.\n 19.      Next step is to install iperf, iperf3 on client, server VM. You would observe that VMs are\n not able to contact internet. Why is this? Explain. How can you correct it?\n      To solve it, look at /etc/resolvconf/resolv.conf.d/base file.\n 20.      You would also have to do \u201csudo apt update\u201d. What does this command do?\n\n\nMEASUREMENT WITH IPERF\n\n\n1.        Execute:\niperf3 -s on server VM and iperf3 -u -c <server IP> -b <bw> on\nclient VM\nto test bandwidth of your connection over udp. Explore tcp throughput measurement also by\nusing iperf. What is the max throughput and bandwidth you were able to achieve? Why if there is\nany difference in measurement between these two readings over same link?\n2.         Now set:\n sudo tc qdisc add dev eth0 root netem delay 100ms.\n          on client, server VM and again do step 21. Were there any change in readings. If there is\n a change why is it?. (add -> when first time creating, change -> to update).\n 3.       Now set:\n sudo tc qdisc change dev eth0 root netem delay 0ms loss 10%\n and take another measurement. What is your observation.\n 4.\n   dmesgRun -wH\n in background to get kernel logs, for observing any kernel errors while you are executing the\n above commands and for hints to correct it. Also note the mtu of the interface and what is its\n significance on your readings. (you can change mtu using ifconfig and repeat iperf).\n 5.       Execute:\n sudo tc qdisc del dev eth1 root\n          for deleting the set configuration.\n 6.       Execute:sudo tc qdisc add dev eth0 root tbf rate 100mbit latency 1ms burst\n9015\n     Then run again step 21. What is your observations? What is the significance of the above\ncommand and how it effects performance?\n7.          Execute -s eth0 speed 10\nsudo ethtool\n---\n         Did you get any error and why is it not allowed in AWS? Explain.\n8.       Now delete all the above set configuration on interfaces on client, server VM and do the\nsame steps on vyos VM on interface not mapped to elastic ip. Were you able to get the same\nobservations as before in this configuration? Comment.\n\n\nRefer below link for more understanding on queuing disciplines in Linux network stack.\nhttps://tldp.org/HOWTO/Traffic-Control-HOWTO/overview.html\nhttps://tldp.org/HOWTO/Traffic-Control-HOWTO/elements.html\nhttps://tldp.org/HOWTO/Traffic-Control-HOWTO/components.html\nhttps://tldp.org/HOWTO/Traffic-Control-HOWTO/classless-qdiscs.html", "start_char_idx": 36540, "end_char_idx": 40428, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c4c8211-6512-470e-a3c5-dd8425fa365d": {"__data__": {"id_": "1c4c8211-6512-470e-a3c5-dd8425fa365d", "embedding": null, "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1c1f529e-e17d-45f7-9dc8-4928a205ba87", "node_type": "4", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "e8d9af25cf3dadd73ddb70cb3f7806c4d427c0ddfa956ced43f02846fc67016a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80d8543b-9657-4c7a-8212-52d749e43a01", "node_type": "1", "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}, "hash": "37a7065c20c18c1615a29dfa4af06c1201c4f5b3f326f34a194e5450fd0e17c4", "class_name": "RelatedNodeInfo"}}, "text": "Refer below link for more understanding on queuing disciplines in Linux network stack.\nhttps://tldp.org/HOWTO/Traffic-Control-HOWTO/overview.html\nhttps://tldp.org/HOWTO/Traffic-Control-HOWTO/elements.html\nhttps://tldp.org/HOWTO/Traffic-Control-HOWTO/components.html\nhttps://tldp.org/HOWTO/Traffic-Control-HOWTO/classless-qdiscs.html\n\n\nMake a brief report on your understanding of AWS and how it works along with the commands\nyou have tried out and the issues you have debugged to make it work. Also explain the readings\nyou have got from iperf in different scenarios by executing the above mentioned \u201ctc\u201d commands\non Linux. Also, make sure to answer questions posed in the steps mentioned in the document and\nany errors you have faced which you have resolved.", "start_char_idx": 40096, "end_char_idx": 40855, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a0ee20ab-f0db-45da-b6fe-58515711a90f": {"__data__": {"id_": "a0ee20ab-f0db-45da-b6fe-58515711a90f", "embedding": null, "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "808a3577-2990-4d70-8936-90c3f1a265ab", "node_type": "4", "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}, "hash": "74944aaa711ffe3cd0ab981c023396bf38e25c432d1c5c192e8a11abb1cc9f00", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d906bcfb-6a67-4667-a263-90dd09ba2b9c", "node_type": "1", "metadata": {}, "hash": "1491f120c33f96cdeab22366ce3dd34e0292e93f31044e4582d814b6a620342c", "class_name": "RelatedNodeInfo"}}, "text": "EE 542 \u2013 Laboratory Assignment #3: Network Measurement (individual project)\n                                              Instructor: Young H. Cho\n                                        Due date: September 9 at 11:59pm\n\n\n Due to the difficult of the next Lab, there will be no video submission for this lab. Remember\n to start the Lab 4 ASAP with your team !\n\n\n 1. Exploring Bandwidth and Throughput\n\n\n This exercise will let you explore measuring bandwidth and throughput on your testbed on AWS.\n Your report should contain tables or graphs that show your results in a meaningful manner, and\n more importantly your thoughts and conclusions as to what the results mean. Remember, never\n perform an experiment just once, make sure to collect several runs and average the results. Please\n include any files you create as an addendum to your report. Have fun!\n\n\n You'll need to familiarize yourself with the iperf tool. Use Linux OS to do all of the tests. Be\n complete in tests and explanations.\n\n\n Go through some/all of the following tutorials before you begin (depends on your level of\n familiarity):\n\n\n          http://www.ee.surrey.ac.uk/Teaching/Unix/\n          https://www.garron.me/en/linux/visudo-command-sudoers-file-sudo-default-editor.html\n          https://openmaniak.com/iperf.php\n          https://netbeez.net/blog/how-to-use-the-linux-traffic-control/\n          https://www.poftut.com/linux-ethtool-tutorial-usage-examples/\n\n\n1.1. Bandwidth-Delay Product.\n\n\n1) Use a network of Linux nodes (two \u2013 one client, one server) connected via an IP router (vyos)\n     from Lab 2 in AWS.\n     Use the ping tool to measure the round-trip delay between two machines.\n     Use iperf or iperf3 (look at iPerf hint section 1.3) in UDP mode to measure the maximum\n     bandwidth (explore -b <bw> option).\n     Now use iperf or iperf3 in TCP mode to measure the TCP throughput.\n     You can use either iperf or iperf3 for all your tests.\n\n\n2) Now use \u2018netem\u2019 on router to artificially inject a delay to the link in one direction. For example,\n     if your ethernet link is named \u2018eth0\u2019\n\n\n     # sudo tc qdisc add dev eth0 root netem delay 100ms\n\n\n     should add an approximate delay of 100ms to the network link. You only need to do this in\n     interface of vyos connected to client.\n     Verify the added network delay using ping and iperf.\n\n\n     Perform 4 additional emulated network latency experiments using netem. (i.e. 10ms, 50ms,\n     200ms, and 500ms)\n---\n    Test the correct functioning of the tool with ping and iperf\n\n\n3) Now use \u2018tbf\u2019 in tc to change characteristic of Ethernet link speed.# sudo tc qdisc add dev eth0 root tbf rate 10mbit latency 1ms\n    burst 90155\n\n\n    This should change the speed of your Ethernet link to 10Mbps. In order for the entire network\n    to have the same speed, this command needs to be entered on both interfaces of router VM\n    connected to client, server side respectively. You can tune burst parameter to achieve higher\n    throughput (burst should be greater than 9015, else you will get an error logged in dmesg).\n    Your throughput might also be impacted due to VM scheduling done by AWS scheduler for\n    vyos router instance. Also tune burst to lower and higher value and observe impact on\n    throughput. Can you comment what this parameter does?\n\n\n    Verify the changed speed using iperf.\n    Change the network speed to 10Mbps, 100Mbps, and 1000Mbps and do the step (2).\n    Comment on the results at this point. Were you surprised at all?\n\n\n    Find out the receive and send network buffer sizes on server, client VM.\n\n\n    # sudo cat /proc/sys/net/core/rmem_max\n    # sudo cat /proc/sys/net/core/wmem_max\n\n\n4) Change the maximum size for the send/receive windows to 2Mbyte on server, client VM:\n\n\n    # sudo sysctl -w net.core.rmem_max=2097152\n    # sudo sysctl -w net.core.wmem_max=2097152\n\n\n    Perform step 2 and 3 again and comment on the result. What do you think is going on?\n    Experiment with the window sizes and comment on the results.", "start_char_idx": 8, "end_char_idx": 4019, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d906bcfb-6a67-4667-a263-90dd09ba2b9c": {"__data__": {"id_": "d906bcfb-6a67-4667-a263-90dd09ba2b9c", "embedding": null, "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "808a3577-2990-4d70-8936-90c3f1a265ab", "node_type": "4", "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}, "hash": "74944aaa711ffe3cd0ab981c023396bf38e25c432d1c5c192e8a11abb1cc9f00", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0ee20ab-f0db-45da-b6fe-58515711a90f", "node_type": "1", "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}, "hash": "81c01fea92215f4d9cabbbbf46b85402dd17405434ce97c648743b4360489f21", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "12971a22-603e-438e-a3c2-3eee0c64a733", "node_type": "1", "metadata": {}, "hash": "f0f35fa98bff205fe8e41cffa74879bf7c6db92b6d45322573a5ea053b91f58f", "class_name": "RelatedNodeInfo"}}, "text": "Verify the changed speed using iperf.\n    Change the network speed to 10Mbps, 100Mbps, and 1000Mbps and do the step (2).\n    Comment on the results at this point. Were you surprised at all?\n\n\n    Find out the receive and send network buffer sizes on server, client VM.\n\n\n    # sudo cat /proc/sys/net/core/rmem_max\n    # sudo cat /proc/sys/net/core/wmem_max\n\n\n4) Change the maximum size for the send/receive windows to 2Mbyte on server, client VM:\n\n\n    # sudo sysctl -w net.core.rmem_max=2097152\n    # sudo sysctl -w net.core.wmem_max=2097152\n\n\n    Perform step 2 and 3 again and comment on the result. What do you think is going on?\n    Experiment with the window sizes and comment on the results.\n\n\n5) Now use the -w option for iperf to change the send and receive windows to 64, 128 and 256\n    kilobytes while again measuring the TCP throughput.\n\n\n6) Comment on your new results. You might want to put all of these results in a table.\n    At 100Mbit/s and 25ms of delay, what is the theoretically optimal send/receive window size?\n    If you run your experiment at this size, do you get 100Mbit/s of throughput?\n    If yes, why? If not, what could cause your link to run at less than full bandwidth?\n\n\n1.2.Bandwidth, Delay, and Loss.\n\n\nDelete the set configuration on router by executing:\n# sudo tc qdisc del dev eth0 root\n# sudo tc qdisc del dev eth1 root\nThis would cause the network to operate at its max speed. Then configure a delay of 25ms.\n\n\n1) Use ping to determine the average Round-Trip-Time (RTT) between the computers.\n---\n2) What is the bandwidth-delay product for this link?\n     Use iperf in UDP mode to measure the bandwidth.\n     Use iperf in TCP mode to measure the TCP throughput.\n\n\n3) If you left the send/receive windows at their default values, would this link perform well?\n\n\n4) Can we scale the send/receive windows to see the effect of a bandwidth-delay product/TCP\n     window size mismatch?\n     Does it make sense to do so?\n\n\n5) Set the send/receive window values to something too small (i.e. about the value calculated in\n     (2). Now measure the TCP throughput. What happened?\n\n\n6) Comment on these results. Specifically, what happens if we have a gigabit speed link (deleting\n     tbf and netem cause link to operate at gigabit speed) with 1ms of delay? 5ms?\n\n\n     Would you be happy with a 1GB DSL connection knowing you can only control the receive\n     window size (hint: the RTT to the east coast of the US from Los Angeles can be 50ms or\n     greater)?\n\n\n7) Use \u2018netem\u2019 on router VM to Emulate packet loss. For example, if your ethernet link is named\n     \u2018eth0\u2019\n\n\n     # sudo tc qdisc change dev eth0 root netem loss 0.1%\n\n\nThis causes 1/10th of a percent (i.e 1 out of 1000) packets to be randomly dropped.\nVerify the packet loss using iperf.\nYou cannot have netem and tbf operating at same time in tc. You must delete one of them to add\nother.\n\n\n1.3. iPerf hints\n\n\n1) To test the available bandwidth using iperf in UDP mode, use the following on the server\n     machine:\n\n\n     # iperf -s -u -p <port num>\n\n\nWhere <port num> is any port number you choose > 1024\n\n\n2) Then on the client:\n\n\n     # iperf -c <server name> -u -p <port num> -b <BW>\n\n\n     Where <server name> is the name of the server (defined in your experiment setup), and\n     <port num> is the same as chosen above. <BW> is the attempted bandwidth. Keep increasing\n     this number towards the link speed until you see packet loss. Report the highest bandwidth\n     possible with no packet loss.\n---\n3) To test TCP throughput using iperf use the following server line:\n\n\n    # iperf -s -p <port num> -w <window size>\n\n\n4) And the following client:\n\n\n    # iperf -c <server name> -p <port num> -w <window size>", "start_char_idx": 3321, "end_char_idx": 7041, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12971a22-603e-438e-a3c2-3eee0c64a733": {"__data__": {"id_": "12971a22-603e-438e-a3c2-3eee0c64a733", "embedding": null, "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "808a3577-2990-4d70-8936-90c3f1a265ab", "node_type": "4", "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}, "hash": "74944aaa711ffe3cd0ab981c023396bf38e25c432d1c5c192e8a11abb1cc9f00", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d906bcfb-6a67-4667-a263-90dd09ba2b9c", "node_type": "1", "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}, "hash": "89e7e22d79e7ea3dfb77d55875182a750596396d77eabae57b89125990e7ac59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e3423b4f-9d7c-4a64-8af8-ae299dfe0a6e", "node_type": "1", "metadata": {}, "hash": "37eb291510f3ffb4d5af1cdca634115c014ad6e185bbee4d95372777ca847176", "class_name": "RelatedNodeInfo"}}, "text": "Where <port num> is any port number you choose > 1024\n\n\n2) Then on the client:\n\n\n     # iperf -c <server name> -u -p <port num> -b <BW>\n\n\n     Where <server name> is the name of the server (defined in your experiment setup), and\n     <port num> is the same as chosen above. <BW> is the attempted bandwidth. Keep increasing\n     this number towards the link speed until you see packet loss. Report the highest bandwidth\n     possible with no packet loss.\n---\n3) To test TCP throughput using iperf use the following server line:\n\n\n    # iperf -s -p <port num> -w <window size>\n\n\n4) And the following client:\n\n\n    # iperf -c <server name> -p <port num> -w <window size>\n\n\n    Where <server name> and <port num>are defined as above. <window size> is the\n    window size you would like to use for send (on the client) and receive (on the server).\n\n\n2. Secure Copy\n\n\nThe `secure copy program' scp is a standard tool on modern UNIX-like machines. It is used to\ncopy files between machines, securely and reliably. However, as we will see, it does not always\nprovide good throughput.\n\n\n1) Set the network to operate at 100Mb/s using tc.\n\n\n2) What is the RTT delay between the nodes? What is the bandwidth delay product?\n3) On each node (client, server) create and mount a temporary local file system:\n# mkdir test/\n# dd if=/dev/urandom of=filesystem.bin bs=1M count=400\n# sudo mkfs filesystem.bin\n# sudo mount -o loop filesystem.bin test/\n# sudo chmod -R 777 test/\n\n\n4) On client node, execute below command inside folder test/:\n# cd test/\n# dd if=/dev/urandom of=data.bin bs=1M count=200\n\n\n5) Explain briefly what the above commands do.\n6) Now copy private key of the EC2 instance to which file is being copied to the VM where scp\n    command is being executed. (you can use scp with private key from your windows/mac for\n    copying it to the client VM)\n---\n       Advaiced Site Settings                                                                     Login\n                                                   Anhceh                                          Me;'Se\n           Dire 0ne5\n           Recycle bin          4uthent cobon opuons                                               adminoo19n-164 21                  Fila protocol:\n           Enonbar                 Attempt authenticoton Uer] Fcqeant\n           SCP chcl                                      alkenicalijn                              Jnt er7anenue\n                                                                                                                    Co1e3i 9+.70.169  Hcg nume;                         Pom num dec;\n         @onnemca                     tescond            che Tust prompt                           navecmjayarap_gino                    47.778 67\n           Funne                   Attempt TISCryp oCard cuthent cabion (SSH-I)                                                           rame;             passw nrd:\n                                4uthentcabon pofumeters                                            spaik_Ic:                          vountu\n           Auhenticalon            Allc; agent Fon drding\n                                                                                                                                                      Cance\n                                     DisplcFublic Ke\n                                   Attempt GSSAFl authenticabon\n                                                        Geleoutor\n                                                                                                                           Manaa\n7) Copy the file (data.bin) to the other node:\n#scp -i <privatekey> data.bin USER@othernodeIP:/home/ubuntu/test/\n\n\n8) What transfer throughput do you get?\n9) Explore the problem: increase the delay on the link. What happens to the throughput? Can you\n       improve the performance using the kernel parameters (i.e. default and maximum TCP window\n       sizes)? Make sure to explore RTT delays at least up to 50ms.", "start_char_idx": 6374, "end_char_idx": 10365, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e3423b4f-9d7c-4a64-8af8-ae299dfe0a6e": {"__data__": {"id_": "e3423b4f-9d7c-4a64-8af8-ae299dfe0a6e", "embedding": null, "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "808a3577-2990-4d70-8936-90c3f1a265ab", "node_type": "4", "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}, "hash": "74944aaa711ffe3cd0ab981c023396bf38e25c432d1c5c192e8a11abb1cc9f00", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12971a22-603e-438e-a3c2-3eee0c64a733", "node_type": "1", "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}, "hash": "69decbdf8aad8e80110afeb37f4b8298de3f8bd89b9f3ecdb26406d997196572", "class_name": "RelatedNodeInfo"}}, "text": "8) What transfer throughput do you get?\n9) Explore the problem: increase the delay on the link. What happens to the throughput? Can you\n       improve the performance using the kernel parameters (i.e. default and maximum TCP window\n       sizes)? Make sure to explore RTT delays at least up to 50ms.\n\n\n10) Does scp seem to have some sort of built-in limitation? Can you guess what it is? Hint: scp\n       uses the SSH protocol to transfer data.\n11) Now set your delay back to zero. At the same time add a small amount of packet-loss to the\n       link. Start at 0.1% (i.e. 1 packet dropped in 1000) and test at various loss levels up to 10%.\n       Graph throughput vs. loss. Discuss these results. Does this seem extreme? Can you explain\n       why this happens?\n12) Estimate (or measure) the delay and loss from Los Angeles to Switzerland. If you had a\n       physicist for a colleague, and he wanted to download some data from the new atom smasher\n       at CERN, would you expect him to come to you for help? Can you help him? If so, how?\n\n\nCreate a report slide deck with results and answers to all of the above questions.", "start_char_idx": 10066, "end_char_idx": 11193, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59c4c185-04c0-4758-92ff-55ebd0c7c067": {"__data__": {"id_": "59c4c185-04c0-4758-92ff-55ebd0c7c067", "embedding": null, "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d", "node_type": "4", "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "hash": "1736aa09cbe1c21a216286044664ba63b584ffb9edc003060a77482ed96fc177", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ab041f2-ff60-4e1a-9ad9-296bc49a7f9e", "node_type": "1", "metadata": {}, "hash": "54db5d4813e6efa619a3fe0abe8a779c2deb1a5bdbb3613524a38e8b6d3853da", "class_name": "RelatedNodeInfo"}}, "text": "EE 542 \u2013 Laboratory Assignment #4: Fast, Reliable File Transfer (Team)\n                                                    Instructor: Young H. Cho\n                  Due date: Sept 16 (Report) at 11:59pm and Sept 18 (Demo Video on Youtube)\n\n\nIn this lab, you will explore the real-world implications of how TCP performs under less than perfect\nconditions. Your goal is to develop a file transfer program (like scp or ftp) that uses your custom protocol\nthat performs better than any other program available. This is your first competitive laboratory. Top 25%\nof the teams with highest performance will receive Extra credit. The program should be built for Linux OS\nand code your program using C or C++.\n\n\nWhile TCP is effective, reliable, and relatively robust on the Internet, it doesn't always give us the best\nthroughput under every circumstance. In this section you'll design an IP based file-transfer utility. The\ndesign and implementation of the utility is up to your group, however it must full-fill only three\nrequirements: it must use IP (so it can be routed), it must transfer the file reliably (with no errors) and it\nmust be implemented with a command-line interface similar to scp.\n\n\nThe link speed of the sender and receiver must be 100Mbps and the test file size must be at least 1GBytes.\nYou should emulate the delay and the loss rate of the link using the delay node. You should test your system\nunder various different conditions. However, three settings that you must expose your system for the\nassignment are:\n\n\n     \u2022     The Delay (RTT) of 10ms with the Loss rate of 1% (bi-directional) set at router and link speed set\n           to 100Mbits/sec for server, client and router. (case - 1)\n     \u2022     The Delay (RTT) of 200ms with the Loss rate of 20% (bi-directional) set at router and link speed\n           set to 100Mbits/sec for server, client and router. (case - 2)\n     \u2022     Set link speed to 80 Mbits/sec and delay (RTT) to 200ms on with no drop at router and server,\n           client link speed set to 100 Mbits/sec. (case - 3)\n\n\nYou should run the above tests with MTU of 1500 and then with MTU of 9000.\n\n\nFor your demo and competition, you will need to create an experiment with two nodes (VMs) connected\nby vyos router VM (which adds delay of RTT 200ms and the loss rate of 20% or 1%). So, in total 200ms\nshould be visible for round-trip in ping and packet drop should happen in both Tx, Rx with Tx drop rate at\n20% and Rx drop rate at 20% as per scenario given above.\n\n\nCreate a simple topology of server, client, Vyos VM in Virtualbox as done in lab1 (1 server VM <=> 1\nVyos VM <=> 1 client VM) and make your code working there first. Do this to avoid the AWS cost since\nthere are some restriction placed for AWS free tier if you use 3 VMs at same time. Once everything\nis working in VirtualBox, compile the same code in AWS ec2 instance and try out all the scenarios\nmentioned in the document and fix your code of any bugs encountered in AWS environment.\n\n\nFor case-1,2: (record performance of your ftp code by transferring 1 Giga byte file)\n\n\nSet rate limit on both server and client VM to restrict speed to 100Mbit/s on egress by executing below\ncommand on both server, client. Here its assumed that eth0 belongs to 10.200.1.0/24 subnet for client and\neth0 belongs to 10.200.2.0/24 subnet for server respectively.\n# sudo tc qdisc\n               Egress rate limiting: add dev eth0 root tbf rate 100mbit latency 0.001ms burst 9015\n---\nNow set rate limit to 100Mbit/sec on egress path of router on two network interfaces by executing below\ncommand. Here its assumed that eth0 belongs to 10.200.1.0/24 subnet and eth1 belongs to 10.200.2.0/24\nsubnet.\n\n\nEgress rate limiting\n# sudo tc qdisc add dev eth0 root handle 1:0 tbf rate 100mbit latency 0.001ms burst 9015\n# sudo tc qdisc add dev eth1 root handle 1:0 tbf rate 100mbit latency 0.001ms burst 9015", "start_char_idx": 19, "end_char_idx": 3905, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ab041f2-ff60-4e1a-9ad9-296bc49a7f9e": {"__data__": {"id_": "0ab041f2-ff60-4e1a-9ad9-296bc49a7f9e", "embedding": null, "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d", "node_type": "4", "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "hash": "1736aa09cbe1c21a216286044664ba63b584ffb9edc003060a77482ed96fc177", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59c4c185-04c0-4758-92ff-55ebd0c7c067", "node_type": "1", "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "hash": "2effa7995c0c37688706fb71c8fde715e82bb3f0cf496e95363988aceade99f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ba38c8a-eae8-4b26-b76c-aa1d46ec4b19", "node_type": "1", "metadata": {}, "hash": "0592627b7bdb3eacb1886cf5299264c2fc8013b3ef99fe4d2bd4cfdce663da7b", "class_name": "RelatedNodeInfo"}}, "text": "Egress rate limiting\n# sudo tc qdisc add dev eth0 root handle 1:0 tbf rate 100mbit latency 0.001ms burst 9015\n# sudo tc qdisc add dev eth1 root handle 1:0 tbf rate 100mbit latency 0.001ms burst 9015\n\n\nFirst ensure that rate limiting is working by executing iperf. You need to get a tcp throughput of around\n100 Mbits/sec. Also check the bandwidth on udp mode to be around 100Mbits/sec (iperf -u -c <dst_ip> -b\n200mbit).\n              ubuntu@ip-10-200-2-48:\n buntulip-10-200-2-48:~$iperf                                                                                                                                 ~c 10200.1.83\n lient connectingto 10.2001.83, TCP port5001\n \"CPwindow                                             size:                         85.0 KByte (default)\n           3]  local 10.200.2.48 port 33652connected with 10.200.1.83 port 5001\n        ID]                  Interval                                                                    Transfer                                                          Bandwidth\n            3]                   0.0-10.0                                       sec                           112MBytes                                                     93.5 Mbits/sec\n buntulip-10-200-2-48:~$\n ubuntudip-10-200-2-48: $iperf                                                                                                                                   ~u~c 10.200.1.83~p                            200mbit\n Sending 1470 byte datagrams(default)\n                                     ClientconnectingLo10.200.1.83,                                                                                                            UDP port 5001\n UDP buffersize:                                                                             208 KByte\n                3]              local                          10.200.248                                                   port 44832connectedwith 10.200.1.83 port 5001\n           ID]                  Interval                                                                     Transfer                                                          Bandwidth\n                3]Sent 172412 datagrams0-10.0sec                                                                242 MBytes                                                          203 Mbits/sec\n                3]\n                3]              Server Report\n                3]\n                3]                   0.0-10.3sec0-10 .3sec                                                      115 MBytesreceivedout-of-order\n                                                                                                                       datagrams                                               94.4 Mbits/sec      15.668Ms90103/172411  (528)\n  ubuntulip-10-200-2-48:~$\nNow, set delay of RTT 10ms and loss rate of 1% in both tx, rx by executing below command on both eth0\nand eth1 network interface of Vyos VM (router). Here eth0 has 10.200.1.0/24 and eth1 have 10.200.2.0/24\nor vice versa. The following commands below simulate packet drop with high propagation delay on the\nlink.\nFor RTT of 10ms, drop of 1%: eth0 parent 1:1 handle 10: netem delay 5ms drop 1%\n# sudo tc qdisc add dev\n# sudo tc qdisc add dev eth1 parent 1:1 handle 10: netem delay 5ms drop 1%\nFor RTT of 200ms, drop of 20%:eth0 parent 1:1 handle 10: netem delay 100ms drop 20%\n# sudo tc qdisc change dev\n# sudo tc qdisc change dev eth1 parent 1:1 handle 10: netem delay 100ms drop 20%", "start_char_idx": 3707, "end_char_idx": 7213, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ba38c8a-eae8-4b26-b76c-aa1d46ec4b19": {"__data__": {"id_": "2ba38c8a-eae8-4b26-b76c-aa1d46ec4b19", "embedding": null, "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d", "node_type": "4", "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "hash": "1736aa09cbe1c21a216286044664ba63b584ffb9edc003060a77482ed96fc177", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ab041f2-ff60-4e1a-9ad9-296bc49a7f9e", "node_type": "1", "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "hash": "2da4386ebec33faf0c363fd70d59b25327324ee46ff0b4b8d8d4fd16c69e4dfc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "302b065c-b853-4b0f-a167-f833149b8c3a", "node_type": "1", "metadata": {}, "hash": "91e4e92f742f4812bd039e9c0e227953b5be53710e5df49564460a8f14ce877e", "class_name": "RelatedNodeInfo"}}, "text": "From ping command: (execute on server to ping to client and also from client to ping to server)\nPing -i 0.2 -c 200 <dest_ip>\n---\nEnsure that you are seeing the delay and drop rate which you have configured at router in the ping output\n  with drop rate within range of +- 20% from the set value and delay value almost slightly greater than the\n  set value. A snapshot is given below as reference. (This is for case-2)\n                 bytesfrom 10.200.1.83:\n                  bytesfrom10.200.183:                                                                                                           icmpseq-194 ttl-63time-201Is\n                                                                                                                                                      cmp                 seq-196                 ttl-63time-201ms\n                  bytesfrom 10.200.1.83:                                                                                                         icmp_seq-197                                     ttl-63time-200ms\n                  bytesfrom 10.200.183:                                                                                                          icmp_seq-199ttl63time-201ms\n    20010.200.1.83 ping statistics\n    rttpacketstransmitted, 126received, 378packet loss,200906/201.086/202648/0.319MS ,time40450ms\n  ubuntulip-10-200-2-48:~$min/ avg/ max/mdev                                                                                                                                                                                                       pipe 2\n  You would also need to confirm the packet drop rate on udp mode on both direction with iperf. (start server\n  iperf on client VM and run it and then start it on server VM and run it) (iperf -u -c <dst_ip> -b 100mbit)\n  with +-20% variation allowed on drop rate. (This is for case-2). You should see an approximate drop of\n  20% with +-20% variation on the value.", "start_char_idx": 7216, "end_char_idx": 9189, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "302b065c-b853-4b0f-a167-f833149b8c3a": {"__data__": {"id_": "302b065c-b853-4b0f-a167-f833149b8c3a", "embedding": null, "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d", "node_type": "4", "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "hash": "1736aa09cbe1c21a216286044664ba63b584ffb9edc003060a77482ed96fc177", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ba38c8a-eae8-4b26-b76c-aa1d46ec4b19", "node_type": "1", "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "hash": "c45d475d283131b6798118f023502319bee20eadbea48d0e5e34e6e4f785c0b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5cd59b6-20a0-4118-8dfd-51886855783f", "node_type": "1", "metadata": {}, "hash": "333b6eb04742e78ca3011a2cd24c0435317b3d087a65f3db9931a82057252722", "class_name": "RelatedNodeInfo"}}, "text": "Server => Client:\n   ubuntulip-10-200-2-48:~$ iperf~u ~C 10.200.1.83                                                                                                                                                                        10Umbit\n   Clientconnectingto 10.200                                                                                                             83,               UDPport5001\n   Sending 1470 bytedatagrams(default)\n   UDP buffer size:                                                                208KByte\n            ID]local10.200.2.48 port 41704connected with 10.2001.83 port 5001Interval            Transfer                                                  Bandvidth\n                                           0-10                           sec                        120MBytes                                                 101 Mbits/sec\n                              Sent 85471 datagrams\n                              ServerReport:0-10                           sec                                          MBytes                                           9 Mbits/ sec                            15.723 ms 19307/85470(238)\n                                           0-10                           sec                             datagrams receivedout-of-order\n   ubuntulip-10-200-2-48:~$\n  Client => server:\n  buntulip-10-200-1-83:~$ iperf                                                                                                                        ~c 10.200.2.48~b 10Ombit\n  lient connectingto 10.200.2.48,UDP port 5001\n  ending 1470 byte datagrams(default)\n  JDP bufferSize:                                                              208 KByte\n         ID]local 10.200.1.83 port 48437connected with10.200.2.48 port 5001Interval         Transfer                                                   Bandwidth\n                              0.0-10                                  Sec                         120 MBytes                                                101Mbits/sec\n                          Sent 85470 datagrams\n                          Server Report:0.0-10.0 sec\n                                       0-10.0sec                                                      datagrans6 MBytesreceived out-of-order77.7 Mbits/sec                                                                 098ms 19414/85469(238)\n  bbuntulip-10-200-1-83:~$\n  TCP iperf:\n  ubuntulip-10-200-2-48:~$iperf                                                                                                                                                         ~C    10.200.1.83\n  Client connectingto85.0 KByte1.83,TCP port 500110.200\n  TCP windov                                                         Size:                                                                                                 (default)\n                   3]                local 10.200.2.48 port                                                                                                                      33690            connected with 10.200.1.83 port 5001\n             ID]                      Interval                                                                                  Transfer                                                    Bandwidth\n                   3]                      0.0-23.9                                                sec                               384KBytes                                                    132 Kbits/sec\n  ubuntudip-10-200-2-48:~S\n---\nYou will also need to create a 1GB file in your sender computer. You can create this from the steps\nmentioned in Lab3 of scp part.\n# dd if=/dev/urandom of=data.bin bs=1M count=1024\n\n\nFor case-3: (record performance of your ftp code by transferring 1 Giga byte file)\n\n\nDelete previous set configurations on qdisc of all VMs (verify it using sudo tc qdisc show). Now set rate\nlimit to 100Mbits/sec on server, client VM. On Router VM set rate limit to 80Mbits/sec with RTT of 200ms.\nThere is no drop configured here in this step. Ensure that ping show a delay of 200ms and rate is limited\nnear to 80Mbits/sec for udp test in iperf. with no packet drop visible in ping.\n\n\nRouter VM command:\nEgress rate-limiting:\n# sudo tc qdisc add dev eth0 root handle 1:0 tbf rate 80mbit latency 0.001ms burst 9015\n# sudo tc qdisc add dev eth1 root handle 1:0 tbf rate 80mbit latency 0.001ms burst 9015", "start_char_idx": 9194, "end_char_idx": 13598, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5cd59b6-20a0-4118-8dfd-51886855783f": {"__data__": {"id_": "c5cd59b6-20a0-4118-8dfd-51886855783f", "embedding": null, "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d", "node_type": "4", "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "hash": "1736aa09cbe1c21a216286044664ba63b584ffb9edc003060a77482ed96fc177", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "302b065c-b853-4b0f-a167-f833149b8c3a", "node_type": "1", "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "hash": "b758a9e676d386f8fdaf8ab38ae6e7877027acc5e4854a55d225ab86d9d9e784", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72525c5a-f087-4e68-bed9-f2710f8940f6", "node_type": "1", "metadata": {}, "hash": "90d727b005e6c741d78281b2554d3617419bc79a227c0562d8a80d5e253ee35d", "class_name": "RelatedNodeInfo"}}, "text": "Delete previous set configurations on qdisc of all VMs (verify it using sudo tc qdisc show). Now set rate\nlimit to 100Mbits/sec on server, client VM. On Router VM set rate limit to 80Mbits/sec with RTT of 200ms.\nThere is no drop configured here in this step. Ensure that ping show a delay of 200ms and rate is limited\nnear to 80Mbits/sec for udp test in iperf. with no packet drop visible in ping.\n\n\nRouter VM command:\nEgress rate-limiting:\n# sudo tc qdisc add dev eth0 root handle 1:0 tbf rate 80mbit latency 0.001ms burst 9015\n# sudo tc qdisc add dev eth1 root handle 1:0 tbf rate 80mbit latency 0.001ms burst 9015\n\n\nEgress delay add in tx, rx:\n# sudo tc qdisc add dev eth0 parent 1:1 handle 10: netem delay 100ms\n# sudo tc qdisc add dev eth1 parent 1:1 handle 10: netem delay 100ms\n# sudo tc qdisc add dev eth0 root\n                                  Server, client VM egress rate limit command:tbf rate 100mbit latency 0.001ms burst 9015\nubuntulip-10-200-2-48:~$ iperf~u~C10.200.1.83                                      ~b10Umbit\nClient connecting to10.200.1.83,UDP port 5001\nSending 1470 bytedatagrams\nUDP buffer size:              208 KByte (default)\n     3]   local     10.200.248 port 46053connected with                             10.200 1.83 port 5001\n   ID]    Interval                 Transfer              Bandvidth\n     3]   Sent 85471sec0-10.0       120 MBytes             101   Mbits/sec\n     3]                     datagrams\n     3]   Server Report:\n     3]     0.0-10.1       sec     93.2 MBytesreceivedout-of-order77.8 Mbits/sec      0.111Ms18984/85469                 (228)\n     3]     0.0-10.1       sec     1 datagrams\nUbuntulip-10-200-2-48:~S\n     ubuntu@ip-10-200-2-48:\nlbuntudip-10-200-2-48:~$ iperf~c 10.200.1.83\n~lient connectingto 10.200.1.83,TCP port 5001\nTCP windowsize:             85.0 KByte (default)\n    3]    local10.200 2.48 port33688Bandwidthconnected with10.200_ 1.83 port 5001\n   ID]    Interval                  Transfer\n    3]      0.0-10         sec      3.38 MBytes            2.60 Mbits/sec\nlbuntulip-10-200-2-48:~S\nCritical Thinking\n\n\nAs you can observe in Case 2 and Case 3, throughputs of iperf UDP are similar (~78Mbps) but TCP differ\nby up to 20x. Think about your configuration and describe in the report exactly what might be happening\nfor Case 2 and Case 3 in terms of network buffering, packet loss, latencies, and window sizes.\n---\nCustom Fast and Reliable Protocol Design\n\n\nYour program will need to reliably transfer the entire file from the sender to the receiver at the highest\nperformance possible through this bad network link for case-1,2,3. Also ensure that your ftp application\ncan work with different mtu of the interface. Test it on mtu of 1500 and then on mtu of 9001. Mtu needs\nto be set to same value for for all the network interfaces of VMs belonging to subnet 10.200.1.0/24,\n10.200.2.0/24. (i.e in server, client, vyos VM). Your client ftp application should save the file in the location\nspecified in the command line. Similarly, server part of ftp application should send the file specified in the\ncommand line.", "start_char_idx": 12982, "end_char_idx": 16067, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72525c5a-f087-4e68-bed9-f2710f8940f6": {"__data__": {"id_": "72525c5a-f087-4e68-bed9-f2710f8940f6", "embedding": null, "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d", "node_type": "4", "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "hash": "1736aa09cbe1c21a216286044664ba63b584ffb9edc003060a77482ed96fc177", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5cd59b6-20a0-4118-8dfd-51886855783f", "node_type": "1", "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}, "hash": "a17be70e88a32729c5bfa2785ecd0114b3db03b067192b93df3a76bcdc918651", "class_name": "RelatedNodeInfo"}}, "text": "Your program will need to reliably transfer the entire file from the sender to the receiver at the highest\nperformance possible through this bad network link for case-1,2,3. Also ensure that your ftp application\ncan work with different mtu of the interface. Test it on mtu of 1500 and then on mtu of 9001. Mtu needs\nto be set to same value for for all the network interfaces of VMs belonging to subnet 10.200.1.0/24,\n10.200.2.0/24. (i.e in server, client, vyos VM). Your client ftp application should save the file in the location\nspecified in the command line. Similarly, server part of ftp application should send the file specified in the\ncommand line.\n\n\nYou must timestamp right when the first bit of the data leaves the sender and the final bit is received by the\nreceiver. The total time for the file to make the one-way trip will be used to compare your program\u2019s\nperformance against other team\u2019s program performance. You also will need to prove the reliability of your\nsystem by running MD5 on both the original file and the received file. You will need to run your ftp\napplication against mtu of 1500 and 9001 on two specified drop rate, delay and rate limit as mentioned\nabove for three cases. (repeat same procedure one with mtu of 1500 and then with 9001 and observe file\ntransfer time)\n\n\nThe execution of the system should be straight forward, and any notion of cheating will result in automatic\ndefeat in the competition and possibly zero on the lab score. The goal of this task is to encourage a healthy\ncompetitive development environment for everyone. You are encouraged to help each other to get the best\nresult. However, at the end, two teams with highest throughput will receive extra credit.\n\n\n     1) The minimum transfer rate for your final FTP is 20 Mbps to compete against the other team.\n     2) Describe, in detail, the concept(s) behind your file transfer utility, results, flow chart, data structure\n           and algorithm used and the analysis in the report document that must be submitted along with\n           source files on the due date specified on blackboard by 11:59pm.\n     3) The scoring will be based on the submitted report slides and demo\n\n\nREFERENCE\n\n\nhttps://computing.llnl.gov/tutorials/pthreads/                      ( multi-threading )\nhttps://www.geeksforgeeks.org/data-structures/                      ( data- structure )\nhttps://www.geeksforgeeks.org/fundamentals-of-algorithms/ ( algorithms )", "start_char_idx": 15412, "end_char_idx": 17857, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "829d8da7-52ac-44be-9f33-d82fe2e6aeeb": {"__data__": {"id_": "829d8da7-52ac-44be-9f33-d82fe2e6aeeb", "embedding": null, "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72d46d27-8773-4064-a178-753ec3e1f5c1", "node_type": "4", "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "hash": "f56565a76cf2644b1c1080ae864594d470db3ef3c6994aed515965cc419025c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf8ab881-8d0c-4d5c-a9f2-02f200fb307a", "node_type": "1", "metadata": {}, "hash": "f34752310dff4dd36be5b500e453efb6245d52d8950b6fb9c4bc987e958f77fb", "class_name": "RelatedNodeInfo"}}, "text": "EE 542 \u2013 Laboratory Assignment #5: Fast, Reliable File Transfer with Custom TCP/IP\n                                                   Instructor: Young H. Cho\n                                      Due date: Sept. 25 (Demo Only \u2013 No Report)\n\n\n1.        Improving TCP Performance Over Lossy Links\n\n\nIn this course, we have examined the performance of TCP and UDP under different network conditions.\nIn laboratory 4 you developed a solution to transfer large data over a high-latency lossy link. In this lab,\nwe want to explore ways to improve TCP performance so that any TCP application can take advantage of\nyour solution. You will present the results of the implementation in your demo.\n\n\n1.1.       Congestion vs. Lossy Links.\n\n\nThe acknowledgment and back-off mechanisms of TCP were developed to avoid congestion collapse [2].\nHowever, in general, mechanisms that are in use today for TCP cannot tell the difference between a packet\nlost due to congestion and a packet lost due to an unreliable link. The exponential back-off algorithm is\nthe appropriate algorithm to deploy when TCP flows are sharing a congested link, however, as you have\nseen in the prior lab, reducing the sending rate and window may not be the proper response under lossy-\nlink conditions.\n\n\n1.2.       Experimental Set-up\n\n\nNodes 1 and 2 need to exchange data using TCP. The nodes are connected by high latency, lossy link\n(such as satellite or long-range wireless uplink).\n\n\n2.        Initial Experiments\n\n\nThe goal for this lab is to recognize that the packet drops in this network are from a lossy link and not\nfrom congestion, and thus improve TCP performance. The test for this lab will be using the standard FTP\nprogram(SCP) to move a 1GB (1024 byte) file from one node to another.\n\n\nUsing the same node configuration and the commands used in Lab 4, set the link between the routers to\n100Mbps with an initial delay of 10ms with no loss. Create a 1GB file and use FTP between nodes to\ntransfer the 1GB file. Record the performance obtained for your report.\n\n\nExplore the problem space by varying the delay from 0 to 200ms (RTT) and 0 to 25% packet loss (TX,\nRX path) (i.e 20ms and 5% step sizes). What throughput can FTP achieve under these conditions?\n\n\nYou may want to present this as a 3D graph, or one graph with multiple lines.\n\n\n3.        Improving TCP Performance\n\n\nNow we need to consider ways to improve the performance of TCP under these conditions. The easiest\nway to modify or implement your TCP stack is to do it on Linux. There already exist several plug-able\nTCP implementations for Linux [3]. To use them, you\u2019ll need to figure out how to build a new kernel on\nyour chosen Linux distribution and include these modules. It should then be fairly simple to modify the\nmodules to improve performance.", "start_char_idx": 8, "end_char_idx": 2801, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf8ab881-8d0c-4d5c-a9f2-02f200fb307a": {"__data__": {"id_": "cf8ab881-8d0c-4d5c-a9f2-02f200fb307a", "embedding": null, "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72d46d27-8773-4064-a178-753ec3e1f5c1", "node_type": "4", "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "hash": "f56565a76cf2644b1c1080ae864594d470db3ef3c6994aed515965cc419025c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "829d8da7-52ac-44be-9f33-d82fe2e6aeeb", "node_type": "1", "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "hash": "534014a92885d09b59b309846260ffb0f7bca6ecbfefac9a618ead4428f7a25f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b322323-3bee-4bd9-961c-4eb6a6032e96", "node_type": "1", "metadata": {}, "hash": "38364ddf2e2c5895bb55c13830b4e046e5f66ab8c550b4d43e27e17ab6e87c8d", "class_name": "RelatedNodeInfo"}}, "text": "Explore the problem space by varying the delay from 0 to 200ms (RTT) and 0 to 25% packet loss (TX,\nRX path) (i.e 20ms and 5% step sizes). What throughput can FTP achieve under these conditions?\n\n\nYou may want to present this as a 3D graph, or one graph with multiple lines.\n\n\n3.        Improving TCP Performance\n\n\nNow we need to consider ways to improve the performance of TCP under these conditions. The easiest\nway to modify or implement your TCP stack is to do it on Linux. There already exist several plug-able\nTCP implementations for Linux [3]. To use them, you\u2019ll need to figure out how to build a new kernel on\nyour chosen Linux distribution and include these modules. It should then be fairly simple to modify the\nmodules to improve performance.\n\n\nWe suggest that you start early given the short deadline as well as the limited resource.\n---\nPROCEDURE TO BUILD UBUNTU KERNEL\nIn AWS, ubuntu uses a custom kernel optimized for AWS to support Xen para-virtualization. Since the\ncompilation of the kernel produces a lot of object files, it is necessary to increase hard drive space to at\nleast 40Giga bytes. We will do this only for one instance and then copy the final resulting binary kernel\nimage to another host and install it there (server, client). You can also build it under\nVirtualBox with correct kernel version for AWS and copy the binaries to AWS instance. For increasing\nHDD space you need to identify your EBS volume at AWS. Click on the root device and then it will show\nyour EBS volume id. (if you are trying it on VirtualBox you have to create a new 16.04 ubuntu instance\nwith 50 GB HDD space)\n         EBS-optimized     False\n        Root device type   ebs\n             Root device   Ideulsdal\n          Block devices      Block Device Idevlsda1\n     Elastic Graphics ID\n Inference accelerator ID                           EBS ID    vol 0e9d013b0728a70b3\n    Capacity Reservation                   Root device type   EBS\ncity Reservation Settings                  Attachment time    2020-09-10T06.12.00.00\n            Outpost Arn                                       0z\n                                         Block device status  attached\n                                       Delete on termination  True\nSelect that EBS ID and then go to actions->modify Volume and increase the size to 30 GB. You need to\ndo these steps when your instance is in a stop state. (only 30GB is free under the free tier summing all\ninstance HDD usage, So you would be charged a minor amount for using extra space). You can also refer\nbelow for detailed steps:\nhttps://medium.com/findworka/how-to-increase-disk-size-for-an-ec2-\ninstance-on-aws-b82181df6215\n   Modify Volume\n           Volume IDvol-0e9d01301728a70b3\n        Volume Type   Ceneral Purpose SSD (gp2)\n                Size                        (Min: GIB Max\" 16384 GIB)\n                lops1003000                 (Baseline of -IOPS per GIB with a\n                                            minimum of 100 IOPSburstable t0\n                                            3000 IOPS)\n                                                                      Cancel   Modify\nAfter above step is done you have to create swap space in you HDD. Follow instructions from below link\nto create a swap size of 1 GB. This is done as as physical memory is only 512 MB for t2.micro instance.\nhttps://linuxize.com/post/create-a-linux-swap-file/\n\n\nNow install git by executing:\n# sudo apt-get install git\n---\nAlso configure git to use low memory by executing:\n# git config --global pack.windowMemory \"25m\"\n# git config --global pack.packSizeLimit \"25m\"\n# git config --global pack.threads \"1\"\n\n\nYou must checkout AWS ubuntu kernel code from repository. Methods of doing this will change over\ntime. For example, type the following command to clone aws-5.4 version of the kernel.\ngit clone git://git.launchpad.net/~canonical-\nkernel/ubuntu/+source/linux-aws/+git/bionic -b aws-5.4\n\n\nAlso edit contents under file: /etc/apt/sources.list by uncommenting all lines starting with\ndeb-src which is needed for below commands to work.\n\n\nThen install all libraries required for building by executing below command under AWS or VirtualBox:\n# sudo apt-get build-dep linux linux-image-$(uname -r)\n# sudo apt-get install libncurses-dev flex bison openssl libssl-dev\ndkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf", "start_char_idx": 2048, "end_char_idx": 6406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b322323-3bee-4bd9-961c-4eb6a6032e96": {"__data__": {"id_": "5b322323-3bee-4bd9-961c-4eb6a6032e96", "embedding": null, "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72d46d27-8773-4064-a178-753ec3e1f5c1", "node_type": "4", "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "hash": "f56565a76cf2644b1c1080ae864594d470db3ef3c6994aed515965cc419025c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf8ab881-8d0c-4d5c-a9f2-02f200fb307a", "node_type": "1", "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "hash": "b90acffaa7632c03e8b8da6f67db7c1466aba436acf5a0ddcba22937197d599e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ccb5328f-ad33-4053-a458-93107e8325f6", "node_type": "1", "metadata": {}, "hash": "644726589e4206950ccce8b0d57b3708c467ce0a621b0c9aca9c606f24be7404", "class_name": "RelatedNodeInfo"}}, "text": "You must checkout AWS ubuntu kernel code from repository. Methods of doing this will change over\ntime. For example, type the following command to clone aws-5.4 version of the kernel.\ngit clone git://git.launchpad.net/~canonical-\nkernel/ubuntu/+source/linux-aws/+git/bionic -b aws-5.4\n\n\nAlso edit contents under file: /etc/apt/sources.list by uncommenting all lines starting with\ndeb-src which is needed for below commands to work.\n\n\nThen install all libraries required for building by executing below command under AWS or VirtualBox:\n# sudo apt-get build-dep linux linux-image-$(uname -r)\n# sudo apt-get install libncurses-dev flex bison openssl libssl-dev\ndkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf\n\n\nNow to compile there are two ways.\n1.  First is the ubuntu advised way which does not support incremental build. (on EC2 micro instance it\n    takes 10 hours to build)\nProcedure is as follows:\nExecute from root of your checkout repository:\nLANG=C fakeroot debian/rules binary\nAfter compilation *.deb binaries would be visible in cd ../ (in parent of your directory)\n\n\nNow install kernel by executing:\nsudo dpkg -i *.deb\n\n\nVerify that you can see your version of vmlinuz and initrd under /boot directory.\n\n\nDetailed instruction is present at: https://wiki.ubuntu.com/Kernel/BuildYourOwnKernel\n\n\n2.  For incremental build follow: (you should concentrate on this method)\nhttps://davejingtian.org/2019/11/07/ubuntu-kernel-build-again/\nhttps://wiki.ubuntu.com/KernelTeam/GitKernelBuild.\nhttps://help.ubuntu.com/community/Kernel/Compile\n\n\n# sudo make oldconfig\n# sudo make -j1 bindeb-pkg                     (-j4 -> if VirtualBox (assumed 4 virtual\ncore present)\n# cd ..\n# sudo dpkg -i *.deb\n\n\nNow you need to change GRUB bootloader configuration to pick your new kernel to boot and start ubuntu.\n\n\nFirst go to file /boot/grub/menu.lst and edit the configuration to look like below. Your two entries would\nbe present at the bottom of the file. In that move the first entry to top as shown below and add default,\nfallback and timeout string (this is not applicable for VirtualBox). For more details refer:\n---\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKerne\nls.html\ndefault-0\nfallback-l\ntimeout-0\ntitle                Ubuntu16.04.6LTS,kernel              4.0-1013-avs\nroot                 (hdo)\nkernel               Iboot/vnlinuz-      4.0-1013avs root-LABEL-cloudimg-rootfsro console-hvc0 console-ttylcon\nsole-ttyso crashkernel- 84M-26: 64M, 26-128M\ninitrd               Ibootlinitrdimg         4.0-1013aws\ntitle                Ubuntu16.04.6 LTS;kernel\nroot                 (hao)\nkernel               Iboot/vmlinuz -        0-1113-aws root-LABEL-cloudimg-rootfsro console-hvco console-ttylcon\nsole-ttysu crashkernel-384M-2G:64M, 26-:126Maws\ninitrd               Ibootlinitrd ing-          0-1113\nNow modify /boot/grub/grub.cfg config. You must edit the entry above the \u201cAdvanced\u201d substring search\nin first occurrence (applicable for both aws and VirtualBox).", "start_char_idx": 5688, "end_char_idx": 8683, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ccb5328f-ad33-4053-a458-93107e8325f6": {"__data__": {"id_": "ccb5328f-ad33-4053-a458-93107e8325f6", "embedding": null, "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72d46d27-8773-4064-a178-753ec3e1f5c1", "node_type": "4", "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "hash": "f56565a76cf2644b1c1080ae864594d470db3ef3c6994aed515965cc419025c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b322323-3bee-4bd9-961c-4eb6a6032e96", "node_type": "1", "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "hash": "57272118078acbaccdf53246230d0aacb34a765478ce24958a1051cdfc18b9be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "843976af-f8e3-48e1-a0a6-c94ceea2e21e", "node_type": "1", "metadata": {}, "hash": "b4a5d63ffd49db35abc81219906c8aa6a6dd312a6128a2572e2e57fcbec52688", "class_name": "RelatedNodeInfo"}}, "text": "You must edit the entry above the \u201cAdvanced\u201d substring search\nin first occurrence (applicable for both aws and VirtualBox).\n    set linux_gfxmode-keep\nelse\n  set linux_gfx_mode-text\nexportlinux         mode\nnenuentry    Ubuntu      classubuntu       ~classgnu-linux         classgnu       class05 Smenuentry_id_option          gnulinu\n  simple-b7109b0g-d3aa-418a982a-04e9f04ddd76'recordfail\n         load video\n         gfzmodeSlinux_gfxmode\n         insmod gzioxSgrub_platform\n         if                           ren       chenl                 Lnsiad Tzopios\n         insmod part_nsdos\n         insmodexl2\n         if    xSfeature_platform_search_hint                   chen\n            search    ~no-floppy~-fs-uuid         set-root     b710gb0g-d3aa-418a-982a-04e9f04ddd76\n         elsesearch   ~nofloppy~-fs-uuid          set-root b7l09b0g-d3aa-418a-982a-04e9f04ddd76\n         linux     Iboot/vlinuz=          0-1013-awsroot-UUID-b7logbug-d3aa-418a-982a-04e9f04ddd76I0                   console\nctylconsolesttysontme            timeout 4294967295ntecore10timeout -4294967295\n         initrd    Ibootlinitrding           0-1013avs\nsubmenu   Advancedoptionsfor Ubuntu           Smenuentry_id_option        gnulinux-advanced-b7109b09d3aa-418a-982a-04\n29f04ddd76'\n         menuentry     Ubuntu,with Linux            0-1113aws        classubuntu       ~class gnu-linux       classgnu       cla\n       Smenuentry_id_option       gnulinux -      0-1113aws-advanced-b7109b09d3aa-418a-982a-04e9f04ddd76\n                   recordfail\n                   loadvideo\nChange vmlinuz and initrd.img to your kernel version and appropriate path under /boot directory. Rest\nall string remains same. Mine was 4.4.0-1-13 here. (Any failure at these steps would result in ec2 not\nbootable, only way to recover then would be to delete this instance and repeat on new one).\nNow save the change to this file and execute sudo reboot. After system comes up verify that your kernel\nis loaded by executing uname -a. It should show your kernel version and build time at which kernel is\ncreated.\nOne thing to note here is that every time you execute dpkg -i command, these files get overwritten.\nSo, you would have to repeat all these steps again.\nThe files interested in this lab are located under net/ipv4/tcp*\nFor your coding/testing you can try it first on VirtualBox and then run it on AWS for actual measurements.\nThis way you would be able to avoid additional charges of AWS. All the above procedures should work\n---\non both AWS and VirtualBox. Only thing to note is to check out the correct version of kernel from git as\nper your base kernel (closer version) currently running.\n\n\nModifying TCP Module\n\n\nStart by reading the paper \u201cRemoving Exponential Back-off from TCP\u201d [1]. Start with the standard TCP\nstack for Linux and remove the exponential back-off algorithm as described in the paper. Make sure to\nunderstand the implicit packet conservation principal.\n\n\nFor the full credit, you will need to achieve at least 10 Mbps performance of FTP over TCP/IP over a\nnetwork that is configured to be 100 Mbps with 200ms RTT latency (100ms delay each way) and 20%\npacket loss (bi-directional).\nEgress rate limiting: (only on router)root handle 1:0 tbf rate 100mbit latency 0.001ms burst\n# sudo tc qdisc add dev eth0\n901555\n# sudo tc qdisc add dev eth1 root handle 1:0 tbf rate 100mbit latency 0.001ms burst\n901555\n\n\nFor RTT of 200ms, drop of 20%: (only on router)\n# sudo tc qdisc add dev eth0 parent 1:1 handle 10: netem delay 100ms drop 20%\n# sudo tc qdisc add dev eth1 parent 1:1 handle 10: netem delay 100ms drop 20%\n\n\n4.        Evaluation", "start_char_idx": 8560, "end_char_idx": 12182, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "843976af-f8e3-48e1-a0a6-c94ceea2e21e": {"__data__": {"id_": "843976af-f8e3-48e1-a0a6-c94ceea2e21e", "embedding": null, "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72d46d27-8773-4064-a178-753ec3e1f5c1", "node_type": "4", "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "hash": "f56565a76cf2644b1c1080ae864594d470db3ef3c6994aed515965cc419025c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ccb5328f-ad33-4053-a458-93107e8325f6", "node_type": "1", "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}, "hash": "f0c6a566525a69727d75310fa6d0d615507041f5e999945a66521425e81d54d5", "class_name": "RelatedNodeInfo"}}, "text": "For RTT of 200ms, drop of 20%: (only on router)\n# sudo tc qdisc add dev eth0 parent 1:1 handle 10: netem delay 100ms drop 20%\n# sudo tc qdisc add dev eth1 parent 1:1 handle 10: netem delay 100ms drop 20%\n\n\n4.        Evaluation\n\n\nPerform the step 2 experiment of this Lab using your modified TCP stack in place of the default TCP. If\nyou do more than one modification, make sure to test and evaluate each modification separately (and\ntogether) to see which change improves performance under what conditions.\n\n\n5.        References\n\n\n[1] Amit Mondal and Aleksandar Kuzmanovic. Removing exponential back-off from tcp. SIGCOMM\n     Comput. Commun. Rev. , 38:17\u201328, September 2008.\n\n\n[2] John Nagle. Congestion control in ip/tcp internetworks. SIGCOMM Comput. Commun. Rev. , 14:11\u2013\n     17, October 1984.\n\n\n[3] Ren\u00b4e Pfeiffer. Tcp and linux\u2019 pluggable congestion control algorithms.\n\n\n[4] http://vger.kernel.org/~davem/skb.html\n\n\n[5] http://vger.kernel.org/~davem/skb_data.html\n\n\n[6] http://amsekharkernel.blogspot.com/2014/08/what-is-skb-in-linux-kernel-what-are.html\n\n\n[7] https://git-scm.com/docs/gittutorial\n\n\n[8] https://makefiletutorial.com/", "start_char_idx": 11956, "end_char_idx": 13098, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e273cd46-c8f1-4c1a-9d23-d1f2f5e615be": {"__data__": {"id_": "e273cd46-c8f1-4c1a-9d23-d1f2f5e615be", "embedding": null, "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "505d9135-88b7-4d6e-995d-3f64b53d345c", "node_type": "4", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "32ea14b1d95b12fd646194b1cd1f572164f8097ad8d289cf6154fa114f474272", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ce761b5-7931-4d6a-9fd0-8936a07ed482", "node_type": "1", "metadata": {}, "hash": "df4480ba30d872711fb936c903aafb756bef577891099c6dfe2250c8748f36a8", "class_name": "RelatedNodeInfo"}}, "text": "EE542 \u2013 Laboratory Assignment #6: Hadoop Tutorial\n                                                   Instructor: Young H. Cho\n\n\nFor this lab we would be creating 1 namenode and 3 datanode (so 4 instances in total). (google for the\nnaming convention of Hadoop). Go through below links for detailed understanding of Hadoop,\ncontainers and map-reduce architecture. (you will also need to implement same program mentioned in\ndocument below on MPI also). So, start earlier on doing lab.\n\n\nhttps://en.wikipedia.org/wiki/MapReduce\nhttps://hadoop.apache.org/docs/r2.10.1/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html\nhttps://hadoop.apache.org/docs/r2.10.1/hadoop-yarn/hadoop-yarn-site/YARN.html\nhttps://hadoop.apache.org/docs/r2.10.1/hadoop-mapreduce-client/hadoop-mapreduce-client-\ncore/MapReduceTutorial.html\n\n\nSelect a compatible Ubuntu Server (i.e. Ubuntu Server 16.04 LTE HVM) image on x86 and configure\nthe instance with only one interface it being elastic ip interface. Instance type should be of t2.medium or\nany instance with two vcpus and at least 4 GB of ram and 12 GB of hard drive space (you may try out\nthis in student account to reduce cost). In your selected VPC you have to enable DNS Hostname from\nthe VPC tab. For the only subnet attached to the VPC you have to enable \u201cauto-assign ipv4\u201d under\n\u201cModify auto assign public ipv4 address\u201d. Moreover, you have to \u201cauto assign public ip\u201d set to \u201cuse\nsubnet setting (enable). Assign network interface IP statically from within the AWS. These options\nwould automatically assign you a public ip since we have only one network interface per instance.\n(elastic ip not required)\nStep 3: Configure Instance Details\n          No default subnet found\n           Please choose another subnet in your default VPC,or choose another VPC .\nConfigure the instance to suit your requirements. You canaunch multiple instances from the same AMI, request Spot instances to take advantage\n                Number of instances                                             Launch into Auto Scaling Group\n                  Purchasing option                 Request Spot instances\n                             Network             vpc-00548f13464044749lab8_vpc_hadoop                      Create new VPC\n                              Subnet             subnet-098a5f12e954a5390     hadoop   US-west-Za           Create new subnet\n                                                247 IP Addresses available\n                Auto-assign Public IP            Use subnet setting (Enable)\n---\nSubnets      Modily auto             seitings\nModify auto-assign IP settings\nenab -Ine auto-asson         address setung      automatically requestpublic IPv4 or IPvG adcress for an Instance launched           In3 sucnel You can override Ine auto-ass gn           seitings Icr an Instance at Iaunch Iime\n                                 subnet       subne: 0780b-cc/6581038\n                        Auto-JssidnIPv4             Enable auto-assign public IPv4 acdress\n                      Auto-assign Co-IP             Enable aulo-assign cuslonier-Owned IPv4 address\n  Required\n      dala ode-|                                           12 medum                                                      22 cmec\" [                                               4222 24 |5'\n      dalnndo-?                    1C-677221066-4Tcc?2     12 medum                                   funning            20 chaces                                               4184 35 172\n                                                                                                      Tunning                                                                     3247 246 ?00\n                                                           72 Medun                                   Munning                                           035-1601-6048               IGQ 60 40\ncreate a security group with rules to allow all kind of traffic within the private subnet and to your global\nip only. (my elastic ip subnet was 10.0.0.0/24 and global ip 104.32.154.67)\nDescription         Inbound           Qulbound          Tags\n   Edit\n   Type                                                                  Protocol                                                          Pont Range                                                            source\n   AIl traffc                                                                                                                                                                                                    10 0 0 0/24\n   AIl tramtc                                                                                                                                                                                                    104 32.154,67/32\n   SSH                                                                   TCP                                                                                                                                     0.0.0.0/0\nEnsure that all the instances you have created uses same private key for ssh. We will be using only\nubuntu user account for logging in through ssh.", "start_char_idx": 21, "end_char_idx": 5155, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ce761b5-7931-4d6a-9fd0-8936a07ed482": {"__data__": {"id_": "4ce761b5-7931-4d6a-9fd0-8936a07ed482", "embedding": null, "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "505d9135-88b7-4d6e-995d-3f64b53d345c", "node_type": "4", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "32ea14b1d95b12fd646194b1cd1f572164f8097ad8d289cf6154fa114f474272", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e273cd46-c8f1-4c1a-9d23-d1f2f5e615be", "node_type": "1", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "1cc9eb3f7797f1a510da344609269b9d817b8b18bad55285a9a1f14795ecde9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4179b97-64ec-40c1-868a-94980bd3729d", "node_type": "1", "metadata": {}, "hash": "2a1fb29754734960fe96d37b67e777f40aa6278be64bfa95ebb434355c10ca3d", "class_name": "RelatedNodeInfo"}}, "text": "After logging in, execute below commands on all of the instances:\n # sudo cp /etc/ssh/ssh_host_rsa_key ~/.ssh/id_rsa\n # sudo cp /etc/ssh/ssh_host_rsa_key.pub ~/.ssh/id_rsa.pub (change to ubuntu@ in last )\n # sudo cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys                                                                              (change to ubuntu@ in last)\n # sudo chmod 777 ~/.ssh/id_rsa\n # sudo chmod 777 ~/.ssh/id_rsa.pub\n ssh-rsa AAAAB3NzaClyc2EAAAADAQABAAABAQCSEyt+GlHYHkcwRgtogiodEH)\nEOVB]PNGGSSujFQCUIHorSuVf6OHgZ+MhgAWZI+yom2kAkPo9GBGxlozNRmjcj:\nTo358Q2OGYTGGlWymn68++54KxNT? Je8hLvhql                                                                                                          ubunti                 @ip-10-0-0-247\nEnsure that in all remote hosts, the authorised_key file is modified to include public key of the\nnamenode (namenode -> where you will be running Hadoop commands) and it contains ubuntu@ for\nthe host being added to it. My master node ip here was of 10.0.0.247. (these steps are same as the steps\nfor establishing passwordless ssh connectivity as in previous labs).\n---\n        AAAAB3NzaClyc2EAAAADAQABAAABACCJNSdJ/ pVLo4+PZLZcUVOnOKCG9aKqAOwgB4F]+JytaLcSziDnlltG3pyzYlRMYpeaUBMnOn /YLQVOBNgZVXZuv2ULvh\nxBwrmcUtow3GWalfauwGcUnglpx/ dbygqsfBjzsziuitoNXgehVDAwlFO7xmQaTPofeYmEptKTmROQDOnjlZLXkSRYZbdhopljqASnwSwu3Dzo6oSdUxbM8B vestvyo=AAAABZNzaClycZEAAAADAQABAAABACCbminr4UndBlwtqk5G53rz yAhfaXD8zqactIHMALZ+zOkBlI / 3rknSzWbqm7u0j 9Ego3EDaAhOSIhYxOiuoeKsRLSf\n sh-rsa\n    0-0-115\nMGat                                                                                                                     uountueipe\n 10-0-0-247\nNow install java on all the instances by:\n# sudo apt-get update\n# sudo apt install default-jre\n# sudo apt-get install default-jdk\n# cd ~/\n\n\nNow download hadoop by executing:\n# wget https://mirrors.koehn.com/apache/hadoop/common/hadoop-2.10.1/hadoop-2.10.1.tar.gz\n# sudo tar xzf hadoop-2.10.1.tar.gz\n# sudo mv hadoop-2.10.1 /usr/local/hadoop\n# sudo chown -R ubuntu /usr/local/hadoop/\n\n\nEdit ~/.profile file with below contents added as shown in figure:\nexport JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64\nexport HADOOP_HOME=/usr/local/hadoop\nPATH=\"$HOME/bin:$HOME/.local/bin:$JAVA_HOME/bin:$HADOOP_HOME/bin:$PATH\"\n    if runningbash\nif[       ~n   \"SBASHVERSION               J;    then\n           include         bashreif                erisls\n       if        ~f     SHOME       bashrc        1;    then\n                    SHOME       bashrc\n       fi\n fi\nexportHADOOPHOME-/usr/local/hadoopJAVA HOME /usr/lib/ jvm/ java-1.8.0-openjdk-amd64\nexportSHOME/bin: SHOME\n PATH =                                  local/bin:SJAVAHOME /bin: SHADOOP   HOME/bin:SPATH\nThen execute:\n# source ~/.profile\nThis results in environment variables of your current ssh session to be updated. When you login later\nover ssh, ubuntu automatically source this file.", "start_char_idx": 5158, "end_char_idx": 8069, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4179b97-64ec-40c1-868a-94980bd3729d": {"__data__": {"id_": "c4179b97-64ec-40c1-868a-94980bd3729d", "embedding": null, "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "505d9135-88b7-4d6e-995d-3f64b53d345c", "node_type": "4", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "32ea14b1d95b12fd646194b1cd1f572164f8097ad8d289cf6154fa114f474272", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ce761b5-7931-4d6a-9fd0-8936a07ed482", "node_type": "1", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "045e48996a9070b8f5d959d2bb1fac3136af2cb5469c26ae303b7690be76981c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7eff0ef2-5e07-4bce-9ca4-36a95ec6a8b1", "node_type": "1", "metadata": {}, "hash": "32d4546561f9609da9fa01d8bc5786612f2e5697551ff70d5987e3ad3249f965", "class_name": "RelatedNodeInfo"}}, "text": "Edit following files under \u201c/usr/local/hadoop/etc/hadoop/\u201d for all the instances\n(namenode + datanodes).\n---\n1. hadoop-env.sh\n      replace \"export JAVA_HOME=\" with \"export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-\namd64\"\n       TAE                         implenentation                                  ED\nexport                JAVA            HOME- /usr/libl jvn/ java                                                              0-openjdk-amd64\n      The                          iplenentation                                                      LD providerequired                                      LD  Fun\n      proEocol\n              Lhat    bind            ED privilegedrequiredDorEs                                            LfprivilegedconfiquredSASL   eucheneicationfDI0f\n                      Lrinsfer                     procoeol                                       non                                             DOrES\n                                                                JStC\nexport                HADOOP  CONE                           DIR=S [HADOOP   CONE                                     DIR               /etc/hadoop\n2. core-site.xml.\nEdit it with the below content ( remove: <configuration> </configuration> and update with below\ncontents)\n <configuration>\n     <property>\n          <name>fs.default.name</name>\n          <value>hdfs://<namenode_private_IP>:9000</value>\n     </property>\n     <property>\n          <name>hadoop.tmp.dir</name>\n          <value>/home/ubuntu/hadooptmp</value>\n          <description>A base for other temporary directories.</description>\n     </property>\n</configuration>\n        version=           encoding-\"UTF-8\"'texe/xs]\n        stylesheet                           hrefs\"configuration\n   Licenjed            LAe Apache License                                 \"Licenie\n  You Bay not           chis FileZopy cf the License                      Lhe\n                              org/licenses LICEMSE\n  Un[eaa reqtired Byeapplicable                  Of adrodd             MEiling,\n  distributed underEhe Licenae                                                            inplied\n                                    Bbegifie                                              afd\n                                                                                File\n            ]                                                 Lisfile\n       KconfiguraLion?\n           Knane fs-default_name< /nane>\n           Kvaluecndls://10 _           247900o</value>\n     Kiproperty>\n           Knalneshadoopubuntu/hadooptmp< /value>dir< /name>\n           Kdescription A baseforother temporary directories < {description>\n      Klproperty>\n~confiquration>\n---\nChange the namenode_private_IP to eth0 interface ip of the namemode for all of the instances\n(namenode + datanodes). (this ip should not change in-between instance reboots, so better to assign\nstatic in aws network interface creation phase)\nAlso create \"/home/ubuntu/hadooptmp\" (as it's specified in the above configuration for temp\ndirectory for hdfs)\n\n\ncore-site.xml contains the configuration settings for Hadoop Core (eg I/O) that are common to\nHDFS and MapReduce. It also informs Hadoop daemon where NameNode (the master) runs in the\ncluster. So each node(instance) must have this file completed.\n\n\n3. hdfs-site.xml\nEdit with below content: ( remove: <configuration> </configuration> and update with below contents)\n\n\n<configuration>\n <property>\n   <name>dfs.replication</name>\n   <value>3</value>\n </property>\n <property>\n   <name>dfs.namenode.name.dir</name>\n   <value>/usr/local/hadoop/hdfs/namenode</value>\n </property>\n <property>\n   <name>dfs.namenode.data.dir</name>\n   <value>/usr/local/hadoop/hdfs/datanode</value>\n </property>\n</configuration>\n <configuration><property>\n        <name>dfs.replication< /name>\n         <value,3        Ivalue>\n     <lproperty>\n     <property><nane dfs   namenode         name     dir</ name>\n         <value /usr/locallhadoop/hdfs/namenode</value>\n     <lproperty>\n     <property><nane dfs   namenode         data     dir</ name>\n         <value /usr/locallhadoop/hdfs/datanode</value>\n       Iproperty>\n     configuration>\n---\n4. mapred-site.xml.template\n\n\nFirst rename mapred-site.xml.template to mapred-site.xml.\nmv /usr/local/hadoop/etc/hadoop/mapred-site.xml.template /usr/local/hadoop/etc/hadoop/mapred-\nsite.xml\nThen put below contents in it.", "start_char_idx": 8072, "end_char_idx": 12480, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7eff0ef2-5e07-4bce-9ca4-36a95ec6a8b1": {"__data__": {"id_": "7eff0ef2-5e07-4bce-9ca4-36a95ec6a8b1", "embedding": null, "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "505d9135-88b7-4d6e-995d-3f64b53d345c", "node_type": "4", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "32ea14b1d95b12fd646194b1cd1f572164f8097ad8d289cf6154fa114f474272", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4179b97-64ec-40c1-868a-94980bd3729d", "node_type": "1", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "d3a1532ba2ddc6d26f47fe7ce1b4e658d7c56fbb475e814a82a3d3ae370bda1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1381a3bb-e2ab-4867-ab11-6c74db28c30c", "node_type": "1", "metadata": {}, "hash": "43b94c1c48bd27718083fb4a8b941bd09d735ba8add78ae066b29f9d4c2dd214", "class_name": "RelatedNodeInfo"}}, "text": "First rename mapred-site.xml.template to mapred-site.xml.\nmv /usr/local/hadoop/etc/hadoop/mapred-site.xml.template /usr/local/hadoop/etc/hadoop/mapred-\nsite.xml\nThen put below contents in it.\n\n\n<configuration>\n   <property>\n      <name>mapreduce.framework.name</name>\n      <value>yarn</value>\n   </property>\n</configuration>\n         Pul     Siee     specific         propere          oterrides         in chis        file\n<configuration><property>\n               Kname>mapreduce               frameworkname               Iname>\n               <value>yarn</value>\n         Iproperty>\nklconfiguration>\n5. yarn-site.xml\nEdit with below content: ( remove: <configuration> </configuration> and update with below contents)\n\n\n<configuration>\n  <property>\n    <name>yarn.nodemanager.aux-services</name>\n    <value>mapreduce_shuffle</value>\n  </property>\n  <property>\n    <name>yarn.nodemanager.auxservices.mapreduce.shuffle.class</name>\n    <value>org.apache.hadoop.mapred.ShuffleHandler</value>\n  </property>\n  <property>\n    <name>yarn.resourcemanager.hostname</name>\n    <value><namenode_private_IP></value>\n    <description>The hostname of the Resource Manager.</description>\n  </property>\n</configuration>\n---\nGive namenode eth0 interface ip in <namenode_private_IP> for all of the instances (namenode +\ndatanodes).\n\n\nReplicate the above configurations in 3 datanode instances also.\n\n\nNow log into each of the datanode instances. Create:\n1. empty master files using \"touch /usr/local/hadoop/etc/hadoop/masters\"\n2. vi /usr/local/hadoop/etc/hadoop/slaves\n    Specify eth0 ip of the current datanode instance (where you are executing the vi command) in\n\"/usr/local/hadoop/etc/hadoop/slaves\". Remove all other contents. (only one ip should be present)ubuntu@ip-10-0-0-125: /usr/local/hadoop/logs\n       0.0.125\nMy one of the datanode\u2019s IP was 10.0.0.125.\n\n\nNow in the namenode instance. Edit\n1. vi /usr/local/hadoop/etc/hadoop/masters\n   Give eth0 interface ip of the namenode in the file.\n     ubuntu@ip-10-0-0-247: /usr/local/hadoopletc/hadoop\n     0.0.247\nMy master node ip was 10.0.0.247.\n\n\n2. vi /usr/local/hadoop/etc/hadoop/slaves\n   Give eth0 IP of all of the 3 data-nodes in this file. Remove all other contents. (add line by line each\nIP)    ubuntu@ip-10-0-0-247: /usr/local/hadoop/etc/hadoop\n           0.125\n           0.115\n10     0 .0.68\nNow perform from master-node below commands:\n# ssh -v -x ubuntu@<IP>\nto all the 3 data-nodes from namenode. If it asks for a message confirmation type yes. This should\nestablish a passwordless ssh connectivity to remote host. Type exit to bring back control to the source\nhost. (Only proceed further if you are able to do passwordless ssh access from namenode to all of the\ndatanodes).\n---\nExecute below command only on namenode to create hdfs file system (directory is specified in hdf-\nsite.xml):\n# /usr/local/hadoop/bin/hdfs namenode -format\n\n\nNow we will start hdfs and yarn daemons of Hadoop. Hdfs is responsible for maintaining hdfs\ndistributed file system and yarn for containers and resource management.\n# /usr/local/hadoop/sbin/start-dfs.sh\n#/usr/local/hadoop/sbin/start-yarn.sh\nIf it asks for yes/no message, type yes and press enter (it\u2019s self-logging in namenode instance using\nlocalhost).\n\n\nFor debugging purposes, logs are located under \"/usr/local/hadoop/logs\" in datanodes and namenodes.If\nyou face any issues first check the logs under these folder and make an inference what could be the issue\nby googling.", "start_char_idx": 12289, "end_char_idx": 15759, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1381a3bb-e2ab-4867-ab11-6c74db28c30c": {"__data__": {"id_": "1381a3bb-e2ab-4867-ab11-6c74db28c30c", "embedding": null, "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "505d9135-88b7-4d6e-995d-3f64b53d345c", "node_type": "4", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "32ea14b1d95b12fd646194b1cd1f572164f8097ad8d289cf6154fa114f474272", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7eff0ef2-5e07-4bce-9ca4-36a95ec6a8b1", "node_type": "1", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "fd2e5eaebaf28373fdaaaba588551b7deed811944d22bfa8d3871c147220d364", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db3574aa-16a8-413f-a7c2-a93c009db242", "node_type": "1", "metadata": {}, "hash": "89ce5ad3e8b3eb3342b979bf749a2c33fd3d80aea30fe91317bddf9b8ca6ccd2", "class_name": "RelatedNodeInfo"}}, "text": "Now we will start hdfs and yarn daemons of Hadoop. Hdfs is responsible for maintaining hdfs\ndistributed file system and yarn for containers and resource management.\n# /usr/local/hadoop/sbin/start-dfs.sh\n#/usr/local/hadoop/sbin/start-yarn.sh\nIf it asks for yes/no message, type yes and press enter (it\u2019s self-logging in namenode instance using\nlocalhost).\n\n\nFor debugging purposes, logs are located under \"/usr/local/hadoop/logs\" in datanodes and namenodes.If\nyou face any issues first check the logs under these folder and make an inference what could be the issue\nby googling.\n\n\nExecute below command to verify that datanode and namenode is up and configured:\n# hdfs dfsadmin -report\nThis should show your namenode and 3 datanodes.\n ubuntulip-10-0-0-247:/usr/local/hadoop/etc/hadoops hdfs dfsadmin~report\n ConfiguredCapacity                                           37267918848(34.71GB)\n PresentCapacity:28386066432(26\n                               DESRemaining:24840458240(23.13GB)GB)\n DESUsed:\n         DES Used?3545608192(3.30GB)12.498\n Under replicatedblocks\nMissingwith corrupt replicas:\n Blocks\n                        blocks\nMissingblocks(wichreplicationfactor 1) :\n Pending deletionblocks\n Livedatanodes(3)\nNametname0.0.115:50010(ip-10-0-0-115uS-west-2.computeinternal)ip-10-0-0-115    -west-2.computeinternal\n DecommissionStatus                                              Normal\n DFS Used:118177382412422639616(11.57GB)\n Configured Capacity                                                            GB)\n Non         DES Used: 2943717376(2.74GB)\n DFS Remaining                               8280371200(7.71 GB)\n DFS Used?:9.518\n DFS Remaining?                                         668\n Configured Cache Capacity:                                                           (0 B)\n Cache Used:                               (0 B)(0 B)\n CacheRemaining:\n Cache Used?                           100\n Cache Remaining?                                     0.008\n Xceivers\n Lastcontact                             Mon Oct 12 03.21.13UTC 2020\n Last Block Report                                      Sun Oct 11 21.54.48 UTC 2020\n Name                            0.125:50010(ip-10-0-0-125uS-vest-2conputeinternal)\n Hostname                     ip-10-0-0-125.u5-west 2compute.internal\nDecomission Status                                              Normal\n Configured Capacity\n                    DESUsed:118178201612422639616(11.57 GB)(1.10GB)\n NonDFS Used:2944299008(2.74GB)\n DESRemaining                                8279781376(7.71GB)\n DES Used?\n          Configured9.51866 . 658\n DFS Remnaining?\n CacheUsedCache Capacity:                                                             (0 B)\n CacheRemaining:\n Cache\n                  Used?                100.008\n CacheRemaining:                                      0.008\n---\nNow from the namenode, execute below sample program:\n# hadoop                       jar            /usr/local/hadoop/share/hadoop/mapreduce/hadoop-\nmapreduce-examples-2.10.1.jar                                                                                    pi 10                  1000\n\n\nIf above program ran successfully you should be seeing an output like below:Bytes Read-1180\n                                   File                  output                        Format                        Counters\n                                                                      Bytes                     Written-97\n  Job Finished in                                                     27.421                        seconds\n  Estimated                                 value of Pi is 3.140800ooooooooooooo0\nYou can access hadoop Master dashboard from:\nhttp://<namenodeFs.I6O.C0.48.9098/cluste /apps{FINISHEDpublic ip>:8088/clusterinstance\n                                                                                                                                                                                        FINISHED Applications\n       Cluster                     Cluster Metrics\n                                              Apps Submnilted                       Ao Penamna                               Running                        App; Compleled                            Ccntaineas Running                                 Used Reso\n       Lodu;                                                                                                                                                                                                                             ~Mcmon  LVCOrcs D3\n       Node Labels                 Cluster Nodes Metrics\n       Acplicallcns                              Aclive Noces                                      Deconmasloninn Node;                                                                                                              Los Nodis\n            LEW_SAVING\n            surHMTED\n            ACCEPIEO               Scheduler Molrics\n            RUNIEEC                  Capaclty ScheduleScheauler Type                            default-unitaMI typerCOUNITABLE?", "start_char_idx": 15182, "end_char_idx": 20240, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db3574aa-16a8-413f-a7c2-a93c009db242": {"__data__": {"id_": "db3574aa-16a8-413f-a7c2-a93c009db242", "embedding": null, "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "505d9135-88b7-4d6e-995d-3f64b53d345c", "node_type": "4", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "32ea14b1d95b12fd646194b1cd1f572164f8097ad8d289cf6154fa114f474272", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1381a3bb-e2ab-4867-ab11-6c74db28c30c", "node_type": "1", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "7745cb7384b21ac7691e51dffd2b7c3274f3d3e1771dbe072b2b1e421ce061d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97a00d86-a29f-4a38-94ba-9c3638610475", "node_type": "1", "metadata": {}, "hash": "9285e06bc077e3a65e28a4b21121c42998d016ff1dc1c96b25c3347537121a1b", "class_name": "RelatedNodeInfo"}}, "text": "Sched uling Resouice TypeCOUNTABLEZ                                                                      cmemon;\n            KILLED                   shor\n       Scheculer                                                                                                                                                                                                                                            Runnino\n      Tools                                                                                             Namc                         Aopicaion                  AppllcabonPnomtyGrantme                                     State        Finaistats        Conta nem\n                                     apcaion 1802451219382 OroZUbuniu                                                              VAPREDUCE          oclauil                  Sun Oci      Sun Oci         Sun Oci       FINISHEDSUCCeEDEd\n                                                                                                                                                                                            17.00-0\n                                                                                                                                                                               17 -CD-DE    ~Oto0 Z02d      17.07.-27\n                                                                                                                                                                              ~o7o0                          -o700\n                                                                                                                                                                              2020                          2020\n                                     apEliclion 1602451219382_DoIGUbl                   streamiob231696+470512303092-/26           NUAPREDUCEdelaull                           Sun Oci      Sun OC          Sun Oci       FINISHEDSUCCEEDED\n                                                                                                                                                                                            16.35-55\n                                                                                                                                                                               18-2555      ~0700 2020       18-28-15\n                                                                                                                                                                               -ot0m                        Lotoo\ndatanode instance access from:\nhttp://<datanode11222.27.154 8042/odeinstance                                                     public ip>:8042/cluster\n                hzopp\n        Resourcerianader                                                                                                                                                                                                                     NodcManagcrInionma\n        Nodelanager                       Total Vmem allccate 0          Contalnens     16.80 GB\n        Node                                        Vmem enjorcement enabled\n        [ntormation                        TotalPmem allccated Ior Container\n        L4 oF                                       Pmem enlcrcement enabled\n        Eppllcatlons                    TotalCoiesallccaleu              Conlaineng\n        Ust of                                                 HodeHeamthustts\n        Contalneis                                                                      Mon Ocl 12 04.38.19 UTC 2020\n        Tools                                                  NodeHealthReport\n                                                       NodeManagesmanedon                    Oct 11 21.20.18 UTC 2020\n                                                          Nodenanager Vension:                 Iron 182746709356/+330254285576/c2c5624786816                    celos source checksun ?049946lfe56799794077621/bedbe1a\n                                                                 Hadood Vetsion;        210.                                                                                                                                               2020-09-4M372\nYou can view hadoop filesystem with webgui by follwoing below link:\n    http://<namenode public                                                                   ip>:50070\n---\n              Hadoop       Overvlew    Datanodes    Datanode Vclume Fallures    Snapshot    Startup Progress  Utllltles\n              Browse Directory\n                juserlubuntulgutenberg-cutputz\n              Show            entries                                                                                                  Search;\n                        Pemmission          Owner          Group                       Last Modified          Replication  Block Size        Name\n                        CACC                ubuntu         supergroup                  Oct 11 17.07                        128 MB             SUCCESS\n                        ~MN--               ubuntu         supergroup     42.48 MB            17.07                        128 MB            part-OOOCO\n              Showingto ? cf 2 entries                                                                                                        Previous   Nexl\nYou can explore more programs under \"hadoop jar /usr/local/hadoop/share/hadoop/mapreduce/hadoop-\nmapreduce-examples-2.10.1.jar\"\n       \uf0f0      If you get error while clicking some text under page, replace the private ip in http link with\n              corresponding instance public ip.\n\n\nDebugging Tips:\nuse command \"jps\" to view java running processes on each instances.\n\"netstat -a -p | grep -i port\" and then \"kill pid\". For releasing the port. (To troubleshoot port error\nobtained from logs inside for hdfs and yarn daemons)\nhadoop job -kill <job_id>                       --> to kill job (from namenode)\n\n\nNow we will be discussing a technique in which you can use python to write your map and reduce\nfunctions. (normally in hadoop it's in java as you have seen in above examples). We will be using\nstreaming api support of Hadoop to achieve this. (even c/c++ program can also be done in this way)\n\n\nInstall python on all datanodes and namenode.\n# sudo apt-get install python", "start_char_idx": 20258, "end_char_idx": 26660, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "97a00d86-a29f-4a38-94ba-9c3638610475": {"__data__": {"id_": "97a00d86-a29f-4a38-94ba-9c3638610475", "embedding": null, "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "505d9135-88b7-4d6e-995d-3f64b53d345c", "node_type": "4", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "32ea14b1d95b12fd646194b1cd1f572164f8097ad8d289cf6154fa114f474272", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db3574aa-16a8-413f-a7c2-a93c009db242", "node_type": "1", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "f597534ccc4fa90d195975b849afe24b554729f3ea84e646a712ea74914258a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "088a9248-b509-4bc0-94ba-72a98887e448", "node_type": "1", "metadata": {}, "hash": "ee6cf29189d2590fc5941b311dc056cc4e2ce4e29c1b5dd5fcfc8fa7d9cdc78a", "class_name": "RelatedNodeInfo"}}, "text": "Debugging Tips:\nuse command \"jps\" to view java running processes on each instances.\n\"netstat -a -p | grep -i port\" and then \"kill pid\". For releasing the port. (To troubleshoot port error\nobtained from logs inside for hdfs and yarn daemons)\nhadoop job -kill <job_id>                       --> to kill job (from namenode)\n\n\nNow we will be discussing a technique in which you can use python to write your map and reduce\nfunctions. (normally in hadoop it's in java as you have seen in above examples). We will be using\nstreaming api support of Hadoop to achieve this. (even c/c++ program can also be done in this way)\n\n\nInstall python on all datanodes and namenode.\n# sudo apt-get install python\n\n\nHere we will be implementing a word count map-reduce program. It reads text files and counts how\noften words occur. The input is text files and the output is text files, each line of which contains a word\nand the count of how often it occurred, separated by a tab.\n\n\nCreate a mapper and reduce function in python as explained below (under home directory).\n1. Create mapper.py which would be used for map function with below contents. Also change\npermission to 777 (by executing chmod 777 mapper.py):\n\n\n#!/usr/bin/env python\n\"\"\"mapper.py\"\"\"\n\n\nimport sys\n\n\n# input comes from STDIN (standard input)\n---\nfor line in sys.stdin:\n   # remove leading and trailing whitespace\n   line = line.strip()\n   # split the line into words\n   words = line.split()\n   # increase counters\n   for word in words:\n      # write the results to STDOUT (standard output);\n      # what we output here will be the input for the\n      # Reduce step, i.e. the input for reducer.py\n      #\n      # tab-delimited; the trivial word count is 1\n      print '%s\\t%s' % (word, 1)\n\n\n2. Create reduce.py for reduce functionality of map-reduce with below contents. Also change\npermission to 777 (by executing chmod 777 reduce.py):\n\n\n#!/usr/bin/env python\n\"\"\"reducer.py\"\"\"\n\n\nfrom operator import itemgetter\nimport sys\n\n\ncurrent_word = None\ncurrent_count = 0\nword = None\n\n\n# input comes from STDIN\nfor line in sys.stdin:\n   # remove leading and trailing whitespace\n   line = line.strip()\n\n\n   # parse the input we got from mapper.py\n   word, count = line.split('\\t', 1)\n\n\n   # convert count (currently a string) to int\n   try:\n      count = int(count)\n   except ValueError:\n      # count was not a number, so silently\n      # ignore/discard this line\n      continue\n\n\n   # this IF-switch only works because Hadoop sorts map output\n---\n   # by key (here: word) before it is passed to the reducer\n   if current_word == word:\n      current_count += count\n   else:\n      if current_word:\n          # write result to STDOUT\n          print '%s\\t%s' % (current_word, current_count)\n      current_count = count\n      current_word = word\n\n\n# do not forget to output the last word if needed!\nif current_word == word:\n   print '%s\\t%s' % (current_word, current_count)\n\n\n3. Download an input dataset which is a sample text file for testing map-reduce program by executing:\n  # wget https://www.gutenberg.org/files/20417/20417-8.txt\n\n\n4. Now run:\n  # cat 20417-8.txt | ./mapper.py | sort -k1,1 | ./reducer.py\n   It should produce output like below: (ie <text> <word count>) (this is manual way to simulate\noperations which map-reduce does in background, so that the program can be tested before starting it as\nmap-reduce job)\n             136\n             2\n             12\n             17\n 0.24001\n    62       124\nNow download 3 input text file for passing input to map reduce job. First create a directory under home\nand cd to that and download the txt files using wget:\n---\n# mkdir ~/test_txt\n# cd ~/test_text\n# wget http://www.gutenberg.org/files/5000/5000-8.tx\n# wget http://www.gutenberg.org/files/4300/4300-0.txt\n# wget http://www.gutenberg.org/cache/epub/20417/pg20417.txt\n\n\nExecute below command to copy from local file system to hadoop filesystem.\n# hdfs dfs -copyFromLocal ~/test_text /user/ubuntu/gutenberg", "start_char_idx": 25968, "end_char_idx": 29928, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "088a9248-b509-4bc0-94ba-72a98887e448": {"__data__": {"id_": "088a9248-b509-4bc0-94ba-72a98887e448", "embedding": null, "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "505d9135-88b7-4d6e-995d-3f64b53d345c", "node_type": "4", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "32ea14b1d95b12fd646194b1cd1f572164f8097ad8d289cf6154fa114f474272", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97a00d86-a29f-4a38-94ba-9c3638610475", "node_type": "1", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "7a2246440ab8246b51196d6e2f6d324f4ec0051b152213d6ff2ecee44275bbe7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0da8a333-6645-4c91-9498-6298ed89c585", "node_type": "1", "metadata": {}, "hash": "6426f76d1b244af45f7297663e3d781859da6b6beadea4fee44842e6a2825c0f", "class_name": "RelatedNodeInfo"}}, "text": "Execute below command to copy from local file system to hadoop filesystem.\n# hdfs dfs -copyFromLocal ~/test_text /user/ubuntu/gutenberg\n\n\nFor Viewing files under hdfs execute:\n# hdfs dfs -ls /user/ubuntu\nubuntulip-10-0-0-247:~/test_txtshdfsdfsFls\nFound     items\ndrwxr              ubuntu supergroup                0 2020-10-1123:20 gutenberg\nJruxr X *          ubuntusupergroup                    2020-10-11 21.39test\nIrwxr-Xr-*         ubuntu supergroup                 0 2020-10-11 21.42 testresult\nubuntulip-10-0-0-247:~/test_txts hdfs dfs0 2020-10-11 21.36 tt\ndrwxr-r-*          ubuntusupergroup                  ~lsluser/ubuntu\nFound     items\nJruxr              ubuntusupergroup                    2020-10-11 23.20/user/ubuntu/gutenberg\n                                                       2020-10-11 21.39 /user/ubuntu/test\n                   ubuntu supergroup\ndrvrrIr *          ubuntusupergroup                 0 2020-10-1121.42Tuser/ubuntul testresult\nIrwxr-%r <         ubuntusupergroup                    2020-10-11 21.36luser/ubuntultt\nubuntulip-10-0-0-247:-/test txts\nThis should show a gutenberg folder as show above. Same thing should be visible from web gui access\nalso on port 50070.\n\n\n4. Now start map-reduce job by:\n# hadoop jar /usr/local/hadoop/share/hadoop/tools/lib/hadoop-\nstreaming-2.10.1.jar -file /home/ubuntu/mapper.py -mapper\n/home/ubuntu/mapper.py -file /home/ubuntu/reducer.py                                  -reducer\n/home/ubuntu/reducer.py -input /user/ubuntu/gutenberg/* -output\n/user/ubuntu/gutenberg-output\n\n\nIf everything was succesfull, you would be seeing a directory created at\n/user/ubuntu/gutenberg-output and contents visible under it.\n---\n                                                                             FailedShuffles-0\n                                                                            Merged Mapoucpucs-3\n                                                                             GC            timeelapsed                                                     (ms) -524\n                                                                            Physical memory(bytes)snapshot 7702974464\n                                                                                                                     CPULimespent  (ms)=7370snapshot 1045188608\n                                                                             Virtualmemory                                                            (bytes)\n                                      ShuffleTotalcommitted heapusage(bytes)-695205888Errors\n                                                                             BAD ID-0\n                                                                             CONNECTION0\n                                                                             I0ERROR-0\n                                                                             WRONG LENGTH-0\n                                                                             WRONG MAP-0\n                                                                             WRONG REDUCE-0\n                                      FileInputFormat CountersBytes Read-3689899\n                                       FileoutputFormatCounters\n20/10/1204:54:08INFO streamingStreamJob:Bytes Nritten-887453                                                                                                                                              Output directory:                                                                 luser/ubuntulgutenbergoutput5\nHere I have specified output as /user/ubuntu/gutenberg-output5.\n\n\n===> Now modify the above program to find the most and least frequent words. (if multiple words\nwith same frequency, print all such occurrences) and append it to last of the generated text output along\nwith normal output. Execute new map-reduce job with your new modified program. (you might want to\ndelete previous file at output path, google for the Hadoop command to remove file)", "start_char_idx": 29793, "end_char_idx": 33807, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0da8a333-6645-4c91-9498-6298ed89c585": {"__data__": {"id_": "0da8a333-6645-4c91-9498-6298ed89c585", "embedding": null, "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "505d9135-88b7-4d6e-995d-3f64b53d345c", "node_type": "4", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "32ea14b1d95b12fd646194b1cd1f572164f8097ad8d289cf6154fa114f474272", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "088a9248-b509-4bc0-94ba-72a98887e448", "node_type": "1", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "a861dee850445ab999a84cbba4d43094fc92454c6c2ea4cd0acc93d06041af78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb63a99e-47d5-4385-86a3-1119bf92b204", "node_type": "1", "metadata": {}, "hash": "735f9df60408f7c4baf75f20efabaeb772c8ac17894441de9df3d770fbd3801a", "class_name": "RelatedNodeInfo"}}, "text": "===> Now modify the above program to find the most and least frequent words. (if multiple words\nwith same frequency, print all such occurrences) and append it to last of the generated text output along\nwith normal output. Execute new map-reduce job with your new modified program. (you might want to\ndelete previous file at output path, google for the Hadoop command to remove file)\n\n\nPerform below command to verify that output file is created: (as shown below)\n# hdfs dfs -ls /user/ubuntu/gutenberg-output/\nlbuntulip-10-0-0-247:~$ hdfsdfs -1sluser/ubuntu/gutenberg-output/\nound 2items\nIw-r-r\n-IV-r-r                                                              ubuntusupergroup\n                                                                     ubuntusupergroup                                                                                 887453 2020-10-1123:36 /user/ubuntu/gutenberg-output/SUCCESS2020-10-1123:36 /user/ubuntu/gutenberg-output/part-0OOOO\nlbuntulip-10-0-0-247:~$\nVerify content by executing:\n# hdfs dfs -cat /user/ubuntu/gutenberg-output/part-00000                                                                                                                                                                                                                                                                   (here most\nand least is not shown)Tis\n         Ildo!\n     Slife,\n     Tis\n     Tis,\n      Tvas\n      Tvizt\n     nid\n     neath\n      pon\n      tis\n      twas\n      twas\n      twere,\n      Come\n  \"Viator\n  \"YOU\n Ecrit\nubuntueip                                                              247:~$\n---\nNow we optimize mapper.py and reducer.py with below contents, which uses iterators and generators.\n(for improved performance)\n\n\n     1. mapper.py\n\n\n#!/usr/bin/env python\n\"\"\"A more advanced Mapper, using Python iterators and generators.\"\"\"\n\n\nimport sys\n\n\ndef read_input(file):\n   for line in file:\n      # split the line into words\n      yield line.split()\n\n\ndef main(separator='\\t'):\n   # input comes from STDIN (standard input)\n   data = read_input(sys.stdin)\n   for words in data:\n      # write the results to STDOUT (standard output);\n      # what we output here will be the input for the\n      # Reduce step, i.e. the input for reducer.py\n      #\n      # tab-delimited; the trivial word count is 1\n      for word in words:\n         print '%s%s%d' % (word, separator, 1)\n\n\nif __name__ == \"__main__\":\n   main()\n\n\n2. reducer.py\n\n\n#!/usr/bin/env python\n\"\"\"A more advanced Reducer, using Python iterators and generators.\"\"\"\n\n\nfrom itertools import groupby\nfrom operator import itemgetter\nimport sys\n\n\ndef read_mapper_output(file, separator='\\t'):\n   for line in file:\n      yield line.rstrip().split(separator, 1)\ndef main(separator='\\t'):\n   # input comes from STDIN (standard input)\n---\n   data = read_mapper_output(sys.stdin, separator=separator)\n   # groupby groups multiple word-count pairs by word,\n   # and creates an iterator that returns consecutive keys and their group:\n   # current_word - string containing a word (the key)\n   # group - iterator yielding all [\"&lt;current_word&gt;\", \"&lt;count&gt;\"] items\n   for current_word, group in groupby(data, itemgetter(0)):\n      try:\n         total_count = sum(int(count) for current_word, count in group)\n         print \"%s%s%d\" % (current_word, separator, total_count)\n      except ValueError:\n         # count was not a number, so silently discard this item\n         pass\nif __name__ == \"__main__\":\n   main()\n\n\nNow download input dataset from:\n# wget\nhttp://www.i3s.unice.fr/~jplozi/hadooplab_lsds_2015/datasets/gutenber\ng-1G.txt.gz\n# gunzip gutenberg-1G.txt.gz\nThen copy this file to hadoop hdfs by executing:\n # hdfs dfs -copyFromLocal ~/<filepath> /user/ubuntu/gutenberg2", "start_char_idx": 33425, "end_char_idx": 37187, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb63a99e-47d5-4385-86a3-1119bf92b204": {"__data__": {"id_": "fb63a99e-47d5-4385-86a3-1119bf92b204", "embedding": null, "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "505d9135-88b7-4d6e-995d-3f64b53d345c", "node_type": "4", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "32ea14b1d95b12fd646194b1cd1f572164f8097ad8d289cf6154fa114f474272", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0da8a333-6645-4c91-9498-6298ed89c585", "node_type": "1", "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}, "hash": "29e41a2b4795683d699e00fce65d9da757b7fc9b17995dc6c10d3d6eef7629e7", "class_name": "RelatedNodeInfo"}}, "text": "Now download input dataset from:\n# wget\nhttp://www.i3s.unice.fr/~jplozi/hadooplab_lsds_2015/datasets/gutenber\ng-1G.txt.gz\n# gunzip gutenberg-1G.txt.gz\nThen copy this file to hadoop hdfs by executing:\n # hdfs dfs -copyFromLocal ~/<filepath> /user/ubuntu/gutenberg2\n\n\n===> 1. Then run map-reduce job with your modified code with this input dataset by executing: (I will\nbe using this input dataset for grading purpose with your python changes present on map and reduce\nfunctions and it should use iterators and generators)( your new .py files should be uploaded along with\nreport or video submission))\n # hadoop jar /usr/local/hadoop/share/hadoop/tools/lib/hadoop-\nstreaming-2.10.1.jar -file /home/ubuntu/mapper.py -mapper\n/home/ubuntu/mapper.py -file /home/ubuntu/reducer.py                                            -reducer\n/home/ubuntu/reducer.py -input /user/ubuntu/gutenberg2/gutenberg-\n1G.txt -output /user/ubuntu/gutenberg-output2\n\n\nREFERENCES:\nhttps://en.wikipedia.org/wiki/MapReduce\nhttps://hadoop.apache.org/docs/r2.10.1/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html\nhttps://hadoop.apache.org/docs/r2.10.1/hadoop-yarn/hadoop-yarn-site/YARN.html\nhttps://hadoop.apache.org/docs/r2.10.1/hadoop-mapreduce-client/hadoop-mapreduce-client-\ncore/MapReduceTutorial.html\nhttps://www.tutorialspoint.com/hadoop/hadoop_mapreduce.htm\nhttps://hadoop.apache.org/docs/r2.10.1/hadoop-project-dist/hadoop-common/ClusterSetup.html\nhttps://www.michael-noll.com/tutorials/writing-an-hadoop-mapreduce-program-in-python/\nhttps://blog.gaelfoppolo.com/lets-try-hadoop-on-aws-13a23e641490\nhttps://developer.ibm.com/articles/l-pycon/", "start_char_idx": 36924, "end_char_idx": 38541, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "202324f4-3b8f-4a52-850e-f44a982e21e8": {"__data__": {"id_": "202324f4-3b8f-4a52-850e-f44a982e21e8", "embedding": null, "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1873d2cf-6ccb-4ed2-bb98-f3653a46e945", "node_type": "4", "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}, "hash": "1278a789d55380c8f6b3536b49d9735a4dda2cb144db96f5b87c7bb76a57aaf4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "742ea996-012e-4800-94e1-340b3c72972d", "node_type": "1", "metadata": {}, "hash": "5bb56b4506b09c215d330107c4c036bbb3a4fdf3a38233c215e8c2eba5332cdf", "class_name": "RelatedNodeInfo"}}, "text": "Laboratory 7: Spark Programming\n                                                Instructor: Young H. Cho\n\n\nApache Spark is a powerful distributed computing framework for efficiently processing very large\ndatasets. You will explore its libraries using the PySpark API in both a standalone and distributed\nenvironment. (start on this early as you have to run your program on Hadoop, MPI and spark with\nvarying number of worker nodes)\n\n\n1.   PySpark\n\n\nWe will first practice using Spark in local mode on a single-node machine. The following instructions\nonly cover installation on an EC2 instance. If you are already familiar with using Docker containers,\nyou may do this part on your own laptop or computer.\n\n\nYou may refer: https://aws.amazon.com/emr/pricing/ and select an instance with reduced cost. One you\nmay use is c5.large instance type.\n\n\nCreate an EC2 instance using the Amazon Linux 2 AMI and select c5.large for your instance type.\nMake sure to modify your instance\u2019s security group inbound rules so that port 8888 is accessible by\nyour IP address (tcp). You would be needing only one network interface and accordingly select auto\npublic ip with the steps mentioned in lab8. Specify hdd space as 12 GB. (your username in Amazon\nLinux AMI is ec2-user) (you will need to perform this from AWS free tier account or from student\naccount).(you should modify security group and network ACL rule in your VPC to allow public internet\naccess while downloading the package).\n\n\nRun the following commands to install Docker onto your instance and logout of your SSH session.\n\n\nsudo yum update -y\nsudo yum install -y docker\nsudo service docker start\nsudo usermod -a -G docker ec2-user\nexit\n\n\nSSH tunnel into your instance with the -L flag as shown below and run the subsequent commands to\ninstall the Docker image containing PySpark and Jupyter Notebook.\n\n\n## Connect localhost port 8888 to instance port 8888\nssh -i myKey.pem ec2-user@XXXX.compute.amazonaws.com -L 8888:127.0.0.1:8888\n\n\n## Install Docker image with PySpark Notebook\ndocker run -v ~/work:/home/jovyan/work -d -p 8888:8888 jupyter/pyspark-notebook\n\n\n## Allow preserving Jupyter notebook\nsudo chown 1000 ~/work\n\n\n## Install tree to see our working directory next\nsudo yum install -y tree\n---\nRun the following command to get the name of your container.\n\n\ndocker ps\nCONTAINER ID                           IMAGEPORTS                                         COMMAND                                       CREATED\n         STATUS                                                                                 NAMES\nf2890f12e6b4Up 27 seconds             jupyter /pyspark-notebooktcp\"tini0.0.0:8888- >8888 /      agitated_mcclintockstart-no_            28 seconds ago\nIn this case, my container\u2019s name is \u201cagitated_mcclintock\u201d. Use the Docker logs to get the link to\naccess your Jupyter Notebook running PySpark by running the following command.\n\n\ndocker logs \u201cname of container with no quotes\u201d\n\n\nCopy the displayed link into your browser and create a new Python 3 notebook.127,0.0.1,8888/natebooks Untitled ipynbzkernelnamepython3\n      jupyter       Untitled Last Checkpoint: minutes ag0(autosaved)                                                                                        Lodoul\n    File    Edit   Vicw     Insent   Cell    Kornel   Widgets     Help                                                                        Tn Fred   Python 3\n                                      Run                Code\n        In [ ]:\nFollow the tutorial linked below starting from section \u201cSpark Context\u201d to get familiar with the PySpark\nAPI. The dataset that is used has been altered since the tutorial\u2019s writing, changing several\nfeatures and breaking certain functions. Additionally, there are several typos that you will need to\nfix. When you\u2019re finished, download your notebook and make sure to TERMINATE your instance to\navoid additional costs. (You might want to google for how to use jupyter notebook instance and how to\nrun the program step by step and re-execution)\n\n\nhttps://www.guru99.com/pyspark-tutorial.html\n\n\nFor a better fundamental understanding of how Spark and its API work, it is recommended that you\ncreate an edX account and watch videos on machine learning with Spark.\n\n\nhttps://www.edx.org/search?q=machine+learning+spark+\n\n\nAfter completing the tutorial(s), download the \u201cSmartphone-Based Recognition of Human Activities\nand Postural Transitions Data Set\u201d from the UCI Machine Learning Repository. This dataset contains\naccelerometer and gyroscope data from smartphones of people doing various activities. You can read\nmore about the dataset and download it from the below link.", "start_char_idx": 40, "end_char_idx": 4700, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "742ea996-012e-4800-94e1-340b3c72972d": {"__data__": {"id_": "742ea996-012e-4800-94e1-340b3c72972d", "embedding": null, "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1873d2cf-6ccb-4ed2-bb98-f3653a46e945", "node_type": "4", "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}, "hash": "1278a789d55380c8f6b3536b49d9735a4dda2cb144db96f5b87c7bb76a57aaf4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "202324f4-3b8f-4a52-850e-f44a982e21e8", "node_type": "1", "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}, "hash": "962ea06efca1793a1338c3cd6abe1a71429b5d50fe37901536e29cafec5654f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf5c9ff7-0ad7-4b06-bc9a-60880379050d", "node_type": "1", "metadata": {}, "hash": "2e320c76c17fe7aac4ffbd77d61a8ea849e38e894f3023d1ce823cd69bfce9b5", "class_name": "RelatedNodeInfo"}}, "text": "https://www.guru99.com/pyspark-tutorial.html\n\n\nFor a better fundamental understanding of how Spark and its API work, it is recommended that you\ncreate an edX account and watch videos on machine learning with Spark.\n\n\nhttps://www.edx.org/search?q=machine+learning+spark+\n\n\nAfter completing the tutorial(s), download the \u201cSmartphone-Based Recognition of Human Activities\nand Postural Transitions Data Set\u201d from the UCI Machine Learning Repository. This dataset contains\naccelerometer and gyroscope data from smartphones of people doing various activities. You can read\nmore about the dataset and download it from the below link.\n\n\nhttps://archive.ics.uci.edu/ml/datasets/Smartphone-\nBased+Recognition+of+Human+Activities+and+Postural+Transitions\n\n\n Complete the following tasks on the dataset:\n       \uf0b7     Create a machine learning model using any algorithm not used in the tutorial from Spark\u2019s\n             MLLib.\n       \uf0b7     Report the training accuracy, test accuracy, and test F1-score for your model.\n---\n2.    AWS Elastic MapReduce\n\n\nWhen you run Spark in local mode, it will allocate tasks to local threads instead of worker nodes. Spark\nis a distributed computing framework and was not primarily designed to be used on a single-node\nmachine. Here, we will practice running a Spark job on a real cluster using AWS Elastic MapReduce.\n\n\nFirst, upload the smartphone data from the previous part into an S3 bucket.\n\n\nYou may refer: https://aws.amazon.com/emr/pricing/ and select an instance with reduced cost. You may\nuse c5.xlarge instance type.\n\n\nGo to EMR in the AWS console and click on the \u201cNotebook\u201d tab. Create a two-node cluster of instance\ntype c5.xlarge (or m5.xlarge ->if you face issues). EMR will create several EC2 instances of your\nselected type (as specified in the instance count) and automatically configure your cluster manager.\n(you may try these out from student account)\n\n\nWait for your cluster to start and your notebook to attach to the cluster. This can take anywhere from 5-\n10 minutes. Running a cluster in EMR is very expensive, so do not leave it idle and start using your\nnotebook immediately when it becomes ready.\n\n\nOpen your notebook in JupyterLab, select your created notebook, and select PySpark for your kernel.\nRun the code from model you made in the previous part (i.e on Smartphone-Based Recognition of\nHuman Activities and Postural Transitions Data Set). In EMR, your SparkContext object is already\ncreated so you don\u2019t have to declare it. You can reference it using \u201csc\u201d as usual. You will also have to\nreference files from S3 instead of a local file directory.\n\n\nWhen you\u2019re finished, TERMINATE your cluster in the \u201cClusters\u201d tab to avoid extra charges. You\nwill certainly accumulate huge charges if this is not done properly. Your notebook is saved in an S3\nbucket (which you specified while creating), which you can download and delete later if you choose.\n(you might check EC2 instance tab and terminate instances created by EMR manually)\n\n\n3.    Custom Spark Program\n\n\nReplicate functionally equivalent system as the codes you implemented using Hadoop and MPI on the\nprevious Laboratory assignment with Spark. (i.e word count and frequency count of character with all\nthe min and max word, character appended to an output file which gets stored in S3 bucket) (first try it\non local spark and then on EMR at AWS -> to reduce cost of usage)\n(you might want to first start testing with 5 MB Gutenberg file and after making everything work test it\non 1 GB Gutenberg file ->\nhttp://www.i3s.unice.fr/~jplozi/hadooplab_lsds_2015/datasets/gutenber\ng-1G.txt.gz\nAlso ensure that you don\u2019t count space as character for frequency count program and only take ascii\ncharacters within ascii values of range [33 \u2013 122] and print it as character and not as integer.->\napplicable for your previous Hadoop and MPI program also)\n---\nIpec Hx Oct    Hml    Chr    IdecHOct_HtmL_ChrLDec_HXOct_HtmL Cht\n  32 20 040 6#32; Space       64 40 1006#64;            96 60 140    4#96 ;\n  33 210416833;               6542 102 6#66; B101 4#65; 97     141 <#97;\n  34 22 042    6234;          66431036867;              98 62 142    6498;", "start_char_idx": 4074, "end_char_idx": 8226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bf5c9ff7-0ad7-4b06-bc9a-60880379050d": {"__data__": {"id_": "bf5c9ff7-0ad7-4b06-bc9a-60880379050d", "embedding": null, "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1873d2cf-6ccb-4ed2-bb98-f3653a46e945", "node_type": "4", "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}, "hash": "1278a789d55380c8f6b3536b49d9735a4dda2cb144db96f5b87c7bb76a57aaf4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "742ea996-012e-4800-94e1-340b3c72972d", "node_type": "1", "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}, "hash": "5ad451a544c6f486df970a107e24414d27e1b9535b8d5234db37043b6f6b379b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "338f7575-0ae9-4a4f-8afc-f189af26886a", "node_type": "1", "metadata": {}, "hash": "bcc2643fbb4c74a50323fba5d5477e042dde55592c1281fc8d63c35b19cffac9", "class_name": "RelatedNodeInfo"}}, "text": "txt.gz\nAlso ensure that you don\u2019t count space as character for frequency count program and only take ascii\ncharacters within ascii values of range [33 \u2013 122] and print it as character and not as integer.->\napplicable for your previous Hadoop and MPI program also)\n---\nIpec Hx Oct    Hml    Chr    IdecHOct_HtmL_ChrLDec_HXOct_HtmL Cht\n  32 20 040 6#32; Space       64 40 1006#64;            96 60 140    4#96 ;\n  33 210416833;               6542 102 6#66; B101 4#65; 97     141 <#97;\n  34 22 042    6234;          66431036867;              98 62 142    6498;\n  35 23 043 6#35;             67                        9963 1436#99;\n  36 24044 6#36               68451056869;44 104 6#68;10064 1446#100;\n  3725 045 6#37;              6946106 (#70;           10165 1456#101;\n  38 26 0466838;              7047 107 6#71;          102 66 146 <#102;\n  39 27 047\n  40 28 050 6#40;\n  4129 0516#41;6239;          %48111 6473;49110 6872; 103 67 147 <#103;\n                                                      104 68 150 6#104;\n                                                      10569 151 6#105;\n  42 24 052    6#42 ;         74 44 1126874;          106  64 152    6#106\n  432B0546#44;\n              44 ZC053 6#43;      4B1136875;\n                                  4C114 6276;         1076B 153 6#107;\n                                                      108 6C 1546#108;\n  45 ZD 0556246 _\n  46 ZE 0566#45;                  4 115 6#77;\n                                  4E1166878;          1096D 155\n                                                      1106E 156 <#110;4#109;\n  47 2F 057 6#47_                 4F117 6879          111   6F 157 &#111;\n  48 300606449\n  49 31061     6#48           80   50 1206#80;\n                              81  51121 6#81;         112 70 160 6#112;\n                                                      113 71161 <#113;\n  50 32 0626#50;              82 52122 6#82; R        114 72 162 #114;\n  633 0636#54;\n  54 3606634 0646#51;\n      35 065   6#52;\n               6253;          83 53 123 6#83;\n                              85 55125 6#85\n                                           84 54 1246884;\n                              86 56 126 6#86          115 73 163 6#115;\n                                                      116 74 1646#116;\n                                                      118 76 166\n                                                                117 75 165 6#117;6#118;\n  55 37067     6#55;          87 57127 6#87           119 77167 <#119;\n  56 38 070    6#56;          88581306788;            120 78 170 6#120;\n                                                      121 79 171 6#121;\n  57 39 071    6857;          89  59 1316889;\n  58 34072 <#58               905A132 6#90;           122 7A172 6#122;\n  59 3B073     6#59;          91SB1336#91;            123 7B 173 <#123;", "start_char_idx": 7669, "end_char_idx": 10491, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "338f7575-0ae9-4a4f-8afc-f189af26886a": {"__data__": {"id_": "338f7575-0ae9-4a4f-8afc-f189af26886a", "embedding": null, "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1873d2cf-6ccb-4ed2-bb98-f3653a46e945", "node_type": "4", "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}, "hash": "1278a789d55380c8f6b3536b49d9735a4dda2cb144db96f5b87c7bb76a57aaf4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf5c9ff7-0ad7-4b06-bc9a-60880379050d", "node_type": "1", "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}, "hash": "1294c5deeff99caf83b46a6bb6645f02ed85fce6e88f0e1edb881fce49fde9f4", "class_name": "RelatedNodeInfo"}}, "text": "118 76 166\n                                                                117 75 165 6#117;6#118;\n  55 37067     6#55;          87 57127 6#87           119 77167 <#119;\n  56 38 070    6#56;          88581306788;            120 78 170 6#120;\n                                                      121 79 171 6#121;\n  57 39 071    6857;          89  59 1316889;\n  58 34072 <#58               905A132 6#90;           122 7A172 6#122;\n  59 3B073     6#59;          91SB1336#91;            123 7B 173 <#123;\n  60 3C0746860;               92SC1346#92;            125 7D 175 6#125;\n                                                                       124 7C 174<#124;\n  61 3D0766862;\n  62 32   075 6#61;           93 SD1356#93;\n                              94 SE 136 6#94;         126 7E 1766#126;\n  633F 0776#63;               955F137 6#95;           127 7F 177     68127; DEL\nCompare Spark system against Hadoop and MPI. Make a diagram showing scalability\nperformances for different number of nodes. (so, you might want to try out with different number of\nworker nodes and execute your program on MPI, Hadoop and Spark on your created cluster and plot a\ngraph by varying number of worker nodes). (your program should be written in a generic way to\nwork with varying number of worker nodes). (you may try these out from student account)\nMake sure to take precautions for \u201cAWS data transfer out charges\u201d with security group, network ACL\nas well as iptables as mentioned during lab8.\n\n\nSources\nhttps://www.guru99.com/pyspark-tutorial.html\nhttps://courses.edx.org/courses/BerkeleyX/CS190.1x/1T2015/course/\nhttps://archive.ics.uci.edu/ml/datasets/Smartphone-\nBased+Recognition+of+Human+Activities+and+Postural+Transitions\nhttps://spark.apache.org/docs/latest/rdd-programming-guide.html", "start_char_idx": 9989, "end_char_idx": 11767, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34faa932-5b71-4896-a477-7d01765f025e": {"__data__": {"id_": "34faa932-5b71-4896-a477-7d01765f025e", "embedding": null, "metadata": {"filename": "lab8-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9e6e75d0-9854-4ebc-afe1-dfee75eb64ec", "node_type": "4", "metadata": {"filename": "lab8-f23.pdf", "category": "PDF file"}, "hash": "65fbe30a630fe2c74ba0a70a24044282ef53929740c7905e3b9be56f2580d06c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5dad686-1f36-4d4a-93e1-846b02beab02", "node_type": "1", "metadata": {}, "hash": "06bd67b63de4eb9481f0fd35f4662f336f4a4e45f847bde829c32ef15793fb1c", "class_name": "RelatedNodeInfo"}}, "text": "Laboratory 8: Custom Firmware for xDot\n                                                 Instructor: Young H. Cho\n\n\n1. Use the USB port on xDot to connect to the PC. The status light will turn on, indicating it has power.\n\n\n2. Go to https://developer.arm.com/downloads/-/gnu-rm/10-3-2021-10\n\n\n     Download and Install GNU Arm Embedded Toolchain\n\n\n3. Go to https://os.mbed.com/studio/\n\n\n     Download and Install Mbed Studio\n\n\n4. Run Mbed Studio, then select \u201cMultiTech xDot (STM32L151)\u201d under Target\n\n\n5. Start loading a new program by clicking on \u201c+New program\u201d\n\n\n6. Under Example program, select \u201cmbed-os-example-blinky\u201d then click on Add Program\n\n\n7. Once the example code is downloaded, examine the code \u201cmain.cpp\u201d\n\n\n     The files include libraries required to drive and run the xDot. The lib mbed-os provides abstract\n     functions to communicate with xDot. The file, main.cpp, contains a hello world example code, where\n     it blinks LED1 with a 500ms delay and reports the stats every 10 seconds.\n\n\n8. Click on a little hammer to compile the program. For debugging, set the compiler on the DEBUG\n     mode.\n\n\n9. Once it is completed the compilation, search for \u201cMbed Programs\u201d folder and verify that the subfolder\n     \u201cmbed-os-example-blinky/BUILD\u201d contains a newly compiled program \u201cmbed-os-example-\n     blinky.bin\u201d\n\n\n10. Copy and Paste/Drag the \u201cmbed-os-example-blinky.bin\u201d into a small storage folder for xDot. If you\n     Cannot copy/paste the .bin file output from Mbed studio into the xDot, you can program the device\n     by just clicking the run button in the Mbed Studio.\n\n\n11. Once the transmission to xDot is complete (make sure the transmission did not fail) hit the reset\n     button on the xDot.\n\n\n12. For Windows PC, please install the driver from https://os.mbed.com/handbook/Windows-serial-\n     configuration, and reboot the PC.\n\n\n13. Stats are sent to the debug port\n     Download a terminal program like Putty, Teraterm, or minicom on Windows or use \u201ccu\u201d on Linux\n     to connect to xDot\u2019s debug port through UART\n     https://www.cyberciti.biz/hardware/5-linux-unix-commands-for-connecting-to-the-serial-console/\n\n\n     For MacOS, use Mbed Studio for checking the debug messages. (Under the xDot label) as following\n     figure.\n---\n           Problems              MultiTech xDot (STM32L151)                 Output             Debug Console  Libraries\n       debuggingmessage\n       debugging message\n       debuggingmessage\n       debugging message\n      Specify the baud rate to 9600, Data bits to 8, Parity to N, Stop bits to 1, and Flow Control to OFF\n                          Priortya\n                                        3\n                                      Figure 1: Monitoring debug port using Putty on Windows\n\n\n14. Review the following web page for building thermistor\n      https://learn.adafruit.com/thermistor/using-a-thermistor\n                                 Vin\n                                                  Rt_\n                                                                         out\n                                                         Rs\n                                            Figure 2: Examples of NTC thermistor circuits\n      You may purchase parts from Amazon (fast delivery) or other electronic component stores to build a\n      thermistor for xDot. You should consider purchasing other components for your sensor capabilities\n      for the step 12 of this lab as well as your final project.\n\n\n      Keep in mind that the upper voltage limit should be 3.3V for Vout.\n\n\n15. Use the example code below to capture data from GPIO2(PB_0) ADC and GPIO 0 as source for the\n      sensor. The parameter values should be adjusted based on your specific configuration for the\n      thermistor. Refer to the following document for details of gpio or pin-diagrams of the xDot:\n      https://www.multitech.net/developer/products/multiconnect-dot-series/multiconnect-xdot/\n---\n     The connections are shown below:\n\n\n                               15\n                                     GPIO 2               Out\n                               17                                     NDT\n            xDot                     GPIO 0                Vcc\n                               14\n                                      Gnd                  Gnd", "start_char_idx": 37, "end_char_idx": 4351, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5dad686-1f36-4d4a-93e1-846b02beab02": {"__data__": {"id_": "f5dad686-1f36-4d4a-93e1-846b02beab02", "embedding": null, "metadata": {"filename": "lab8-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9e6e75d0-9854-4ebc-afe1-dfee75eb64ec", "node_type": "4", "metadata": {"filename": "lab8-f23.pdf", "category": "PDF file"}, "hash": "65fbe30a630fe2c74ba0a70a24044282ef53929740c7905e3b9be56f2580d06c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34faa932-5b71-4896-a477-7d01765f025e", "node_type": "1", "metadata": {"filename": "lab8-f23.pdf", "category": "PDF file"}, "hash": "d9f265d99c588ab658aac0cec3db8b994a6b172bf81ff88397b7a4516eb91695", "class_name": "RelatedNodeInfo"}}, "text": "Keep in mind that the upper voltage limit should be 3.3V for Vout.\n\n\n15. Use the example code below to capture data from GPIO2(PB_0) ADC and GPIO 0 as source for the\n      sensor. The parameter values should be adjusted based on your specific configuration for the\n      thermistor. Refer to the following document for details of gpio or pin-diagrams of the xDot:\n      https://www.multitech.net/developer/products/multiconnect-dot-series/multiconnect-xdot/\n---\n     The connections are shown below:\n\n\n                               15\n                                     GPIO 2               Out\n                               17                                     NDT\n            xDot                     GPIO 0                Vcc\n                               14\n                                      Gnd                  Gnd\n\n\n     // Example Code\n     #include \"mbed.h\"\n     #define BETA 3975\n     AnalogIn sensor(PB_0);\n     DigitalOut vcc(GPIO0);\n     double Thermistor(int RawADC) {\n        double Temp;\n        Temp= (float) 10000.0 * ((65536.0 / RawADC) - 1.0);\n        Temp = (1/((log(Temp/10000.0)/BETA) + (1.0/298.15)));\n        Temp = Temp - 273.15;                           // Convert Kelvin to Celcius\n          //Temp = (Temp * 9.0)/ 5.0 + 32.0; // Convert C to F\n          return Temp;\n     }\n\n\n     int main() {\n           printf(\"\\r\\nTemperature Test program\");\n           printf(\"\\r\\n********\\r\\n\");\n           vcc = 1;\n           unsigned int val;\n           while (1) {\n                 val=sensor.read_u16();\n                 double temp = Thermistor(val);\n                 printf(\"%f\\n\",temp);\n                 wait(5);\n           }\n     }\n\n\n     The function Thermistor() converts the analog value to a readable temperature value scaled on the\n     celsius scale using information from the NTC sensor documentation.\n     For additional information on mBed OS review the following link:\n     https://os.mbed.com/docs/mbed-os/v5.14/introduction/index.html\n\n\n16. Compile the code and download it to the xDot.\n      Open a serial connection to debug port with a baud of 115200 and check for the sensor value\n      correctness or calibrate accordingly.\n      TemperatureTestprogram\n      23.46630623.44466723.44466723.466306\n 17. Dig in and experiment with one additional sensor of your choice, sampling rates, and GPIO\n      capabilities. One easy and interest experiment might be to get a 3.5mm audio/mic connector with\n      wires to feed in your phone audio output to xDot analog input and see if you can capture or detect\n      sound.\n     https://www.amazon.com/Qaoquda-Balanced-Terminal-Adapter-Connector/dp/B07RXS3ZYN", "start_char_idx": 3520, "end_char_idx": 6170, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "64a653f7-9baa-4b73-8e89-fd7141a34996": {"__data__": {"id_": "64a653f7-9baa-4b73-8e89-fd7141a34996", "embedding": null, "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07", "node_type": "4", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "eb6a5a9288b9433ce1a0b359041dd15401dd5d6df47941c69e692c82af019e97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70a76db5-3c84-43ca-a8da-81857fa28c59", "node_type": "1", "metadata": {}, "hash": "dffa90c786cf572ea04527a670058c6a8fbddef9c50139728a271dac27ffdf8c", "class_name": "RelatedNodeInfo"}}, "text": "Laboratory 9: Android-based IoT interactions with Node-Red/Thingsboard and AWS IoT\n                                                   Instructor: Young H. Cho\n\n\nYou will repurpose Android phones with sensors such as GPS, accelerometer, gyro, barometer, light\nsensor, camera, and microphone as an Internet of Things (IoT). Then you will send the sensor data to a\ngateway to aggregate, filter, format, and retransmit them using an industry standard protocol to an IoT\nHub. The collected data can be further processed and displayed via AWS.\n\n\n1. Install Termux & Termux API\nDownload these two required apps from the play store, following are the links.\nhttps://play.google.com/store/apps/details?id=com.termux\nhttps://play.google.com/store/apps/details?id=com.termux.api\n\n\nPlease review https://wiki.termux.com/wiki/Remote_Access for steps to enable ssh access to your\nphone from your PC after setting a password using passwd. (would be easier to execute commands\nfrom your PC)\n\n\n2. See All the Sensors\nOpen a new session in Termux; swipe left drawer and click new session to open a new session. Switch\nbetween the session from the same left drawer menu. You can discontinue a termux-process running in\nthe current session by pressing phone's Volume Down + c in the keyboard.\n\n\nTo get a list of available sensor in the phone, type in Termux:\n\n\ntermux-sensor -l\n\n\nThis list will vary based on handset model.\nTermux will print the value of all the sensors continuously if you type\n\n\ntermux-sensor -a\n\n\nThis consumes a lot power. To print it once, type in\n\n\ntermux-sensor -a -n 1\n\n\nTo get all the list of options available, just type in:\n\n\ntermux-sensor\n\n\n3. Filter Light Sensor\n\n\nLight sensor is typically placed beside front camera (selfie camera) along with proximity sensor, and\npretty much available in all handset.\nTake the light sensor data to showcase how to extract and pipe this data. To filter out the light sensor in\ntermux-sensor, find the name from the list of printed sensor, in my case I picked \"TMD3702_Light\nAmbient Light Sensor Non-wakeup\u201d in my oneplus. To get a filtered data with this sensor, type in the\nfollowing to see its data.\n\n\ntermux-sensor -s \"TMD3702_Light Ambient Light Sensor Non-wakeup\" <sensor name>\n\n\n4. AWS IoT Setup (use free tier account)\n---\nIn the AWS IoT Core console, create a new policy in the \u201cPolicies\u201d tab under \u201cSecure\u201d.\n\n\nIn the \u201cAction field, enter: \"iot:*\" for all IoT actions, and under the \u201cResource ARN\u201d field, enter \"*\"\nfor all devices and topics. Check \u201cAllow\u201d for the \u201cEffect\u201d field.\n\n\nBack in the AWS IoT Core console, create a new device in the \u201cThings\u201d tab under \u201cManage\u201d. Name\nyour device, create a new type, and a new group for your IoT device.(create a single thing)\n\n\nSelect \u201cOne-click certificate creation\u201d and download your certificate, public, and private keys for your\ndevice. Make sure to click on \u201cActivate\u201d for your root certificate and click on the download link. This\nwill not actually download anything and will redirect you to a download page with several root\ncertificates. Download either Amazon Root CA 1 or CA 3. Lastly, attach the policy you created in\nprevious step to your device.\n\n\n5.    Node-red setup in PC (acting as aggregator)\n\n\nInstall node-red on your PC by following steps from:\nhttps://nodered.org/docs/getting-started/windows (if you have windows)\nIf any other OS search in google for corresponding step. Installing OS on VM should also work if you\nset n/w adapter in bridged mode)\n\n\nAfter this open 127.0.0.1:1880 on browser.\n\n\nTo import any external flow into Node-RED, click on the Hamburger Menu on the Top Right, then\nclick Import > Clipboard, you'll get an import dialogue box, then copy paste the below JSON content\ninto the box and hit Import.", "start_char_idx": 6, "end_char_idx": 3744, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70a76db5-3c84-43ca-a8da-81857fa28c59": {"__data__": {"id_": "70a76db5-3c84-43ca-a8da-81857fa28c59", "embedding": null, "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07", "node_type": "4", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "eb6a5a9288b9433ce1a0b359041dd15401dd5d6df47941c69e692c82af019e97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64a653f7-9baa-4b73-8e89-fd7141a34996", "node_type": "1", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "5c84727512c2b263b1eda67812b127a1c1d939d2e035d3e585ad4421767141a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2fedaf44-69ff-4388-a717-5ebf4ef0f6c9", "node_type": "1", "metadata": {}, "hash": "c2dbda2e628292b54b47d446315690f6721e8ac42dac5257651b28a18038024b", "class_name": "RelatedNodeInfo"}}, "text": "5.    Node-red setup in PC (acting as aggregator)\n\n\nInstall node-red on your PC by following steps from:\nhttps://nodered.org/docs/getting-started/windows (if you have windows)\nIf any other OS search in google for corresponding step. Installing OS on VM should also work if you\nset n/w adapter in bridged mode)\n\n\nAfter this open 127.0.0.1:1880 on browser.\n\n\nTo import any external flow into Node-RED, click on the Hamburger Menu on the Top Right, then\nclick Import > Clipboard, you'll get an import dialogue box, then copy paste the below JSON content\ninto the box and hit Import.\n\n\n[{\"id\":\"c12e9e18.651ae\",\"type\":\"tab\",\"label\":\"Flow\n3\",\"disabled\":false,\"info\":\"\"},{\"id\":\"dda5983.8467f68\",\"type\":\"json\",\"z\":\"c12e9e18.651ae\",\"name\":\"\",\"property\":\"payload\",\"action\":\"\",\"prett\ny\":false,\"x\":490,\"y\":360,\"wires\":[[\"3fed63c8.f80ccc\"]]},{\"id\":\"3fed63c8.f80ccc\",\"type\":\"function\",\"z\":\"c12e9e18.651ae\",\"name\":\"Get the\nnumber\",\"func\":\"msg.payload.light_sensor = msg.payload[\\\"TMD3702_Light Ambient Light Sensor Non-wakeup\\\"][\\\"values\\\"][0];\\nreturn\nmsg\",\"outputs\":1,\"noerr\":0,\"initialize\":\"\",\"finalize\":\"\",\"x\":610,\"y\":260,\"wires\":[[\"a8cd33f3.1c049\"]]},{\"id\":\"6d1fabef.8f4bf4\",\"type\":\"http\nrequest\",\"z\":\"c12e9e18.651ae\",\"name\":\"\",\"method\":\"POST\",\"ret\":\"txt\",\"paytoqs\":\"ignore\",\"url\":\"a3s67bg7sesm5q-ats.iot.us-west-\n2.amazonaws.com:8443/topics/lab11?qos=1\",\"tls\":\"eea8ed50.ce04e\",\"persist\":false,\"proxy\":\"\",\"authType\":\"\",\"x\":390,\"y\":60,\"wires\":[[\"e7c0fa\na5.356a38\"]]},{\"id\":\"a8cd33f3.1c049\",\"type\":\"function\",\"z\":\"c12e9e18.651ae\",\"name\":\"Format for PowerBI Stream\",\"func\":\"msg.payload =\nJSON.stringify([{\\\"light_sensor\\\":msg.payload.light_sensor}]);\\nreturn\nmsg;\",\"outputs\":1,\"noerr\":0,\"x\":540,\"y\":160,\"wires\":[[\"6d1fabef.8f4bf4\"]]},{\"id\":\"e7c0faa5.356a38\",\"type\":\"debug\",\"z\":\"c12e9e18.651ae\",\"n\name\":\"\",\"active\":true,\"tosidebar\":true,\"console\":true,\"tostatus\":false,\"complete\":\"payload\",\"x\":640,\"y\":60,\"wires\":[]},{\"id\":\"585e7e79.cd3a88\n\",\"type\":\"http in\",\"z\":\"c12e9e18.651ae\",\"name\":\"http\nlistener\",\"url\":\"/iot\",\"method\":\"post\",\"upload\":false,\"swaggerDoc\":\"\",\"x\":150,\"y\":260,\"wires\":[[\"eb40a42e.13afd8\",\"dda5983.8467f68\"]]},{\"i\nd\":\"eb40a42e.13afd8\",\"type\":\"http response\",\"z\":\"c12e9e18.651ae\",\"name\":\"http\nresponse\",\"statusCode\":\"202\",\"headers\":{},\"x\":200,\"y\":380,\"wires\":[]},{\"id\":\"eea8ed50.ce04e\",\"type\":\"tls-\nconfig\",\"name\":\"\",\"cert\":\"\",\"key\":\"\",\"ca\":\"\",\"certname\":\"9fd0757b11-certificate.pem.crt.txt\",\"keyname\":\"9fd0757b11-\nprivate.pem.key\",\"caname\":\"root CA.pem\",\"servername\":\"\",\"verifyservercert\":false}]\n                                                      Node-RED Flow Import Process", "start_char_idx": 3165, "end_char_idx": 5748, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2fedaf44-69ff-4388-a717-5ebf4ef0f6c9": {"__data__": {"id_": "2fedaf44-69ff-4388-a717-5ebf4ef0f6c9", "embedding": null, "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07", "node_type": "4", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "eb6a5a9288b9433ce1a0b359041dd15401dd5d6df47941c69e692c82af019e97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70a76db5-3c84-43ca-a8da-81857fa28c59", "node_type": "1", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "563414e6424e404c9157dff5decd45b4ffa815de6085252f1304c7858cb963e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "204810fc-17ce-4327-b9a3-795030f25a00", "node_type": "1", "metadata": {}, "hash": "6d927674dfe646bd0201f6fc23510a73532457969c52a5f561b7b22518a60b1e", "class_name": "RelatedNodeInfo"}}, "text": "Since the sensor command output\u2019s, a value with a single number, the rest of the flow nodes are\ndesigned to handle that single value; if you call for any sensor that return multiple values, the later\nnodes will break. You will also have to modify the \"Get the number\" node to the name of your light\nsensor.\n---\n                                                          http request                               msg-payload Y\n                                                                       J     Format for PowerBI Stream\n             http listener                                                                       Get the number\n                                                                                json\n                    http response\nHere a \u201chttp listener\u201d node is listening at port 1880 (node-red port) for post events which would come\nfrom mobile on /iot and an \u201chttp response\u201d node is present to sent a response back to mobile http\nrequest as needed by the http protocol.\n\n\nGo back into AWS IoT Core and copy the endpoint URL found in the \u201cSettings\u201d tab.\n\n\nIn the HTTP request node, set method to \"Post\" and paste the endpoint URL that we got from AWS\nIoT. Append the following text in yellow to your URL so it looks like the one shown below.\n\n\n                      XXXX-ats.iot.us-east-1.amazonaws.com:8443/topics/myTopic?qos=1\nYou can change \u201cmyTopic\u201d in the URL to any topic name of your choosing.\n\n\nCheck the box for \u201cEnable secure SSL/TLS connection\u201d and leave it as a TLS connection. Click on the\npencil to open the \u201cProperties\u201d menu.\n\n\nUpload the root certificate, private key, and certificate files for your device in the fields listed (got form\nprevious iot step). Save your changes to the node and exit the configuration menu.\n(certificate.pem.crt.txt -> for as certificate, private.pem.key -> for private key, downloaded Root CA1\nor 3 certificates for CA certificate). Also uncheck \u201cverify server certificate\u201d.\n\n\nClick on the Deploy button on the upper right corner of Node-RED flows window.\n\n\n6. Post Data from the Phone to PC\nThere are many different ways to send data from Termux to the gateway. Please go through two\nmethods described below.\n\n\n a. Install Node-RED & Termux API Module on Termux\nNow open the Termux App and run the following commands to install Node-RED\n---\napt update\napt upgrade\napt install termux-api\napt install python\napt install coreutils nodejs\nnpm i -g --unsafe-perm node-red\n\n\nIf you are running the latest version of Android you might face an error on the \u201cnpm I -g --unsafe-\nperm node-red\u201d line saying \u201ccannot read property \u2018length\u2019 of undefined\u201d. Run the following\ncommands if you face them.\n\n\napt-get install yarn\nyarn global add npm\n\n\nNow launch Node-RED\n\n\nnode-red\n\n\nNode-RED is now running on localhost on the Android phone; it will be showing the IP address and\nport it is running on in Termux.\n\n\nOn your phone you can point a browser to localhost:1880 and it will open up Node-RED flows editor.\nBut for practical purposes you'll have to open it up on a bigger screen such as a laptop.\nTo access the flows editor on a browser from a laptop running on the same network as the phone, you\ncan do it in two ways.", "start_char_idx": 5751, "end_char_idx": 8937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "204810fc-17ce-4327-b9a3-795030f25a00": {"__data__": {"id_": "204810fc-17ce-4327-b9a3-795030f25a00", "embedding": null, "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07", "node_type": "4", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "eb6a5a9288b9433ce1a0b359041dd15401dd5d6df47941c69e692c82af019e97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2fedaf44-69ff-4388-a717-5ebf4ef0f6c9", "node_type": "1", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "d722c43f12c901703c76895e2e77a317bd9d2b013247a1a798935ebf7700c9b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de44e879-822b-4262-9089-135c7b4eeb53", "node_type": "1", "metadata": {}, "hash": "5ccec95979726c1467fb1613192b6c934ffd50196ae41117bef4425383e96efa", "class_name": "RelatedNodeInfo"}}, "text": "If you are running the latest version of Android you might face an error on the \u201cnpm I -g --unsafe-\nperm node-red\u201d line saying \u201ccannot read property \u2018length\u2019 of undefined\u201d. Run the following\ncommands if you face them.\n\n\napt-get install yarn\nyarn global add npm\n\n\nNow launch Node-RED\n\n\nnode-red\n\n\nNode-RED is now running on localhost on the Android phone; it will be showing the IP address and\nport it is running on in Termux.\n\n\nOn your phone you can point a browser to localhost:1880 and it will open up Node-RED flows editor.\nBut for practical purposes you'll have to open it up on a bigger screen such as a laptop.\nTo access the flows editor on a browser from a laptop running on the same network as the phone, you\ncan do it in two ways.\n\n\nOne, your laptop/desktop has to be connected to the same WiFi router as the phone is connected to\n(preferred way as you need internet access). Two, you can run a WiFi hotspot from your phone and\nconnect to the hotspot from your laptop.\nNow type in ifconfig in Termux and get your phone's IP address. (you might need to open new session\nby swiping from left to right on screen as node-red should always run in other terminal)\n $ ifconfig\n Warning:cannot           openIproc/net/dev(Permission denied)                           Limited output\n lo:flags-73<UP , LOOPBACK, RUNNING>                    mtu    65536\n              inet 127.0 _0.1          netmask 255 _0 .0\n              unspec     00-00-00-0o-00-0o-00             00                                          txqueuelen\n NSPEC)\n wlano : flags-4163<UP, BROADCAST , RUNNING, MULTICAST>                          mtu 1500\n              inet   192.1680.100            netmask 255.255.255.0               broadcast 192.168 _0.255\n              unspec                                                                                  txqueuelen 3000\n   (UNSPEC)\nAdd a colon and port number of \u201c1880\u201d to the ip address and enter it into a browser from the\nlaptop/desktop. In my case it was 192.168.0.100:1880\n---\n    Inout                                                                                                                       Intonn uon\n                                                                                                                                         educus}\n                                                                                                                                        Hoa\n                                                                                                                                        Erabiod\n                                                                                                                                  modo\n                                                              Node-RED Blank Flow\n\n\nUse Node-RED's \"exec\" node to run a terminal command and get the sensor data into Node-RED's flow\neditor and post it to PC.\n\n\nTo import any external flow into Node-RED, click on the Hamburger Menu on the Top Right, then\nclick Import > Clipboard, you'll get an import dialogue box, then copy paste the following JSON\ncontent into the box and hit Import.", "start_char_idx": 8198, "end_char_idx": 11343, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de44e879-822b-4262-9089-135c7b4eeb53": {"__data__": {"id_": "de44e879-822b-4262-9089-135c7b4eeb53", "embedding": null, "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07", "node_type": "4", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "eb6a5a9288b9433ce1a0b359041dd15401dd5d6df47941c69e692c82af019e97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "204810fc-17ce-4327-b9a3-795030f25a00", "node_type": "1", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "1026ea02b60e2f7334f7f1c2913324aff7607bff7adf3affce88af91743d4899", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa8cd33f-191e-4a11-a68a-824e120d0016", "node_type": "1", "metadata": {}, "hash": "879ce6f02ca29bb64c4abb8cd36bd8aeb5b0b1c0dbbad2348833f35368a599ce", "class_name": "RelatedNodeInfo"}}, "text": "Use Node-RED's \"exec\" node to run a terminal command and get the sensor data into Node-RED's flow\neditor and post it to PC.\n\n\nTo import any external flow into Node-RED, click on the Hamburger Menu on the Top Right, then\nclick Import > Clipboard, you'll get an import dialogue box, then copy paste the following JSON\ncontent into the box and hit Import.\n\n\n[{\"id\":\"c12e9e18.651ae\",\"type\":\"tab\",\"label\":\"Flow\n3\",\"disabled\":false,\"info\":\"\"},{\"id\":\"bec0b05.54ba45\",\"type\":\"inject\",\"z\":\"c12e9e18.651ae\",\"name\":\"\",\"props\":[{\"p\":\"payload\"},{\"p\":\"topic\",\n\"vt\":\"str\"}],\"repeat\":\"5\",\"crontab\":\"\",\"once\":true,\"onceDelay\":\"\",\"topic\":\"\",\"payload\":\"\",\"payloadType\":\"date\",\"x\":170,\"y\":200,\"wires\":[[\"a9c\n3b25c.f6cc1\"]]},{\"id\":\"a9c3b25c.f6cc1\",\"type\":\"exec\",\"z\":\"c12e9e18.651ae\",\"command\":\"termux-sensor -s \\\"Light\\\" -n\n1\",\"addpay\":true,\"append\":\"\",\"useSpawn\":\"false\",\"timer\":\"\",\"oldrc\":false,\"name\":\"\",\"x\":280,\"y\":300,\"wires\":[[\"6d1fabef.8f4bf4\",\"a7281c9a.b\n89b6\"],[],[]]},{\"id\":\"6d1fabef.8f4bf4\",\"type\":\"http\nrequest\",\"z\":\"c12e9e18.651ae\",\"name\":\"\",\"method\":\"POST\",\"ret\":\"txt\",\"paytoqs\":\"ignore\",\"url\":\"http://192.168.0.102:1880/iot\",\"tls\":\"\",\"persi\nst\":false,\"proxy\":\"\",\"authType\":\"\",\"x\":370,\"y\":60,\"wires\":[[]]},{\"id\":\"a7281c9a.b89b6\",\"type\":\"debug\",\"z\":\"c12e9e18.651ae\",\"name\":\"\",\"acti\nve\":false,\"tosidebar\":true,\"console\":false,\"tostatus\":false,\"complete\":\"false\",\"statusVal\":\"\",\"statusType\":\"auto\",\"x\":590,\"y\":400,\"wires\":[]}]\n                                                       Node-RED Flow Import Process\n\n\nNow, click on exec node and put in termux-sensor -s \"Light Sensor Name\"-n 1, make sure to put in\nyour light sensor name. You would also need to change \u201chttp request\u201d node to your corresponding IP of\nthe PC and the path on which you are listening (port would be same as that of node-red port). Click\nDeploy on mobile node-red. Here \u201ctimestamp\u201d node is responsible for the periodic execution of the\ncommands present under the exec node.\n---\n                                  http request\n         timestamp\n                tenmux-sensor \"Light\"\\' -n1\n                                                            msg payload\nHere mobile is sending an http post request to the http listener of the PC. The path where I have http\nlistener running is http://192.168.0.102:1880/iot since I have configured this as path of listener at PC.\nThe IP \u201c192.168.0.102\u201d is the PC IP in private IP subnet to which mobile also belongs.\n\n\nOn the PC node-red you should begin to see messages in the following format in the debug window.\"{\"message\":\"OK\",\"traceId\":\"XXXX\"}\"\nIf you see \u201cOK\u201d as shown above, your packet was successfully sent to AWS IoT Core.\n\n\nIn AWS IoT Core, go into the \u201cTest\u201d tab. Subscribe to your topic using your chosen \u201ctopic name\u201d and\nverify that IoT Core is reading your packets correctly.\n\n\n b. CURL HTTP POST Method\n\n\n#!/bin/bash\nwhile [ 1 ]\ndo\ntermux-sensor -s \"TMD3702_Light Ambient Light Sensor Non-wakeup\" -n 1 > oo\ncurl -X POST --data-binary @oo 192.168.0.102:1880/iot -H \"Content-Type: text/plain\"\nsleep 5\ndone\n\n\nHere first the sensor is read and redirect its output to a file and then curl read data from this file and\nsend this data to PC node-red instance.\n\n\nYou might also want to disable sleep in your phone as termux will be in suspended state when mobile\ngoes for sleep to conserve power. So, sensor data would not be sent during this period.", "start_char_idx": 10991, "end_char_idx": 14353, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa8cd33f-191e-4a11-a68a-824e120d0016": {"__data__": {"id_": "fa8cd33f-191e-4a11-a68a-824e120d0016", "embedding": null, "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07", "node_type": "4", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "eb6a5a9288b9433ce1a0b359041dd15401dd5d6df47941c69e692c82af019e97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de44e879-822b-4262-9089-135c7b4eeb53", "node_type": "1", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "deb034bd29f3c27796d684a90fc62975112f64055e5dce52115a5177ae66c0ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05c6df77-0b20-4b90-beab-9b6fb3e296ea", "node_type": "1", "metadata": {}, "hash": "1792c4b56bd203dea28eeda1887b99bf0586a7f57213ec6da7224f6e590225fc", "class_name": "RelatedNodeInfo"}}, "text": "In AWS IoT Core, go into the \u201cTest\u201d tab. Subscribe to your topic using your chosen \u201ctopic name\u201d and\nverify that IoT Core is reading your packets correctly.\n\n\n b. CURL HTTP POST Method\n\n\n#!/bin/bash\nwhile [ 1 ]\ndo\ntermux-sensor -s \"TMD3702_Light Ambient Light Sensor Non-wakeup\" -n 1 > oo\ncurl -X POST --data-binary @oo 192.168.0.102:1880/iot -H \"Content-Type: text/plain\"\nsleep 5\ndone\n\n\nHere first the sensor is read and redirect its output to a file and then curl read data from this file and\nsend this data to PC node-red instance.\n\n\nYou might also want to disable sleep in your phone as termux will be in suspended state when mobile\ngoes for sleep to conserve power. So, sensor data would not be sent during this period.\n\n\nExplore more functionality supported in node-red from the left panel. The different apis supported etc.\nAlso learn how to code in node-js which you can write within a function block. Also explore\noutput/input relations of a block and how different blocks can be inter-connected using edges which\nhave multiple o/p and i/p.\n---\n7. Visualize Data in AWS IoT\n\n\nInstall ThingsBoard CE on an EC2 instance following the instructions in the link below. Use ubuntu\nserver 16.04 x86 OS. (use t2.micro instance type). In security group enable port 8080 access. Use in-\nmemory queue service (or if you want you can explore kafka). Use tenant@thingsboard.org for logging\nin.\n\n\nhttps://thingsboard.io/docs/user-guide/install/ubuntu/\n\n\nSend your data stream to your instance and create a dashboard in ThingsBoard. This dashboard must\ndisplay a real-time graph of your light sensor value on the y-axis and time on the x-axis. Tutorials on\nusing ThingsBoard are in the following link.\n\n\nhttps://thingsboard.io/docs/guides/\n\n\nNote that there are multiple ways you may route your stream to your instance. Some possible methods\ninclude modifying your Node-RED flow or republishing your stream from AWS IoT. You are free to\nachieve this in anyway you like, with any combination of AWS tools available.\n\n\nHere I will concentrate on using http method for posting data to thingsboard.\nhttps://thingsboard.io/docs/reference/http-api/", "start_char_idx": 13630, "end_char_idx": 15765, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05c6df77-0b20-4b90-beab-9b6fb3e296ea": {"__data__": {"id_": "05c6df77-0b20-4b90-beab-9b6fb3e296ea", "embedding": null, "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07", "node_type": "4", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "eb6a5a9288b9433ce1a0b359041dd15401dd5d6df47941c69e692c82af019e97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa8cd33f-191e-4a11-a68a-824e120d0016", "node_type": "1", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "73aa72700e73c64d74ea4c9a5fa2daeb23585451cddc550dccf361d16c2531d9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "934c6e49-4a2c-4cb7-bd8d-5da8a93db7b9", "node_type": "1", "metadata": {}, "hash": "bf5bd0ea25e4c942570f39e0318ff81388af63959dabdff7fe4107c676cc5a61", "class_name": "RelatedNodeInfo"}}, "text": "https://thingsboard.io/docs/user-guide/install/ubuntu/\n\n\nSend your data stream to your instance and create a dashboard in ThingsBoard. This dashboard must\ndisplay a real-time graph of your light sensor value on the y-axis and time on the x-axis. Tutorials on\nusing ThingsBoard are in the following link.\n\n\nhttps://thingsboard.io/docs/guides/\n\n\nNote that there are multiple ways you may route your stream to your instance. Some possible methods\ninclude modifying your Node-RED flow or republishing your stream from AWS IoT. You are free to\nachieve this in anyway you like, with any combination of AWS tools available.\n\n\nHere I will concentrate on using http method for posting data to thingsboard.\nhttps://thingsboard.io/docs/reference/http-api/\n\n\n     \u2022    Login with tenant@thingsboard.org and password as tenant.\n     \u2022    Go to devices tab and rename TEST Device A1 as Temperature. This can be done by clicking it\n          and selecting orange button. Further explore all the tabs present in thingsboard and its relations.\n          You can google for further information. You can create new device also if you wish here.\n     \u2022    Go to devices tab and create new device with name as \u201clight sensor\u201d. This can be done by\n          clicking on \u201c+\u201d at right most corner. Further explore all the tabs present in thingsboard and its\n          relations. You can google for further information.\n     \u2022    In the device tab now open newly created \u201clight sensor\u201d. Go to details and copy the access\n          token. This would be needed at PC node-red to publish data to thingsboard.\n     \u2022    Follow steps in https://thingsboard.io/docs/getting-started-guides/helloworld/ to push data to\n          thingboard by using curl. (below command execute from cmd on windows)\n          curl -v -X POST -d \"{\\\"light\\\": 25 }\u201d http://<ec2 public\n          ip>:8080/api/v1/$ACCESS_TOKEN/telemetry --header \"Content-Type:application/json\"\n     \u2022     Observe the data getting posted from curl is visible in \u201cLatest telemetry tab\u201d under specific\n           device. Based on your requirement you can create new devices and repeat the same procedure.\n---\n   54.212.216.198 BOcO/devices\n[op Devices                                                                                                                     tenant@thingsboard org\n                                                                                                                                VenantaJminslior\n  Devices    DCriCCUpC                                   LIGHT SENSOR\n                                                         Device details\n     Creaied llmc         Namc              Device type     DETAILS      ATTRIBUTES      LATEST TELEMETRY       ALARMS  EVENTS     RELATIONS\n     2020-11-01 19.57,01  LIght;Sentor       cetault\n                                                          Latest telemetry\n     2020-11-01 19.47.35 Thermostat T?       Tnermostat\n                                                                                                                Waln\n     2020-11-01 19.47.35  Thermostat T1      Tnermostat\n     2020-11-01 19.47.35  RaspberryMemo     default           2020-11-01 20.15.56 lighe\n                          Device\n     \u2022      Now add one more http request node with post method to send data into thingsboard. You\n            should give http link which you have given for the curl command. Don\u2019t enable SSL.\n           http://<ec2 public ip>:8080/api/v1/<access token>/telemetry\n                                                               http request                           msg payload Y\n                                                                         J f    Format for PowerBI Stream\n                                                                                                                                       http request\n                     http listener                                                                Get the number\n                                                                                   json\n                            http response\n     \u2022      Go to latest telemetry tab and select your sensor key. Click on show on widget and select\n            charts. You can select any widget for your display based on your requirements.\n     \u2022      Select Time series float chart and press add to dashboard.\n     \u2022     Choose create new dashboard and give it a name.\n     \u2022     Go to dashboard window on left column and you should see your newly created dashboard.\n           Now under the dashboard you have created (by clicking it) you can create multiple widget you\n           want and then map to telemetry data you want to for your devices. (explore all the options\n           present under dashboard).\n---\n                  9i Dashboards                                                                                                                           tenant@ tningsboard Olrg\n                                                                                                                                                          Tenant admninistratcr\n                lab11                                                                                               lab11  Lod Light Sensor  Realtimelast minute\n                Timeseries -Flot\n                      2020-11-01 2126.01\n                                          21.336,J02136 -0 21.6,50\n                    light_sensot\n       \u2022      When PC node-red is successfully sending data, you can observe it getting plotted in your\n              widget. The plot time period can be configured. You can select display time window in data tab\n              and select your time period in time window option.\n                                                                                       Realtime           last minute\n                                 REALTIME                                   HISTORY\n                        Hide Last                                                                              Advanced\n                                   minute\n                        Hide Data aggregation function\n                                 None\n                        HideMax                                                        25000\n                                values\n                                                                               UPDATE                   CANCEL\n8. Redirecting stream data to S3 bucket", "start_char_idx": 15021, "end_char_idx": 21497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "934c6e49-4a2c-4cb7-bd8d-5da8a93db7b9": {"__data__": {"id_": "934c6e49-4a2c-4cb7-bd8d-5da8a93db7b9", "embedding": null, "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07", "node_type": "4", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "eb6a5a9288b9433ce1a0b359041dd15401dd5d6df47941c69e692c82af019e97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05c6df77-0b20-4b90-beab-9b6fb3e296ea", "node_type": "1", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "c8691fb59e3f12f271c09ff8ce13e120dbee2789ffc9f5d6c8b046de0a043e0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e56d9887-847a-442c-b6f7-8d19bd3f91ce", "node_type": "1", "metadata": {}, "hash": "8b16450cfbc4ebb4b24dc4911b118276f6f84bd5b6925e4d1abf118ff944bb10", "class_name": "RelatedNodeInfo"}}, "text": "\u2022      Create a new S3 bucket. Give bucket name and grant appropriate access permission (don\u2019t give\n              public permission) so that kinesis firehose stream agent can write files to this bucket. Click\n              \u201ccreate bucket\u201d on rightmost corner down\n       \u2022      select kinesis (under analytics) from aws dashboard. Create a \u201cKinesis Firehose delivery\n              streams\u201d by Selecting create delivery stream. Enter a stream name. Select source as Direct\n              PUT or other sources. Click next in bottom right corner. (explore what does kinesis data stream\n              option does).\n---\n     \u2022    Click next to skip step2 (of process records, you can transform your input stream here by using\n          lambda function). Select Amazon S3 as your destination in step 3. Select your newly created S3\n          bucket under the S3 destination. If you want, you can add a S3 prefix but is optional. You can\n          even redirect data to other sources here as per your use-case.\n     \u2022    Click next and give buffer size as 5 mb and buffer interval as 120 seconds. This can be given as\n          per your application requirements. Select IAM role under permissions (your role should have\n          permission to write to your corresponding s3 bucket). Keep all other configurations as default.\n          Choose \u201ccreate or update IAM role\u201d.\n     \u2022    Select next and click create delivery stream on rightmost bottom corner. Now your iot\n          streaming data will be stored at S3 bucket in a period of 120 seconds. Write to S3 will happen\n          from kinesis at 120 second interval or 5 MB buffer is exhausted.\n     \u2022    Now again go to \u201cIot Core\u201d and select \u201cAct\u201d and then \u201cRules\u201d tab and create a new rule.\n          Click create button .\n     \u2022    Under Rule query statement you should write a query to fetch the data from iot.Write below\n          query\n                        SELECT * FROM \u2018iot endpoint where you post from PC\u2019\n     \u2022    Click \u201cAdd action\u201d and select \u201csend a message to Amazon Kinesis Firehose stream\". Click\n          configure action on the bottom most right corner. (explore all other supported services apart\n          from firehose stream)\n     \u2022    Select your newly created firehose stream under stream name which was created in previous\n          step and give separator as \u201c\\n\u201d.\n     \u2022    In \u201cChoose or create a role to grant AWS IoT access to perform this action\u201d choose an\n          existing policy if you have or create a new policy from here. Click \u201cAdd action\u201d.\n     \u2022    Now select create rule in new page under bottom most right corner.\n     \u2022    Now your data from PC should get stored at s3 bucket. For 120 seconds it gets buffered in\n          kinesis and then at 120th second it writes to S3 bucket.\n\n\n     \u2022    You would also have to enable the stream under \u201crules\u201d window.\n     \u2022    To verify that your iot device is posting data, go to IOT core window, then to Test tab and give\n          subscription topic as same as your post id from PC. Make note of your QOS field value also\n          with which you are posting. This should enable you to see the data from PC is being received at\n          aws or not.\n\n\n9. Further Tasks Which You Must Implement:", "start_char_idx": 21507, "end_char_idx": 24734, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e56d9887-847a-442c-b6f7-8d19bd3f91ce": {"__data__": {"id_": "e56d9887-847a-442c-b6f7-8d19bd3f91ce", "embedding": null, "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07", "node_type": "4", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "eb6a5a9288b9433ce1a0b359041dd15401dd5d6df47941c69e692c82af019e97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "934c6e49-4a2c-4cb7-bd8d-5da8a93db7b9", "node_type": "1", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "778e03ea54c28e5d1d284f97c3f9b5d9a82febc588b7dde2042f53102ea7457c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8fdce31-d0bd-40ec-b326-1c95b22cb112", "node_type": "1", "metadata": {}, "hash": "be67277fb1c0d756b5023de0800418b555fbe9ab53bb65ca6a73682c7fbbd001", "class_name": "RelatedNodeInfo"}}, "text": "\u2022    You would also have to enable the stream under \u201crules\u201d window.\n     \u2022    To verify that your iot device is posting data, go to IOT core window, then to Test tab and give\n          subscription topic as same as your post id from PC. Make note of your QOS field value also\n          with which you are posting. This should enable you to see the data from PC is being received at\n          aws or not.\n\n\n9. Further Tasks Which You Must Implement:\n\n\n      1. Add a timestamp in unix format and date in human readable format to your sensor value as\n            shown below i.e date + time, unix timestamp, sensor value. In S3 your data should be written\n            in these formats. The timestamp and date should be inserted from PC node-red.\n---\n         Apr    72\n         ApE    12    20      0,6\n          ApE=12\n          AD\n    5\n  11\n  12\n  3       LLO E\n  1 4                                           58\n  16\n  17                                            58\n  18     APL                                    58\n  19      ApL                                   58\n  20      Apr-12                                58\n  31      Apr   12   2020     06   28           58\n  7      npr-12      2020          20           5 0  690139900        1 0\n       2. You should take data from at least 5 different sensors of your phone and should also take\n             reading from more than one phone which is sending data to your node-red running on the PC.\n             Display these multiple sensor readings under the dashboard in thingsboard by plotting graph.\n             Moreover, your thingsboard should use the timestamp pushed from the PC node-red and\n             should not use thingsboard current system timestamp when data is received.\n       3. Also write a lambda function which writes your sensor data to a database (like DynamoDB)\n             with all the columns and data from multiple different sensors (date, timestamp, sensor 1\n             reading, sensor 2 reading etc.).\n       4. Also write a lambda function which at every 240 seconds (i.e at 2 firehose stream push) should\n             write a single file to S3 bucket which contains all data upto this point (in normal case 2 files\n             would be present at S3). You should keep on appending data to this file so that all the data\n             could be retrieved from this single file.\n       5. Moreover, At every 240 seconds you should find the median, mean and standard deviation of\n             your readings and group you data under median+1 standard deviation, median-1 standard\n             deviation, median+2 standard deviation, median-2 standard deviation, median+3 standard\n             deviation, median-3 standard deviation. You should be using all the sensor values up to that\n             point for calculation. For example, for first time it would be all values up to 240 second, then\n             all value upto 480 seconds from start etc. You should be writing this to a single separate file\n             and you would keep on appending new data with grouping along with median, mean, standard\n             deviation to this single file with timestamp marked as separation like 240, 480 etc. (format is\n aatacill 240:\n nedian      given below). Write an efficient algorithm.\n mcan:\n standaro deviation:\n mecian\n <sensordata>(sameformat a5 would bepresent in normal53 file)\n median\n (sensor data> Same format     would bepresent in normal53 file)\n median\n ~senso5 dat27 (sane format    rould bepresent in normal53 file)\n datacill   80:\n median\n mean:\n standarddeviation:\nredian\n <sensor data>(saneFormat      rould bepresent iR normal53 file)\n median\n ~senso1 data>(sametormar a8 would bepresent in normal33 file)\n edian                                                       file)\n {sensordata>(sane             rould be present in normal\nQUESTION", "start_char_idx": 24286, "end_char_idx": 28130, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8fdce31-d0bd-40ec-b326-1c95b22cb112": {"__data__": {"id_": "e8fdce31-d0bd-40ec-b326-1c95b22cb112", "embedding": null, "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07", "node_type": "4", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "eb6a5a9288b9433ce1a0b359041dd15401dd5d6df47941c69e692c82af019e97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e56d9887-847a-442c-b6f7-8d19bd3f91ce", "node_type": "1", "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}, "hash": "ba0c2ced2f48cfb7d8b9d31a7d38c3d07a02e06495dc9c671652065e7a53caf6", "class_name": "RelatedNodeInfo"}}, "text": "How would you integrate an ML model into this lab which trains on collected sensor data. How would\nyou deploy the model and make prediction?. How will you implement such a functionality in AWS?.\nExplain in detail how would the architecture look like and what all components you would be\n---\nneeding from AWS with message sequence interconnecting each stage. In other words, how would you\npass the sensor input to ML model to train it and make prediction on continuous streaming data (as you\nwould have to train and predict on data continuously) and how would the ML predicted output flow to\nyour mobile to pop up some message or trigger an event?. Explain in detail. (you can draw a design of\nsuch system and explain it).\n\n\nREFERENCES\n\n\nhttps://nodered.org/docs/platforms/android\nhttps://nodered.org/docs/node-red-admin\nhttps://github.com/termux/termux-packages/issues/1855\nhttps://www.hackster.io/mainul/build-an-iot-viz-with-your-android-phone-s-sensors-cc241e\nhttps://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.Lambda.Tutorial.html", "start_char_idx": 28133, "end_char_idx": 29189, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d7feb2d4-9397-409a-aafb-ebd60de4e540": {"__data__": {"id_": "d7feb2d4-9397-409a-aafb-ebd60de4e540", "embedding": null, "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0055d9c7-aa2c-465d-bc7b-bd7913bf6ebc", "node_type": "4", "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}, "hash": "766c7abe5846030f85d2e41b36670f8cc728f577446704b9625237c2bef07fef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "01bab896-eda2-4e53-b307-2df10c88ccc3", "node_type": "1", "metadata": {}, "hash": "31a9886ce6b30c18fc8976cf6c1838713068e3defb369f73fc5c426c1d77e20e", "class_name": "RelatedNodeInfo"}}, "text": "Running XDot Examples\n\n\nBefore Installing MBED CLI\n\n\nWe need to install dependencies for running MBED CLI first. The dependencies include.\n\n\n      1.    Python 3 https://www.python.org/downloads/\n      2.    Mercurial https://www.mercurial-scm.org/release/windows/\n      3.    Git https://git-scm.com/book/en/v2/Getting-Started-Installing-Git\n\n\nPlease make sure to include the installation in the environment path while installing. Follow this video\nfor reference (make sure you take the latest version from the above-provided links)\nhttps://www.youtube.com/watch?v=XvVyLxHuCpQ\n\n\nIn this document, the steps are shown for the windows platform. For Mac OS and Linux, follow similar\nsteps of installation.\n\n\nInstalling MBED CLI\n\n\nFor installing MBED CLI, download the installer from here:\n\n\nhttps://github.com/ARMmbed/mbed-cli-windows-\ninstaller/releases/download/v0.4.10/Mbed_installer_v0.4.10.exe\n\n\nMake sure you select the option \u201cinclude the installation in environment path variables\u201d.\nInstalling ARM GCC compiler\n\n\nGo to https://developer.arm.com/downloads/-/ds-5-downloads\n\n\nYou might have to register/login to ARM website. Complete the steps. You must see the below page\n  arm Developer                                                                          IP Explorer  Documentation  Downloads    Community   Support\n  Developing on Arm    Architecture and Processors Tools and Software\n      DS-5 (DSSOOA)\n       Product Line: Software Development ToolsECCN: 30991\n       Releases                                                                     Important note\n       Revision (1 available)                                                    By downloading you acknowledge that you will use this product in accordance with\n        rSpO-29rel3                                                              all terms and conditions contained in your license agreement with Arm and in full\n          Release Naie: DSSOOA-rSp0-29rel3                                       compliance with all applicable export laws and regulations\n          Release Quality: REL                                                    Once downloaded. maintain security measures and processes appropriate t0 protect\n         Last updated: September  2022                                           Arm'$ confidential data against anticipated threats and unauthorised access Or use:\n         DS-5 Development Studio v5.29.3 (Windows 64-bit)\n         Name: DSSOO-BN-00021-rSp0-29re/3\nSelect the release and download the zip file. (You might be asked to add extensions for faster\ndownloads)\n---\nUnzip it. Run the installation file Add it to environment path during installation.\nImporting Code and libraries\n\n\nCreate a folder in a path for your Dot examples DOT_PATH\\\n\n\nOpen command line\n\n\n      1.    Run mbed import http://os.mbed.com/teams/L-TEK/code/Dot-Examples/\n      2.    If you get issues related module error, install pip version 22.2.2\n      3.    This should create a director DOT_PATH\\Dot-Examples\\\n      4.    Run cd Dot-Examples and mkdir libxDot-dev-mbed5\n      5.    Download and unzip contents from https://github.com/MultiTechSystems/libxDot-dev-\n            mbed5/tree/9f5eab049dc97f9a0ab12219e9871c60f7efb427\n                     Code         Issues              Pull requests        Actions         Projects       Security     ~ Insights\n                      9fSeab049d                pranch       4 tags                                                                   Go to file      Code      About\n                                                                                                                                                                Bleedir\n                       jenkins xdot-library revision 3.0.0-19-gbbcOba2 and mbed-os revision           Clone                                                    the xD\n                                                                                                   HTTPS      SSH     GitHub CLI                               of the\n                        MTS-Lora/vendor/multitech/MTS-Ut_        update from git revision 2.0.1                                                                stable\n                        plans                                    xdot-library revision 3.0.0-17.   https: / /github.com/ iultitechsystems/libxDot-d            used\n                                                                                                                                                               scenari\n                        ChannelPlanh                             xdot=library Erevision 3.0.0-rc7Use Git or checkout with SVN using the web URL                m\n                        Lorah                                    xdot=library Erevision 3.0.0-17.", "start_char_idx": 48, "end_char_idx": 4812, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "01bab896-eda2-4e53-b307-2df10c88ccc3": {"__data__": {"id_": "01bab896-eda2-4e53-b307-2df10c88ccc3", "embedding": null, "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0055d9c7-aa2c-465d-bc7b-bd7913bf6ebc", "node_type": "4", "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}, "hash": "766c7abe5846030f85d2e41b36670f8cc728f577446704b9625237c2bef07fef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7feb2d4-9397-409a-aafb-ebd60de4e540", "node_type": "1", "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}, "hash": "37679966e60466f6d926addb0a274ea1c678b9f5904f096b8d26f53697319ae7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8648f61-1266-4b11-97b2-0a083afbf696", "node_type": "1", "metadata": {}, "hash": "4fce71abb5d10d7691ab5c9bcfe28f5d37a9ef947a988584cae1cb863811eab9", "class_name": "RelatedNodeInfo"}}, "text": "Open with GitHub Desktop\n                        MacEventsh                               xdot-library revision 3.0.0-9\n                                                                       library Erevision 3.0.0-9     Download ZIP\n                        Mote.h                                   xdot-\n                        READMEmd                                 update README with 3.xX info                                                       years ago\n                        SxRadioh                                 xdot-library revision 3.0.0-19-gb6cOba2 and mbed-os revision mbed-o=               years ago   Releasi\n      6.    Create folder mbed-os folder in DOT_PATH\\Dot-Examples\n      7.    Download and unzip contents from https://github.com/ARMmbed/mbed-os/archive/refs/tags/mbed-os-\n            5.6.2.zip to this folder\n---\n                 8.                Modify example_config.h in DOT_PATH\\Dot-Examples\\examples\\src\\ to run the type of example to run#ifndefEXAMPLE  CONFIG\n                                                                       #define                                                 EXAMPLE              CONFIG H                                                               pc\n                                                                       #define OTA_EXAMPLE                                                                                         11see ota_example.cpp\n                                                                                                                                                                                    1/\n                                              5                        #defineAUTO_OTA_EXAMPLE                                                                                     11see auto_ota_example.cpp\n                                                                       #defineMANUALEXAMPLE                                                                                                         see manualexample.cpp\n                                                                       #define PEER_TO_PEEREXAMPLE                                                                                 11see peer_to_peer_example. cpp\n                                                                       #define CLASS_C_EXAMPLE                                                                                     11see class_C_example.cpp\n                                          10                            1/ the active example is theone that Will be compiled\n                                         11                            #ifIdefined(ACTIVEEXAMPLE _\n                                          12                           #define ACTIVEEXAMPLE                                                                  PEER_TO_PEEREXAMPLE\n                                         13                            #endif\n                                         14\n                                          15                                           the activechannel plan is the one that willbe compiled\n                                         16                                             optionsare\n                                         17                                                                        CP_US915\n                                         18                                                                         CP _AU915\n                                         29                                                                       CP_KK8z8\n                                         21                                                                        CP_As923\n                                          22                                                                        CP               As923 JAPAN\n                                         23                             11                                         CP_IN865\n                                          24                           #if !defined(CHANNEL_PLAN)\n                                          25                           #define CHANNELPLAN CP_US915\n                                         26                            #endif\n                                         27\n                                          28                           #endif\n                                          29\n                 9.                Make sure to Set CP_US915 as channel plan in the config file\n                 10. FOR OTA Example, modify ota_example.cpp deep_sleep=true public_network=true and change\n                                   network ID and network key and make it use those\n                 11. Add dependency on light sensor of the example by running \u201cmbed add\n                                   http://os.mbed.com/teams/Multi-Hackers/code/ISL29011/\u201d\n                 12. Now run \u201cmbed compile -m XDOT_L151CC -t GCC_ARM\u201d to compile\n                 Refer : https://www.youtube.com/watch?v=C6LQJnd-E9E for an example of how to import and\n                 compile\n                 13. Now once bin is generated, go to DOT_PATH\\Dot-Examples\\BUILD\\XDOT_L151CC\\GCC_ARM\n                                   and copy the Dot-Examples.bin to the XDOT USB enumeration folder to flash\n                 14. Reset the board to run the example successfully\nGetting output from XDOT", "start_char_idx": 4816, "end_char_idx": 10217, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8648f61-1266-4b11-97b2-0a083afbf696": {"__data__": {"id_": "e8648f61-1266-4b11-97b2-0a083afbf696", "embedding": null, "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0055d9c7-aa2c-465d-bc7b-bd7913bf6ebc", "node_type": "4", "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}, "hash": "766c7abe5846030f85d2e41b36670f8cc728f577446704b9625237c2bef07fef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "01bab896-eda2-4e53-b307-2df10c88ccc3", "node_type": "1", "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}, "hash": "7fe7945e23a5f33c2f5b88b54b35a8b421aa112b5a0ff40e4417b4612ca08170", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9feaae92-e35e-4c64-94f4-9bdff50b1ec2", "node_type": "1", "metadata": {}, "hash": "a099c5cfe2a2f0b9299cad7e21ef26fe43db8c1bc18fb4a243bfa40cb5019bba", "class_name": "RelatedNodeInfo"}}, "text": "FOR OTA Example, modify ota_example.cpp deep_sleep=true public_network=true and change\n                                   network ID and network key and make it use those\n                 11. Add dependency on light sensor of the example by running \u201cmbed add\n                                   http://os.mbed.com/teams/Multi-Hackers/code/ISL29011/\u201d\n                 12. Now run \u201cmbed compile -m XDOT_L151CC -t GCC_ARM\u201d to compile\n                 Refer : https://www.youtube.com/watch?v=C6LQJnd-E9E for an example of how to import and\n                 compile\n                 13. Now once bin is generated, go to DOT_PATH\\Dot-Examples\\BUILD\\XDOT_L151CC\\GCC_ARM\n                                   and copy the Dot-Examples.bin to the XDOT USB enumeration folder to flash\n                 14. Reset the board to run the example successfully\nGetting output from XDOT\n\n\nNow that the example is running, we need to get the serial output for status from XDOT.\n---\nMake sure in the code we have this line as below if you are using the XDOT Dev board.\n   examples        STc     C peer_to_peer_example cpP                ( pc(USBTX, USBRX)\n               11       these options must match betweenthetwodevi\n     21                 orderforcommunicationto besuccessful\n     22\n     23        static uint8_t network_address[ ]                           {~0x01,       0x02,      Ox03,  Ox04\n     24        static uint8_t network_session_key[ ]                                  Ox01,Ox02 ,Ox03 ,\n     25        static uint8t data_ session_key[ ]                               Bx01, 0x02, @x03,Ox0'\n     26\n     27        mDot* dot            NULL;\n     28        lora      ChannelPlan* plan                  NULL;\n     29\n      30       TserTar                           ISBRX )\n     31        Serialpc (USBTX,USBRX\n     32        #IT                                   151CC\n     33        AnalogIn lux(AO)\n               #elif definedTARGET_XDOT_L151cc)\n     35        I2C i2c(I2C_SDA,I2C_SCL)\n     36        ISL29011        lux(i2c) ;\n     37        #else\n      38       AnalogIn lux(XBEE_ADe)\n               #endif\n      40\n               int_main()\nIf we are using a standalone XDOT, we might require a USB to UART TTL connector and set pins P9 and\nP10 instead of USBTX and USBRX", "start_char_idx": 9353, "end_char_idx": 11625, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9feaae92-e35e-4c64-94f4-9bdff50b1ec2": {"__data__": {"id_": "9feaae92-e35e-4c64-94f4-9bdff50b1ec2", "embedding": null, "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0055d9c7-aa2c-465d-bc7b-bd7913bf6ebc", "node_type": "4", "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}, "hash": "766c7abe5846030f85d2e41b36670f8cc728f577446704b9625237c2bef07fef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8648f61-1266-4b11-97b2-0a083afbf696", "node_type": "1", "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}, "hash": "e05ea894a144ca083e960fd77043858672a05b31eda9a89a0d44dff7c17e7b69", "class_name": "RelatedNodeInfo"}}, "text": "We need to detect the port of UART which is enumerated for communication. So, you can use PuTTy\nand check the enumerated port from device manager. Or a simpler way is to use a third party\napplication like Arduino which automatically detects the port for you and has a serial monitor as well.\n         Srich\n                  Auto Foinat\n                  Archive Sketan\n    Labhn            cncc dingRe Dud\n                  Manage Libra ies\n                       Momiict\n        ralu      Seiial Plotter\n                          WiFiNINA Firmxare Updater\n                  Hoard:ardulno Mao\n                       Com1c                                    Senal ports\n                                                                COM1Z\n                                   Progtarnner\"                 COMIA\n                  Burn Bcotloadur\n      raald\nSelect the port and open serial monitor ctrl+shift+M\n---\nMake sure to set the baud rate to 115200. We should be able to get the below prints\n     COM1A\n                                                                                                                   Send\n[INEO]              radio for TX\n[INFO]Configure radio fOr TX\n        JUCCCJJui Jentdata              DCer\n[INEO]Haiting fOr[OxOOFC]\n[INEO]l1gh8:252\n[INEO]EIedarine     LrORC\n[INEO]\n[INEO]ConciTreradio for TXradio for TX\n(INEO]JUCCCJJIuliJentd4ca               Dccr\n(INEO]Kaicingfor\n(INEO]l1gh0:246[OxOOF6]\n(INEO]Eredarine     LZAEC\n(INEO]ConriTure     radic\n(INEO]Conriqure     radic for TX\n(INEO]BuCCeggiuligentdaca               Deer\n(INEO]Naicingfor\n(INEO]11gh0:        (Oxo0zb]\n(INEO]Ereparinc     Izade\n(INEO]Conriquze     radio for IX\n(INEO]Confiqureradicfor IX\n(INEO]succeggruligencdava               Deer\n(INEO]Nacing\n    Autoscroll      Show timestamp                                                   Newline  115200 baud  Clear output", "start_char_idx": 11628, "end_char_idx": 13502, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"0d424c81-acb7-4efa-8b9c-a7d76ce226f3": {"node_ids": ["fabd5f98-a782-4c1d-beff-910648178d11", "06bf1905-ce9e-4ee6-b9c2-302a96e83d7d", "5d5cc201-b2b3-45c7-8810-62e41eeb4200", "cf6b8ecc-ae64-48cf-b55f-3a01589d851a"], "metadata": {"filename": "L01-f23.pdf", "category": "PDF file"}}, "a2b03b32-0e7c-4bcf-89ae-97566828528e": {"node_ids": ["a5217a07-55b2-411c-9cf7-16f0596c4274", "243fb3e1-195a-48aa-b3c1-cd3ddb684bbc", "a291b007-3a8a-4864-99e5-52791555bf11", "577647e0-d761-4bea-a593-6e32fb6003db", "39d8a405-8519-4684-b382-f8bfec70959c"], "metadata": {"filename": "L02-f23.pdf", "category": "PDF file"}}, "efa9bef2-ee71-472c-ac87-b4f01b33f6d9": {"node_ids": ["87434f36-d829-4198-98dd-04d22461c564", "4fb850e5-791c-4314-b796-c4aa0905a748", "1e173911-e0cb-40ea-a34f-69cb9ec30da9", "48b50317-2a1f-43dd-b397-193ad1bf4088", "7f5078d5-4ac7-4d0a-8870-f2834f547f41"], "metadata": {"filename": "L03-f23.pdf", "category": "PDF file"}}, "a4e343d8-c84b-473f-8413-4d02662d8aa9": {"node_ids": ["c7a21616-e0bd-40b4-9bea-4fe4f584b618", "aff05086-c930-4325-930f-80d4972d9c04", "09cf80aa-52ac-46c1-ae21-0b825986c086", "cc96c4c9-c788-4951-a9d8-29f6cca16a7d", "890a9b29-b602-4c13-b7d0-f1df2b910edb", "d1f62dfc-d526-4f2d-a447-ed1bf918e240"], "metadata": {"filename": "L04-f23.pdf", "category": "PDF file"}}, "7cdfdb2a-b39a-47c4-9444-6e39be015900": {"node_ids": ["f3302bed-1315-48ec-9bfa-02e9d5a46eae", "0f98514d-6660-4824-9b53-741a65ee838f", "d5d88ea9-9f16-4555-ab0d-fedec43b0751", "02894ed3-84db-4ef5-b79b-d512571888b8", "c3aa495d-d2f2-48cb-b614-685662d764de"], "metadata": {"filename": "L05-f23.pdf", "category": "PDF file"}}, "10f7a796-383c-4237-8197-5fd5d7aef48f": {"node_ids": ["8800a61f-47a2-4f74-94ea-700fb028856f", "e1630e7c-e3d7-44f1-b72e-5eb01674465f", "e8b3c6d4-d075-4a65-b9d1-7a6d5b4f1a55", "418e3b87-4868-4c17-9254-a1b0aa0de50c", "75ac0824-4e85-4db0-949e-5f01343321b2"], "metadata": {"filename": "L06-f23.pdf", "category": "PDF file"}}, "071db331-e5e6-4236-89d1-b34992c71198": {"node_ids": ["aab87825-1e27-4155-b920-5b9a85d0d660", "464c1cbc-38c6-47ce-b971-e47ceac8765f", "8c91ab7d-bd48-4606-997b-8ecd0f801d06", "55377015-0536-4341-9cac-67abf41ea708", "2d326130-2b77-4071-af15-f6b73c50fd6f"], "metadata": {"filename": "L07-f23.pdf", "category": "PDF file"}}, "4bd63c09-df09-470f-a2c3-ea9783f6a8d8": {"node_ids": ["71cd826e-b8c3-4526-bbbc-7de280ec05cb", "f87cf45d-0ab7-44a9-9034-81cba5fc860e", "6b25b5c0-8eb7-435c-95d5-88448f1b1cb0", "8ce10103-d065-4e0a-b40d-6473a662ef54"], "metadata": {"filename": "L08-f23.pdf", "category": "PDF file"}}, "744d4679-5374-4bda-97d2-52d7af729f75": {"node_ids": ["7cac62de-4ede-4577-a705-381ae930d366", "7bb57b98-1862-4d20-95e6-b9f11e979f28", "c73f5131-7493-4ff0-a4c4-7ef674d0b98e", "d1e2a36c-28ae-4fb7-9700-7e58853ce4fb", "c1b92f16-3226-43c6-8347-0190554a4def"], "metadata": {"filename": "L09-f23.pdf", "category": "PDF file"}}, "660ec437-9dd6-4a22-9f49-f9a187fd7c0f": {"node_ids": ["e85a68f8-b946-435e-96bc-9198ea7c06c2", "ea7291c8-689e-4414-b440-4a8886bca272", "60f3a652-7c09-4a4b-8fb2-54443aaaa8dd", "f9634d11-e5af-4a95-bf1c-f6783016f07c", "240ad29b-703b-44fc-a7f8-c743ebd6ed03", "5af3419d-91d1-4a82-b265-3aa72b93416d", "8eaeaa00-e7d3-4143-857c-b986baa13670", "a9974446-61a5-49d6-aad9-ad32e6949f97"], "metadata": {"filename": "L10-f23.pdf", "category": "PDF file"}}, "bfbe7970-7d60-42ae-8318-ae162a55ab02": {"node_ids": ["ea87b82e-88de-4165-9a2b-1344b34c87ba", "ea3021d5-9896-4ebc-82f0-2bbd551eec16", "d91408d7-4a79-4004-bf69-d0a641843f17", "0643bbc9-6cbd-47df-852a-05012ca010f8", "1fd4b519-b79b-4728-9a14-11aea02859dd", "aafc6440-ec25-454a-8b25-79ccd50c9ea8", "f9ea7b05-ca5e-4dd8-a297-544c2f112037", "c92e1572-16e4-418f-af0c-797537181238", "a2b63948-ac3e-4edf-8048-4d0df3b7216d"], "metadata": {"filename": "L11-f23.pdf", "category": "PDF file"}}, "b1a595d0-18c7-4d7c-a42a-94be94156c78": {"node_ids": ["a6212db5-e774-4a3d-bd59-f234d3060b67", "1f15d465-50a3-4780-830c-022d7a27f1a4", "9bb4dd21-cc54-40ba-9d6d-f00afbdd4c7c", "2546559e-c7e9-44a4-b1d1-c998886715a3"], "metadata": {"filename": "L12-f23.pdf", "category": "PDF file"}}, "f23e7729-edc0-45ba-90c9-377b39803a2c": {"node_ids": ["e620e89b-651b-40b7-8a0b-4e371f2d48da", "1f036aca-07f2-4441-8410-0f0ba836a7f6", "64b7de43-188b-49be-8a2b-fb1d3cde6b41", "9e7b8a63-62c5-4b17-82e1-432009b18bf8", "488fb359-fbff-4370-83c2-0a50709bd166"], "metadata": {"filename": "L13-f23.pdf", "category": "PDF file"}}, "03bd8073-0224-4c3d-803c-52c7c4f6913a": {"node_ids": ["97380de9-06e8-482d-a94f-41b6e2d7a4b4", "d5aa2d74-0d00-46e5-a320-b52dbde46d8d", "4a33be26-5ea8-4044-ac4f-3a2ca7e5dccb", "78d3ab14-5e0d-48c8-982d-d54996ca183e", "6c8ee24e-1742-464a-9c19-a8b883f770bb", "4a579f61-b082-4dd1-abaa-1f392915a1eb", "f33e0ebe-cd9b-4af3-88b3-8f7d98651ec8", "d38c2f89-4dcf-49a9-a8a0-62bde872bbbe"], "metadata": {"filename": "L14-f23.pdf", "category": "PDF file"}}, "8077ce0f-cfa7-4809-9b47-e9c97491357f": {"node_ids": ["f9437838-f5e1-472c-b0bc-804ba3e9cc4e", "52dfff85-c6bd-489c-a401-00c74d457edd", "984e6069-900c-48c1-ab62-1ac0e5af8ae2", "608e529f-942b-4973-acb9-726529923867"], "metadata": {"filename": "L15-f23.pdf", "category": "PDF file"}}, "8682f656-9ff8-4a0f-9f52-4e35e170f948": {"node_ids": ["41aff24e-7bcc-4593-99d4-2180946e1f21", "ea5f9902-9f04-41cb-9ef8-1732d2317390", "ea161f4f-46ad-400c-977e-6a192c20f0e4", "f4b63bac-f88e-41b4-a048-af03df99ae64", "ba7036fb-21c0-4676-b107-d651a759e962", "de78f5c0-08b7-4f83-b5a0-694c5fb473a6", "e56b7086-2d39-4ea6-9571-c5b2d840ccbb", "39c48f65-8811-455d-bcd0-90a6eb7ed3df", "c8516414-c862-4b71-a683-b43163b9d604", "3f0ff72e-8ca6-4085-8808-5d2de502a35d"], "metadata": {"filename": "L16-f23.pdf", "category": "PDF file"}}, "a8b37362-526a-4bbf-a4be-1fd483576783": {"node_ids": ["3cd35f98-e7bd-4371-9858-1467d4ddb805", "3bd7baaf-f1c3-4360-a2cb-3e77acdf4dda", "2ecf391a-8e0f-4581-8ef5-132fac130f9e", "8bb87013-8e45-4ba4-aabe-4f00de8fce19", "2c9ae204-649b-4491-bb5c-93a55cbf75b6", "af98c95d-1616-4263-93cc-7390f163d9f4", "51a86f2f-fe1c-4e1d-a614-be65eb9202cf", "abff2f6c-8c27-492f-9fdc-498c7aa78854"], "metadata": {"filename": "L17-f23.pdf", "category": "PDF file"}}, "234e5288-0853-46c4-bf94-b1354b27c5a2": {"node_ids": ["23a21220-e420-46ac-8cd8-a39c8b79a12e", "b0502971-31e2-4673-a49b-3c847a7f89ea", "0b9f8d44-4c1c-42fc-866d-81c82bf918d0", "8d74df54-e397-4220-980a-455c96fe63d7", "cd27d449-14a3-4a52-953e-e587f5f40dab", "fbfa5900-d0f0-4faa-b187-3b4753f30d0d"], "metadata": {"filename": "L18-f23.pdf", "category": "PDF file"}}, "2eacdbdc-a947-45a0-8d5a-72261dff8b13": {"node_ids": ["33b30c47-1ef5-4c52-b943-924fafa09c7a", "bbc3501c-27cd-435c-9728-1cbe73043cb1", "06452f58-cb82-41b7-b2b1-543870a4f138"], "metadata": {"filename": "L19-f23.pdf", "category": "PDF file"}}, "712fc20a-dac1-4f7f-9cc3-a5f3403ea833": {"node_ids": ["1c606eb7-aee2-4ce0-86e6-80337ac3ec1d", "1d8dbb6b-f2c7-4ae0-8f53-97a769805438", "faa4d3f1-c2d1-4f7b-8280-59f2fd1697dd", "7b6e1463-8ec8-46ce-9f9d-381d3685f973"], "metadata": {"filename": "L1X-Spark.pdf", "category": "PDF file"}}, "a83aeb3c-a31a-4d38-a2d1-e7d5e3a6b448": {"node_ids": ["8b44051d-9bee-410d-abce-d2811ba2d47b", "70ab97c8-206b-41e7-acb8-c0ed1368db4c", "554a751c-c4fb-4e1a-8873-248ce1a4ec0b", "1d0b54a4-3ee3-4a15-8d4e-0cdffa09b74b", "3322de2f-417e-47e2-8517-00c18cc145ee", "f0481488-d503-4e5b-8fcc-27e206a6e5cf"], "metadata": {"filename": "L20-f23.pdf", "category": "PDF file"}}, "170b749c-dcbe-45ec-a84d-27bbe8ce0630": {"node_ids": ["19263495-8486-4c44-9e99-397fd6a599c6", "900c8a5c-35fa-4203-a5c2-39f3fb1b86aa", "ab3f1dd9-2909-4126-8b78-453c7740cc63", "8b628913-e7e9-422b-9a82-af14bd2da3f1", "a3ffaef0-2c5e-486c-87e8-933565d322b2", "e5213508-5190-40e5-8400-a3a5a67fd091", "63f7e750-731a-46d6-9d09-3aa560890ace", "4b355759-ef09-40ee-a262-48f4ee68bdc3", "499909b2-8106-4ec3-9bac-185afe1ad8ae", "ed74601e-61bf-45d6-a97e-daf04b66c606"], "metadata": {"filename": "L21-f23.pdf", "category": "PDF file"}}, "c7d10a11-6834-4c6a-a09a-4523c6206af6": {"node_ids": ["8eb6bec1-1e5d-4436-94ac-95a04f0ab48a", "9236bc97-213e-463d-a8a4-402cf818ea54", "f52eb13c-f694-45d1-b028-13fb23a73c4a", "bef0ffd3-026a-473c-8857-1a1ee1d10038", "345f03a5-ac3d-4ed7-8348-6a55ebb48eba", "51206c4d-a8e8-425f-ba42-900a98e5e038", "5fd0c37e-3812-45c6-b34c-cd7e91fe2ba1", "090489f0-0d59-4b9d-9e67-b22785c06323"], "metadata": {"filename": "L22-f23.pdf", "category": "PDF file"}}, "f4b48116-024a-48fb-90fd-24e11eca5d55": {"node_ids": ["41af11bf-35e2-4ff9-959b-2f2f347bd409", "7201b607-d8f2-40cd-9744-b73685ed153f", "f95e5afb-75d6-4f39-81f0-b6a5b335ec01", "eec18e39-0f18-4777-bae8-a88026c034d8", "0f0638d8-7b70-4169-8bc4-13c1fca5333b", "07028e47-df1c-441b-9dfc-1fa68c5c3241", "20ef701d-5f1c-48fc-9af4-f77a2454a146"], "metadata": {"filename": "L23a-f23.pdf", "category": "PDF file"}}, "f38fe175-8442-41f4-b0e6-5a2bffb5d3a9": {"node_ids": ["2f4ca220-356d-467d-b725-05d7f5196978", "7c86c36a-3436-49c3-bbf4-5f9297c22c6f", "f1458f49-00f0-46ff-a920-16bda4873d99", "1f85f1dd-5120-499a-81d9-edc5dee950d1", "7ac7066d-2887-4a4f-ba07-995632f972bd", "2205618d-92f4-40e2-bb09-ee98a1b02d18"], "metadata": {"filename": "L23b-f23.pdf", "category": "PDF file"}}, "d600d56a-db3b-43a2-93ab-b51abaedfe08": {"node_ids": ["d70fab61-c911-49f4-8d64-8d81f893f1a2", "786851fd-31c4-49ab-b9ea-78628c8da589", "671aa048-0889-4f1c-8e36-b6caebc9dbf6", "6591bc55-10d9-4efc-8c07-eea5efd546c6", "e84738aa-e629-4424-8f62-69a903d0eb34", "663bc06b-5690-47f6-90be-87c41c19d856", "7fd29e75-c8be-4ca8-8a5b-1cf0761cc4c4", "186ee6e9-4d27-4d5b-ab19-4dae6bbe096d", "fbd7f212-63f7-4f1d-9ab5-933aaa955050", "24ef0355-f887-4ffd-875d-de33f6266cf5"], "metadata": {"filename": "L24-f23.pdf", "category": "PDF file"}}, "94f8b243-6631-4a28-83c2-1b837ff0fc14": {"node_ids": ["92e0ff00-5258-4045-8f3e-4125cdb773e1", "e2417f4d-0f42-41aa-907d-564dde1a5bd4", "d1dfa771-cb6c-4674-86a5-7aead1ea2dd3", "25e6cb47-d100-495c-9ac1-0632b9da2480", "aceb9da0-6182-4287-ad9e-063d426d15e2"], "metadata": {"filename": "L25-f23.pdf", "category": "PDF file"}}, "f85185eb-45ad-4f1d-b9c7-c2ca65b79798": {"node_ids": ["3cdd4011-bc68-42d3-8969-66b3f7f9fd15", "5d86ab6a-1e42-4381-9bdb-31ea1f89fb80", "92b33dec-88e4-405e-9bb9-61ca1a735b1b", "dc55c4a5-266c-4c9c-a4e7-7e10341c9de5", "75ed4c07-fdce-4598-8d34-30640de6a8c1", "b526ecc7-b97f-4451-a716-20c97ba30c82", "f3f78911-b871-4c55-8731-756dbc5aa282", "52b6ee87-7026-4a2a-aa68-b2c0ca166ed4", "6fd5cc7b-2db9-4c08-8424-a543ba8a07c4", "d44274dd-432d-4019-8686-6bebcf66594b", "71a4ee90-7e5e-4fff-8876-90cbf979a65c"], "metadata": {"filename": "lab1-f23.pdf", "category": "PDF file"}}, "78ef90b9-b965-47fb-be51-151b49c33249": {"node_ids": ["348ec02d-0c47-4de8-b6ff-9565555a0816", "aa29d473-75ab-4be5-9e8a-cf0abe35180a", "0de07b18-a4f1-48cd-82f7-2cbe483f039e"], "metadata": {"filename": "lab10-f23.pdf", "category": "PDF file"}}, "1c1f529e-e17d-45f7-9dc8-4928a205ba87": {"node_ids": ["a2b05a0c-c699-491f-b063-dc24ce54b9d9", "f3b1ba30-c716-4ab5-903c-cb498940132c", "ebb129d1-7096-4262-b8e8-e5457e02c16e", "7fa8e492-916e-4246-abeb-a0139f8155e9", "88353351-597c-4f48-9710-416be70ed517", "0573e874-b0f1-49d4-bc44-a7cd3df06f9c", "f28ed727-e54f-4931-a774-27814c9c2c12", "80d8543b-9657-4c7a-8212-52d749e43a01", "1c4c8211-6512-470e-a3c5-dd8425fa365d"], "metadata": {"filename": "lab2-f23.pdf", "category": "PDF file"}}, "808a3577-2990-4d70-8936-90c3f1a265ab": {"node_ids": ["a0ee20ab-f0db-45da-b6fe-58515711a90f", "d906bcfb-6a67-4667-a263-90dd09ba2b9c", "12971a22-603e-438e-a3c2-3eee0c64a733", "e3423b4f-9d7c-4a64-8af8-ae299dfe0a6e"], "metadata": {"filename": "lab3-f23.pdf", "category": "PDF file"}}, "fd4d8ffb-31a1-4993-9c7d-b5e43fd7855d": {"node_ids": ["59c4c185-04c0-4758-92ff-55ebd0c7c067", "0ab041f2-ff60-4e1a-9ad9-296bc49a7f9e", "2ba38c8a-eae8-4b26-b76c-aa1d46ec4b19", "302b065c-b853-4b0f-a167-f833149b8c3a", "c5cd59b6-20a0-4118-8dfd-51886855783f", "72525c5a-f087-4e68-bed9-f2710f8940f6"], "metadata": {"filename": "lab4-f23.pdf", "category": "PDF file"}}, "72d46d27-8773-4064-a178-753ec3e1f5c1": {"node_ids": ["829d8da7-52ac-44be-9f33-d82fe2e6aeeb", "cf8ab881-8d0c-4d5c-a9f2-02f200fb307a", "5b322323-3bee-4bd9-961c-4eb6a6032e96", "ccb5328f-ad33-4053-a458-93107e8325f6", "843976af-f8e3-48e1-a0a6-c94ceea2e21e"], "metadata": {"filename": "lab5-f23.pdf", "category": "PDF file"}}, "505d9135-88b7-4d6e-995d-3f64b53d345c": {"node_ids": ["e273cd46-c8f1-4c1a-9d23-d1f2f5e615be", "4ce761b5-7931-4d6a-9fd0-8936a07ed482", "c4179b97-64ec-40c1-868a-94980bd3729d", "7eff0ef2-5e07-4bce-9ca4-36a95ec6a8b1", "1381a3bb-e2ab-4867-ab11-6c74db28c30c", "db3574aa-16a8-413f-a7c2-a93c009db242", "97a00d86-a29f-4a38-94ba-9c3638610475", "088a9248-b509-4bc0-94ba-72a98887e448", "0da8a333-6645-4c91-9498-6298ed89c585", "fb63a99e-47d5-4385-86a3-1119bf92b204"], "metadata": {"filename": "lab6-f23.pdf", "category": "PDF file"}}, "1873d2cf-6ccb-4ed2-bb98-f3653a46e945": {"node_ids": ["202324f4-3b8f-4a52-850e-f44a982e21e8", "742ea996-012e-4800-94e1-340b3c72972d", "bf5c9ff7-0ad7-4b06-bc9a-60880379050d", "338f7575-0ae9-4a4f-8afc-f189af26886a"], "metadata": {"filename": "lab7-f23.pdf", "category": "PDF file"}}, "9e6e75d0-9854-4ebc-afe1-dfee75eb64ec": {"node_ids": ["34faa932-5b71-4896-a477-7d01765f025e", "f5dad686-1f36-4d4a-93e1-846b02beab02"], "metadata": {"filename": "lab8-f23.pdf", "category": "PDF file"}}, "94339dc4-a4f5-4e9b-8b8b-eb55f3fa9c07": {"node_ids": ["64a653f7-9baa-4b73-8e89-fd7141a34996", "70a76db5-3c84-43ca-a8da-81857fa28c59", "2fedaf44-69ff-4388-a717-5ebf4ef0f6c9", "204810fc-17ce-4327-b9a3-795030f25a00", "de44e879-822b-4262-9089-135c7b4eeb53", "fa8cd33f-191e-4a11-a68a-824e120d0016", "05c6df77-0b20-4b90-beab-9b6fb3e296ea", "934c6e49-4a2c-4cb7-bd8d-5da8a93db7b9", "e56d9887-847a-442c-b6f7-8d19bd3f91ce", "e8fdce31-d0bd-40ec-b326-1c95b22cb112"], "metadata": {"filename": "lab9-f23.pdf", "category": "PDF file"}}, "0055d9c7-aa2c-465d-bc7b-bd7913bf6ebc": {"node_ids": ["d7feb2d4-9397-409a-aafb-ebd60de4e540", "01bab896-eda2-4e53-b307-2df10c88ccc3", "e8648f61-1266-4b11-97b2-0a083afbf696", "9feaae92-e35e-4c64-94f4-9bdff50b1ec2"], "metadata": {"filename": "xDot_examples_20230130.pdf", "category": "PDF file"}}}}