00:00:00 Hello, and welcome to Introduction to Generative AI.
00:00:07 My name is Dr. Gwendolyn Stripling, and I am the Artificial Intelligence Technical Curriculum Developer here at Google Cloud.
00:00:15 In this course, you learn to define generative AI, explain how generative AI works, describe generative AI model types, and describe generative AI applications.
00:00:22 Generative AI is a type of artificial intelligence technology that can produce various types of content, including text, imagery, audio, and synthetic data.
00:00:30 But what is artificial intelligence?
00:00:37 Well, since we are going to explore generative artificial intelligence, let's provide a bit of context.
00:00:45 So two very common questions asked are, what is artificial intelligence?
00:00:52 And what is the difference between AI and machines?
00:01:00 learning.
00:01:06 One way to think about it is that AI is a discipline, like physics, for example.
00:01:13 AI is a branch of computer science that deals with the creation of intelligent agents, which are systems that can reason and learn and act autonomously.
00:01:20 Essentially, AI has to do with the theory and methods to build machines that think and act like humans.
00:01:26 In this discipline, we have machine learning, which is a subfield of AI.
00:01:33 It is a program or system that trains a model from input data.
00:01:40 The trained model can make useful predictions from new or never-before-seen data, drawn from the same one used to train the model.
00:01:46 Machine learning gives the computer the ability to learn without explicit programming.
00:01:53 Two of the most common classes of machine learning models are unsupervised.
00:02:00 supervised and supervised ML models.
00:02:06 The key difference between the two is that with supervised models, we have labels.
00:02:12 Labeled data is data that comes with a tag, like a name, a type, or a number.
00:02:18 Unlabeled data is data that comes with no tag.
00:02:24 This graph is an example of the sort of problem that a supervised model might try to solve.
00:02:30 For example, let's say you are the owner of a restaurant.
00:02:36 You have historical data of the bill amount and how much different people tipped based on order type, whether it was picked up or delivered.
00:02:42 In supervised learning, the model learns from past examples to predict future values, and in this case, tips.
00:02:48 So here the model uses the total bill amount to predict the future tip amount based on whether an order was picked up or delivered.
00:02:54 This is an example of the sort of problem that an unsupervised model might try to solve.
00:03:00 unsupervised model might try to solve.
00:03:07 So here, you want to look at tenure and income and then group or cluster employees to see whether someone is on the fast track.
00:03:15 Unsupervised problems are all about discovery, about looking at the raw data and seeing if it naturally falls into groups.
00:03:22 Let's get a little deeper and show this graphically as understanding these concepts are the foundation for your understanding of generative AI.
00:03:30 In supervised learning, testing data values or X are input into the model.
00:03:37 The model outputs a prediction and compares that prediction to the training data used to train the model.
00:03:45 If the predicted test data values and actual training data values are far apart, that's called error.
00:03:52 And the model tries to reduce this error until the predicted and actual values are close.
00:04:00 together.
00:04:07 This is a classic optimization problem.
00:04:15 Now that we've explored the difference between artificial intelligence and machine learning and supervised and unsupervised learning, let's briefly explore where deep learning fits as a subset of machine learning methods.
00:04:22 While machine learning is a broad field that encompasses many different techniques, deep learning is a type of machine learning that uses artificial neural networks, allowing them to process more complex patterns than machine learning.
00:04:30 Artificial neural networks are inspired by the human brain.
00:04:37 They are made up of many interconnected nodes, or neurons, that can learn to perform tasks by processing data and making predictions.
00:04:45 Deep learning models typically have many layers of neurons, which allows them to learn more complex patterns than traditional machine learning models.
00:04:52 And neural networks can use both labeled and unlabeled data.
00:05:00 data.
00:05:07 This is called semi-supervised learning.
00:05:15 In semi-supervised learning, a neural network is trained on a small amount of labeled data and a large amount of unlabeled data.
00:05:22 The labeled data helps the neural network to learn the basic concepts of the task, while the unlabeled data helps the neural network to generalize to new examples.
00:05:30 Now, we finally get to where generative AI fits into this AI discipline.
00:05:37 Gen-AI is a subset of deep learning, which means it uses artificial neural networks, can process both labeled and unlabeled data, using supervised, unsupervised, and semi-supervised methods.
00:05:45 Large language models are also a subset of deep learning.
00:05:52 Deep learning models, or machine learning models in general, can be divided into two types, generative and discriminative.
00:06:00 A discriminative model is a type of model that is used to classify or predict labels for data points.
00:06:07 Discriminative models are typically trained on a dataset of labeled data points and they learn the relationship between the features of the data points and the labels.
00:06:15 Once a discriminative model is trained, it can be used to predict the label for new data points.
00:06:22 A generative model generates new data instances based on a learned probability distribution of existing data.
00:06:30 Thus, generative models generate new content.
00:06:37 Take this example.
00:06:45 Here the discriminative model learns the conditional probability distribution or the probability of Y, our output, given X, our input, that this is a dog and classifies it as a dog and not a cat.
00:06:52 The generative model learns the joint probability distribution or the probability of X, our output, given Y, our input, that this is a dog and classifies it as a dog and classifies 
00:07:00 of X and Y and predicts the conditional probability that this is a dog and can then generate a picture of a dog.
00:07:08 So to summarize, generative models can generate new data instances while discriminative models discriminate between different kinds of data instances.
00:07:17 The top image shows a traditional machine learning model which attempts to learn the relationship between the data and the label or what you want to predict.
00:07:25 The bottom image shows a generative AI model which attempts to learn patterns on content so that it can generate new content.
00:07:34 A good way to distinguish what is gen AI and what is not is shown in this illustration.
00:07:42 It is not gen AI when the output or Y or label is a number or a class of, for example, spam or not spam or a probability.
00:07:51 It is gen AI when the out...
00:07:59 is natural language, like speech or text, an image or audio, for example.
00:08:06 Visualizing this mathematically would look like this.
00:08:13 If you haven't seen this for a while, the y is equal to f of x equation calculates the dependent output of a process given different inputs.
00:08:20 The y stands for the model output, the f embodies the function used in the calculation, and the x represents the input or inputs used for the formula.
00:08:26 So the model output is a function of all the inputs.
00:08:33 If the y is a number, like predicted sales, it is not gen-ai.
00:08:40 If y is a sentence, like define sales, it is generative.
00:08:46 As the question would elicit a text response, the response would be based on all the massive large data the model was already trained on.
00:08:53 To summarize.
00:08:59 At a high level, the traditional classical supervised and unsupervised learning process takes training code and label data to build a model.
00:09:03 Depending on the use case or problem, the model can give you a prediction, it can classify something or cluster something.
00:09:07 We use this example to show you how much more robust the Gen-AI process is.
00:09:11 The Gen-AI process can take training code, label data, and unlabeled data of all data types and build a foundation model.
00:09:14 The foundation model can then generate new content.
00:09:18 For example, text, code, images, audio, video, etc.
00:09:22 We've come a long way from traditional programming, to neural networks, to generative models.
00:09:26 In traditional programming, we used to have to hard code the rules for distinguishing a cat.
00:09:29 The type?
00:09:33 Animal.
00:09:37 Legs?
00:09:41 Four.
00:09:44 Ears?
00:09:48 Two.
00:09:52 Fur?
00:09:56 
00:09:59 likes yarn and catnip.
00:10:05 In the wave of neural networks, we could give the network pictures of cats and dogs and ask, is this a cat?
00:10:11 And it would predict a cat.
00:10:17 In the generative wave, we as users can generate our own content, whether it be text, images, audio, video, et cetera.
00:10:23 For example, models like POM, or Pathways Language Model, or Lambda, Language Model for Dialogue Applications, and just very, very large data from the multiple sources across the internet and build foundational language models, we can use simply by asking a question, whether typing it into a prompt or verbally talking into the prompt itself.
00:10:29 So when you ask it, what's a cat?
00:10:35 It can give you everything it has learned about a cat.
00:10:41 Now we come to our formal definition.
00:10:47 What is generative AI?
00:10:53 Gen AI is a type of artificial intelligence.
00:10:59 that creates new content based on what it has learned from existing content.
00:11:08 The process of learning from existing content is called training and results in the creation of a statistical model.
00:11:17 When given a prompt, GNAI uses the model to predict what an expected response might be, and this generates new content.
00:11:25 Essentially, it learns the underlying structure of the data and can then generate new samples that are similar to the data it was trained on.
00:11:34 As previously mentioned, a generative language model can take what it has learned from the examples it's been shown and create something entirely new based on that information.
00:11:42 Large language models are one type of generative AI since they generate novel combinations of text in the form of natural-sounding language.
00:11:51 A generative image model takes an image as input.
00:11:59 and can output text, another image, or video.
00:12:05 For example, under the output text, you can get visual question answering, while under output image, an image completion is generated, and under output video, animation is generated.
00:12:11 A generative language model takes text as input and can output more text, an image, audio, or decisions.
00:12:17 For example, under the output text, question answering is generated, and under output image, a video is generated.
00:12:23 We've stated that generative language models learn about patterns in language through training data.
00:12:29 Then, given some text, they predict what comes next.
00:12:35 Thus, generative language models are pattern-matching systems.
00:12:41 They learn about patterns based on the data you provide.
00:12:47 Here is an example.
00:12:53 Based on things that's learned from its training data,
00:12:59 It offers predictions of how to complete this sentence.
00:13:05 I'm making a sandwich with peanut butter and jelly.
00:13:11 Here is the same example using BARD, which is trained on a massive amount of text data and is able to communicate and generate human-like text in response to a wide range of prompts and questions.
00:13:17 Here is another example.
00:13:23 The meaning of life is...
00:13:29 And BARD gives you a contextual answer and then shows the highest probability response.
00:13:35 The power of generative AI comes from the use of transformers.
00:13:41 Transformers produced the 2018 revolution in natural language processing.
00:13:47 At a high level, a transformer model consists of an encoder and decoder.
00:13:53 The encoder encodes the input sequence and passes it to the decoder, which learns how to decode the representation for a relevant task.
00:13:59 In transformers, hallucinations are words or phrases that are generated by the model that are often nonsensical or grammatically incorrect.
00:14:11 Hallucinations can be caused by a number of factors, including the model is not trained on enough data, or the model is trained on noisy or dirty data, or the model is not given enough context, or the model is not given enough constraints.
00:14:23 Hallucinations can be a problem for transformers because they can make the output text difficult to understand.
00:14:35 They can also make the model more likely to generate incorrect or misleading information.
00:14:47 A prompt is a short piece of text that is given to the large language model as input, and it can be used to control the output of the model in a variety of ways.
00:14:59 is the process of creating a prompt that will generate the desired output from a lower-language model.
00:15:05 As previously mentioned, Gen AI depends a lot on the training data that you have fed into it, and it analyzes the patterns and structures of the input data, and thus learns.
00:15:10 But with access to a browser-based prompt, you, the user, can generate your own content.
00:15:16 We've shown illustrations of the types of input based upon data.
00:15:21 Here are the associated model types.
00:15:27 Text-to-text.
00:15:32 Well, text-to-text models take a natural language input and produces a text output.
00:15:38 These models are trained to learn the mapping between a pair of text, e.g., for example, translation from one language to another.
00:15:43 Text-to-image.
00:15:49 Text-to-image models are trained on a large set of images, each captioned with a short text description.
00:15:54 Diffusion is one method used.
00:16:00 to achieve this, text-to-video and text-to-3D.
00:16:06 Text-to-video models aim to generate a video representation from text input.
00:16:13 The input text can be anything from a single sentence to a full script, and the output is a video that corresponds to the input text.
00:16:20 Similarly, text-to-3D models generate three-dimensional objects that correspond to a user's text description.
00:16:26 For example, this can be used in games or other 3D worlds.
00:16:33 Text-to-task.
00:16:40 Text-to-task models are trained to perform a defined task or action based on text input.
00:16:46 This task can be a wide range of actions, such as answering a question, performing a search, making a prediction, or taking some sort of action.
00:16:53 For example, a text-to-task model could be trained to navigate.
00:16:59 a web UI, or make changes to a doc through the GUI.
00:17:08 A foundation model is a large AI model pre-trained on a vast quantity of data designed to be adapted or fine-tuned to a wide range of downstream tasks, such as sentiment analysis, image captioning, and object recognition.
00:17:17 Foundation models have the potential to revolutionize many industries, including healthcare, finance, and customer service.
00:17:25 They can be used to detect fraud and provide personalized customer support.
00:17:34 Vertix AI offers a model garden that includes foundation models.
00:17:42 The language foundation models include Palm API for chat and text.
00:17:51 The vision foundation models include stable diffusion, which has been shown to be effective at generating high-quality images from text descriptions.
00:18:00 Let's say you have a use case where you need to gather sentiments about how your customers are feeling about your product or service.
00:18:06 You can use the Classification Task Sentiment Analysis task model for just that purpose.
00:18:12 And what if you needed to perform occupancy analytics?
00:18:18 There is a task model for your use case.
00:18:24 Shown here are Gen AI applications.
00:18:30 Let's look at an example of code generation, shown in the second block under Code at the top.
00:18:36 In this example, I've input a code file conversion problem, converting from Python to JSON.
00:18:42 I use BART and I insert into the prompt box the following.
00:18:48 I have a pandas data frame with two columns, one with the file name and one with the hour in which it is generated.
00:18:54 I'm trying to convert this into a JSON file in the format shown on screen.
00:19:00 BART returns the steps I need to do this and the code snippet.
00:19:08 And here, my output is in a JSON format.
00:19:17 It gets better.
00:19:25 I happen to be using Google's free browser-based Jupyter Notebook known as Colab, and I simply export the Python code to Google's Colab.
00:19:34 To summarize, BART code generation can help you debug your lines of source code, explain your code to you line by line, craft SQL queries for your database, translate code from one language to another, and generate documentation and tutorials for source code.
00:19:42 Generative AI Studio lets you quickly explore and customize Gen AI models that you can leverage in your applications on Google Cloud.
00:19:51 Generative AI Studio helps developers create and deploy Gen AI models by providing
00:20:00 a variety of tools and resources that make it easy to get started.
00:20:12 For example, there is a library of pre-trained models, there is a tool for fine-tuning models, there is a tool for deploying models to production, and there is a community forum for developers to share ideas and collaborate.
00:20:24 Generative AI App Builder lets you create Gen AI apps without having to write any code.
00:20:36 Gen AI App Builder has a drag-and-drop interface that makes it easy to design and build apps, it has a visual editor that makes it easy to create and edit app content, it has a built-in search engine that allows users to search for information within the app, and it has a conversational AI engine that helps users to interact with the app using natural language.
00:20:48 You can create your own digital assistants, custom search engines, knowledge bases, training applications,
00:21:00 and much more.
00:21:08 Palm API lets you test and experiment with Google's large language models and Gen AI tools.
00:21:17 To make prototyping quick and more accessible, developers can integrate Palm API with Maker Suite and use it to access the API using a graphical user interface.
00:21:25 The suite includes a number of different tools, such as a model training tool, a model deployment tool, and a model monitoring tool.
00:21:34 The model training tool helps developers train ML models on their data using different algorithms.
00:21:42 The model deployment tool helps developers deploy ML models to production with a number of different deployment options.
00:21:51 The model monitoring tool helps developers monitor the performance of their ML models in production using a dashboard and a number of different metrics.
00:22:00 Thank you for watching our course, Introduction to Generative AI.
